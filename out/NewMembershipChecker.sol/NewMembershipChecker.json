{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daoAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "isMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061018e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806339ac7a0814610030575b600080fd5b61004361003e366004610125565b610057565b604051901515815260200160405180910390f35b60006001600160a01b0383166100b45760405162461bcd60e51b815260206004820152601760248201527f41757449443a2064616f4164647265737320656d70747900000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166101005760405162461bcd60e51b815260206004820152601360248201527241757449443a206d656d62657220656d70747960681b60448201526064016100ab565b50600092915050565b80356001600160a01b038116811461012057600080fd5b919050565b6000806040838503121561013857600080fd5b61014183610109565b915061014f60208401610109565b9050925092905056fea2646970667358221220fe37c071fc556e2cce537e31ac91f861c66d610f8d3613715ab59c6a3b62cb4a64736f6c63430008130033",
    "sourceMap": "237:681:54:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806339ac7a0814610030575b600080fd5b61004361003e366004610125565b610057565b604051901515815260200160405180910390f35b60006001600160a01b0383166100b45760405162461bcd60e51b815260206004820152601760248201527f41757449443a2064616f4164647265737320656d70747900000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166101005760405162461bcd60e51b815260206004820152601360248201527241757449443a206d656d62657220656d70747960681b60448201526064016100ab565b50600092915050565b80356001600160a01b038116811461012057600080fd5b919050565b6000806040838503121561013857600080fd5b61014183610109565b915061014f60208401610109565b9050925092905056fea2646970667358221220fe37c071fc556e2cce537e31ac91f861c66d610f8d3613715ab59c6a3b62cb4a64736f6c63430008130033",
    "sourceMap": "237:681:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:347;;;;;;:::i;:::-;;:::i;:::-;;;622:14:153;;615:22;597:41;;585:2;570:18;569:347:54;;;;;;;;653:4;-1:-1:-1;;;;;677:24:54;;669:60;;;;-1:-1:-1;;;669:60:54;;851:2:153;669:60:54;;;833:21:153;890:2;870:18;;;863:30;929:25;909:18;;;902:53;972:18;;669:60:54;;;;;;;;;-1:-1:-1;;;;;747:20:54;;739:52;;;;-1:-1:-1;;;739:52:54;;1203:2:153;739:52:54;;;1185:21:153;1242:2;1222:18;;;1215:30;-1:-1:-1;;;1261:18:153;;;1254:49;1320:18;;739:52:54;1001:343:153;739:52:54;-1:-1:-1;904:5:54;569:347;;;;:::o;14:173:153:-;82:20;;-1:-1:-1;;;;;131:31:153;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isMember(address,address)": "39ac7a08"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isMember(address,address)\":{\"params\":{\"daoAddress\":\"the address of the DAO contract\",\"member\":\"the address of the member for which the check is made\"},\"returns\":{\"_0\":\"true if the user address is a member, false otherwise\"}}},\"title\":\"NewMembershipChecker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isMember(address,address)\":{\"notice\":\"Implements a check if an address is a member of a DAO\"}},\"notice\":\"Implementation of IMembershipChecker for your new DAO standard\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/membershipCheckers/NewMembershipChecker.sol\":\"NewMembershipChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/daoStandards/IMoloch.sol\":{\"keccak256\":\"0xed4044d553bbf0e6f998afacbb217ebd3e661c1b734f7b9ff3b43cac4ee6774a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://304440b6cbf1900d217e618f4d477623456667b8eb28b1fdee01d88d636361b9\",\"dweb:/ipfs/QmTtpWspqpHWPpgF1G88dVxrnomr1SKsmweRHFWdavPNg3\"]},\"contracts/membershipCheckers/IMembershipChecker.sol\":{\"keccak256\":\"0x0db016237de654ad5c83738028d7a79515fb7afc629a3cfa068838a50efa6b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc2313c05722a2e5a671bbb0f8ff9e6b012a72912e80c289bdb43a193e9ca82\",\"dweb:/ipfs/QmaPeuBMoAyeyp4fNxZxo9JWLaWCb93s279PdqXfYRY5fa\"]},\"contracts/membershipCheckers/NewMembershipChecker.sol\":{\"keccak256\":\"0x2caaa03414d6d13d3655f96c614ccb3ecf07b427850a235bb100f6feb8a3eddb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8b3844466b88f3a2e9e8cc722b53308d3c0704894dd00dbaa93dbf8236c6cbe\",\"dweb:/ipfs/Qme7jUkUW6s8SaYVhbyEPYth9rFPNG84B3cN8pnYRAQUs8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "daoAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isMember(address,address)": {
            "params": {
              "daoAddress": "the address of the DAO contract",
              "member": "the address of the member for which the check is made"
            },
            "returns": {
              "_0": "true if the user address is a member, false otherwise"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isMember(address,address)": {
            "notice": "Implements a check if an address is a member of a DAO"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/membershipCheckers/NewMembershipChecker.sol": "NewMembershipChecker"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/daoStandards/IMoloch.sol": {
        "keccak256": "0xed4044d553bbf0e6f998afacbb217ebd3e661c1b734f7b9ff3b43cac4ee6774a",
        "urls": [
          "bzz-raw://304440b6cbf1900d217e618f4d477623456667b8eb28b1fdee01d88d636361b9",
          "dweb:/ipfs/QmTtpWspqpHWPpgF1G88dVxrnomr1SKsmweRHFWdavPNg3"
        ],
        "license": "MIT"
      },
      "contracts/membershipCheckers/IMembershipChecker.sol": {
        "keccak256": "0x0db016237de654ad5c83738028d7a79515fb7afc629a3cfa068838a50efa6b13",
        "urls": [
          "bzz-raw://1fc2313c05722a2e5a671bbb0f8ff9e6b012a72912e80c289bdb43a193e9ca82",
          "dweb:/ipfs/QmaPeuBMoAyeyp4fNxZxo9JWLaWCb93s279PdqXfYRY5fa"
        ],
        "license": "MIT"
      },
      "contracts/membershipCheckers/NewMembershipChecker.sol": {
        "keccak256": "0x2caaa03414d6d13d3655f96c614ccb3ecf07b427850a235bb100f6feb8a3eddb",
        "urls": [
          "bzz-raw://e8b3844466b88f3a2e9e8cc722b53308d3c0704894dd00dbaa93dbf8236c6cbe",
          "dweb:/ipfs/Qme7jUkUW6s8SaYVhbyEPYth9rFPNG84B3cN8pnYRAQUs8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/membershipCheckers/NewMembershipChecker.sol",
    "id": 4063,
    "exportedSymbols": {
      "IMembershipChecker": [
        3910
      ],
      "IMoloch": [
        1562
      ],
      "NewMembershipChecker": [
        4062
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:888:54",
    "nodes": [
      {
        "id": 4022,
        "nodeType": "PragmaDirective",
        "src": "31:23:54",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 4023,
        "nodeType": "ImportDirective",
        "src": "56:34:54",
        "nodes": [],
        "absolutePath": "contracts/membershipCheckers/IMembershipChecker.sol",
        "file": "./IMembershipChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4063,
        "sourceUnit": 3911,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4024,
        "nodeType": "ImportDirective",
        "src": "91:37:54",
        "nodes": [],
        "absolutePath": "contracts/daoStandards/IMoloch.sol",
        "file": "../daoStandards/IMoloch.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4063,
        "sourceUnit": 1563,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4062,
        "nodeType": "ContractDefinition",
        "src": "237:681:54",
        "nodes": [
          {
            "id": 4061,
            "nodeType": "FunctionDefinition",
            "src": "569:347:54",
            "nodes": [],
            "body": {
              "id": 4060,
              "nodeType": "Block",
              "src": "659:257:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4039,
                          "name": "daoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4030,
                          "src": "677:10:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "699:1:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "691:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4040,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "691:7:54",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "691:10:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "677:24:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41757449443a2064616f4164647265737320656d707479",
                        "id": 4045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "703:25:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd385653b549bc7ce64b8cf68c43a54f9cb574e43c20a10d5ff0339753167610",
                          "typeString": "literal_string \"AutID: daoAddress empty\""
                        },
                        "value": "AutID: daoAddress empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd385653b549bc7ce64b8cf68c43a54f9cb574e43c20a10d5ff0339753167610",
                          "typeString": "literal_string \"AutID: daoAddress empty\""
                        }
                      ],
                      "id": 4038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "669:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "669:60:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4047,
                  "nodeType": "ExpressionStatement",
                  "src": "669:60:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4049,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4032,
                          "src": "747:6:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "765:1:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "757:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4050,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "757:7:54",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "757:10:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "747:20:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41757449443a206d656d62657220656d707479",
                        "id": 4055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "769:21:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0486abb82898a15f38a582164c054f4ddd300aa8cb12586a6561cfaeb02ab108",
                          "typeString": "literal_string \"AutID: member empty\""
                        },
                        "value": "AutID: member empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0486abb82898a15f38a582164c054f4ddd300aa8cb12586a6561cfaeb02ab108",
                          "typeString": "literal_string \"AutID: member empty\""
                        }
                      ],
                      "id": 4048,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "739:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:52:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4057,
                  "nodeType": "ExpressionStatement",
                  "src": "739:52:54"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 4058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "904:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 4037,
                  "id": 4059,
                  "nodeType": "Return",
                  "src": "897:12:54"
                }
              ]
            },
            "baseFunctions": [
              3909
            ],
            "documentation": {
              "id": 4028,
              "nodeType": "StructuredDocumentation",
              "src": "295:269:54",
              "text": "@notice Implements a check if an address is a member of a DAO\n @param daoAddress the address of the DAO contract\n @param member the address of the member for which the check is made\n @return true if the user address is a member, false otherwise"
            },
            "functionSelector": "39ac7a08",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMember",
            "nameLocation": "578:8:54",
            "overrides": {
              "id": 4034,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "635:8:54"
            },
            "parameters": {
              "id": 4033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4030,
                  "mutability": "mutable",
                  "name": "daoAddress",
                  "nameLocation": "595:10:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 4061,
                  "src": "587:18:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4032,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "615:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 4061,
                  "src": "607:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:36:54"
            },
            "returnParameters": {
              "id": 4037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4036,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4061,
                  "src": "653:4:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4035,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:6:54"
            },
            "scope": 4062,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4026,
              "name": "IMembershipChecker",
              "nameLocations": [
                "270:18:54"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3910,
              "src": "270:18:54"
            },
            "id": 4027,
            "nodeType": "InheritanceSpecifier",
            "src": "270:18:54"
          }
        ],
        "canonicalName": "NewMembershipChecker",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4025,
          "nodeType": "StructuredDocumentation",
          "src": "130:107:54",
          "text": "@title NewMembershipChecker\n @notice Implementation of IMembershipChecker for your new DAO standard"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4062,
          3910
        ],
        "name": "NewMembershipChecker",
        "nameLocation": "246:20:54",
        "scope": 4063,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 54
}