{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daoAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "isMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610218806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806339ac7a0814610030575b600080fd5b61004361003e36600461018d565b610057565b604051901515815260200160405180910390f35b60006001600160a01b0383166100b45760405162461bcd60e51b815260206004820152601760248201527f41757449443a2064616f4164647265737320656d70747900000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166101005760405162461bcd60e51b815260206004820152601360248201527241757449443a206d656d62657220656d70747960681b60448201526064016100ab565b60405163288c314960e21b81526001600160a01b03838116600483015284169063a230c52490602401602060405180830381865afa158015610146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016a91906101c0565b9392505050565b80356001600160a01b038116811461018857600080fd5b919050565b600080604083850312156101a057600080fd5b6101a983610171565b91506101b760208401610171565b90509250929050565b6000602082840312156101d257600080fd5b8151801515811461016a57600080fdfea264697066735822122069cfa8e9b242eda6900545dfe475a4df15085d480085ff45756a53c4b8084e3e64736f6c63430008130033",
    "sourceMap": "249:654:47:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806339ac7a0814610030575b600080fd5b61004361003e36600461018d565b610057565b604051901515815260200160405180910390f35b60006001600160a01b0383166100b45760405162461bcd60e51b815260206004820152601760248201527f41757449443a2064616f4164647265737320656d70747900000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166101005760405162461bcd60e51b815260206004820152601360248201527241757449443a206d656d62657220656d70747960681b60448201526064016100ab565b60405163288c314960e21b81526001600160a01b03838116600483015284169063a230c52490602401602060405180830381865afa158015610146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016a91906101c0565b9392505050565b80356001600160a01b038116811461018857600080fd5b919050565b600080604083850312156101a057600080fd5b6101a983610171565b91506101b760208401610171565b90509250929050565b6000602082840312156101d257600080fd5b8151801515811461016a57600080fdfea264697066735822122069cfa8e9b242eda6900545dfe475a4df15085d480085ff45756a53c4b8084e3e64736f6c63430008130033",
    "sourceMap": "249:654:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:293;;;;;;:::i;:::-;;:::i;:::-;;;622:14:160;;615:22;597:41;;585:2;570:18;607:293:47;;;;;;;;691:4;-1:-1:-1;;;;;716:24:47;;708:60;;;;-1:-1:-1;;;708:60:47;;851:2:160;708:60:47;;;833:21:160;890:2;870:18;;;863:30;929:25;909:18;;;902:53;972:18;;708:60:47;;;;;;;;;-1:-1:-1;;;;;787:20:47;;779:52;;;;-1:-1:-1;;;779:52:47;;1203:2:160;779:52:47;;;1185:21:160;1242:2;1222:18;;;1215:30;-1:-1:-1;;;1261:18:160;;;1254:49;1320:18;;779:52:47;1001:343:160;779:52:47;851:41;;-1:-1:-1;;;851:41:47;;-1:-1:-1;;;;;1513:32:160;;;851:41:47;;;1495:51:160;851:33:47;;;;;1468:18:160;;851:41:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;844:48;607:293;-1:-1:-1;;;607:293:47:o;14:173:160:-;82:20;;-1:-1:-1;;;;;131:31:160;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;1557:277::-;1624:6;1677:2;1665:9;1656:7;1652:23;1648:32;1645:52;;;1693:1;1690;1683:12;1645:52;1725:9;1719:16;1778:5;1771:13;1764:21;1757:5;1754:32;1744:60;;1800:1;1797;1790:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isMember(address,address)": "39ac7a08"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isMember(address,address)\":{\"params\":{\"daoAddress\":\"the address of the SW Legacy Contract\",\"member\":\"the address of the member for which the check is made\"},\"returns\":{\"_0\":\"true if the user address is a member, false otherwise\"}}},\"title\":\"SWLegacyMembershipChecker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isMember(address,address)\":{\"notice\":\"Implements a check if an address is a member of a SW Legacy DAO\"}},\"notice\":\"Implementation of IMembershipChecker for SW Legacy DAO type\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/membershipCheckers/SWLegacyMembershipChecker.sol\":\"SWLegacyMembershipChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/membershipCheckers/IMembershipChecker.sol\":{\"keccak256\":\"0xb2502e2bc515647bcd08a490841a9b343df526bcf16cc5f3cb9b8bd9d6ff0e0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61e8baf262b498b8eeb09bc61625caf0b5e4356167d7201793b65e85443226c5\",\"dweb:/ipfs/QmQvJuqBTY8w4KRrdKB6T8PYmrXxjMbBQq5f6CYGC97pQe\"]},\"contracts/membershipCheckers/SWLegacyMembershipChecker.sol\":{\"keccak256\":\"0xe2c31c88a310bc9c85b561a7db5205d1a467d1d7d65ac3d9f968b08e9570e9b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f60b171a0a7a64e620c26bebde706c7e95c2491259eae574505da973f15cc499\",\"dweb:/ipfs/QmUjhAChDyhDz8wtTzm4RoqJfK2SAw9ubShXRWhtoyyqCt\"]},\"contracts/standards/ISWLegacyDAO.sol\":{\"keccak256\":\"0xf10cc9eff6940fbcd80c6df478c2abef483a006e72409a7e21f3a7e46be0900c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23385d1703aa5768f0fde0ae1da2d2ca32b3b54d732eeb7c0853da5c031f0caa\",\"dweb:/ipfs/QmepAN6hMoDzKnczXGnxh4oh4W2RxDP91U2ygUbpeikezP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "daoAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isMember(address,address)": {
            "params": {
              "daoAddress": "the address of the SW Legacy Contract",
              "member": "the address of the member for which the check is made"
            },
            "returns": {
              "_0": "true if the user address is a member, false otherwise"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isMember(address,address)": {
            "notice": "Implements a check if an address is a member of a SW Legacy DAO"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/membershipCheckers/SWLegacyMembershipChecker.sol": "SWLegacyMembershipChecker"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/membershipCheckers/IMembershipChecker.sol": {
        "keccak256": "0xb2502e2bc515647bcd08a490841a9b343df526bcf16cc5f3cb9b8bd9d6ff0e0a",
        "urls": [
          "bzz-raw://61e8baf262b498b8eeb09bc61625caf0b5e4356167d7201793b65e85443226c5",
          "dweb:/ipfs/QmQvJuqBTY8w4KRrdKB6T8PYmrXxjMbBQq5f6CYGC97pQe"
        ],
        "license": "MIT"
      },
      "contracts/membershipCheckers/SWLegacyMembershipChecker.sol": {
        "keccak256": "0xe2c31c88a310bc9c85b561a7db5205d1a467d1d7d65ac3d9f968b08e9570e9b9",
        "urls": [
          "bzz-raw://f60b171a0a7a64e620c26bebde706c7e95c2491259eae574505da973f15cc499",
          "dweb:/ipfs/QmUjhAChDyhDz8wtTzm4RoqJfK2SAw9ubShXRWhtoyyqCt"
        ],
        "license": "MIT"
      },
      "contracts/standards/ISWLegacyDAO.sol": {
        "keccak256": "0xf10cc9eff6940fbcd80c6df478c2abef483a006e72409a7e21f3a7e46be0900c",
        "urls": [
          "bzz-raw://23385d1703aa5768f0fde0ae1da2d2ca32b3b54d732eeb7c0853da5c031f0caa",
          "dweb:/ipfs/QmepAN6hMoDzKnczXGnxh4oh4W2RxDP91U2ygUbpeikezP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/membershipCheckers/SWLegacyMembershipChecker.sol",
    "id": 6033,
    "exportedSymbols": {
      "IMembershipChecker": [
        5833
      ],
      "ISWLegacyDAO": [
        12276
      ],
      "SWLegacyMembershipChecker": [
        6032
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:873:47",
    "nodes": [
      {
        "id": 5987,
        "nodeType": "PragmaDirective",
        "src": "32:23:47",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 5988,
        "nodeType": "ImportDirective",
        "src": "59:34:47",
        "nodes": [],
        "absolutePath": "contracts/membershipCheckers/IMembershipChecker.sol",
        "file": "./IMembershipChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6033,
        "sourceUnit": 5834,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5989,
        "nodeType": "ImportDirective",
        "src": "95:39:47",
        "nodes": [],
        "absolutePath": "contracts/standards/ISWLegacyDAO.sol",
        "file": "../standards/ISWLegacyDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6033,
        "sourceUnit": 12277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6032,
        "nodeType": "ContractDefinition",
        "src": "249:654:47",
        "nodes": [
          {
            "id": 6031,
            "nodeType": "FunctionDefinition",
            "src": "607:293:47",
            "nodes": [],
            "body": {
              "id": 6030,
              "nodeType": "Block",
              "src": "697:203:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6004,
                          "name": "daoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5995,
                          "src": "716:10:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "738:1:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "730:7:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6005,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "730:7:47",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "730:10:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "716:24:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41757449443a2064616f4164647265737320656d707479",
                        "id": 6010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "742:25:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd385653b549bc7ce64b8cf68c43a54f9cb574e43c20a10d5ff0339753167610",
                          "typeString": "literal_string \"AutID: daoAddress empty\""
                        },
                        "value": "AutID: daoAddress empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd385653b549bc7ce64b8cf68c43a54f9cb574e43c20a10d5ff0339753167610",
                          "typeString": "literal_string \"AutID: daoAddress empty\""
                        }
                      ],
                      "id": 6003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "708:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:60:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6012,
                  "nodeType": "ExpressionStatement",
                  "src": "708:60:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6014,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5997,
                          "src": "787:6:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "805:1:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "797:7:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6015,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "797:7:47",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "797:10:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "787:20:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41757449443a206d656d62657220656d707479",
                        "id": 6020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "809:21:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0486abb82898a15f38a582164c054f4ddd300aa8cb12586a6561cfaeb02ab108",
                          "typeString": "literal_string \"AutID: member empty\""
                        },
                        "value": "AutID: member empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0486abb82898a15f38a582164c054f4ddd300aa8cb12586a6561cfaeb02ab108",
                          "typeString": "literal_string \"AutID: member empty\""
                        }
                      ],
                      "id": 6013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "779:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:52:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6022,
                  "nodeType": "ExpressionStatement",
                  "src": "779:52:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6027,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5997,
                        "src": "885:6:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6024,
                            "name": "daoAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5995,
                            "src": "864:10:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6023,
                          "name": "ISWLegacyDAO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12276,
                          "src": "851:12:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISWLegacyDAO_$12276_$",
                            "typeString": "type(contract ISWLegacyDAO)"
                          }
                        },
                        "id": 6025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "851:24:47",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISWLegacyDAO_$12276",
                          "typeString": "contract ISWLegacyDAO"
                        }
                      },
                      "id": 6026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "876:8:47",
                      "memberName": "isMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12275,
                      "src": "851:33:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 6028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:41:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6002,
                  "id": 6029,
                  "nodeType": "Return",
                  "src": "844:48:47"
                }
              ]
            },
            "baseFunctions": [
              5832
            ],
            "documentation": {
              "id": 5993,
              "nodeType": "StructuredDocumentation",
              "src": "313:288:47",
              "text": "@notice Implements a check if an address is a member of a SW Legacy DAO\n @param daoAddress the address of the SW Legacy Contract\n @param member the address of the member for which the check is made\n @return true if the user address is a member, false otherwise"
            },
            "functionSelector": "39ac7a08",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMember",
            "nameLocation": "616:8:47",
            "overrides": {
              "id": 5999,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "673:8:47"
            },
            "parameters": {
              "id": 5998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5995,
                  "mutability": "mutable",
                  "name": "daoAddress",
                  "nameLocation": "633:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 6031,
                  "src": "625:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5997,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "653:6:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 6031,
                  "src": "645:14:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "624:36:47"
            },
            "returnParameters": {
              "id": 6002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6001,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6031,
                  "src": "691:4:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6000,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:4:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "690:6:47"
            },
            "scope": 6032,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5991,
              "name": "IMembershipChecker",
              "nameLocations": [
                "287:18:47"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5833,
              "src": "287:18:47"
            },
            "id": 5992,
            "nodeType": "InheritanceSpecifier",
            "src": "287:18:47"
          }
        ],
        "canonicalName": "SWLegacyMembershipChecker",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5990,
          "nodeType": "StructuredDocumentation",
          "src": "138:111:47",
          "text": "@title SWLegacyMembershipChecker\n @notice Implementation of IMembershipChecker for SW Legacy DAO type"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6032,
          5833
        ],
        "name": "SWLegacyMembershipChecker",
        "nameLocation": "258:25:47",
        "scope": 6033,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 47
}