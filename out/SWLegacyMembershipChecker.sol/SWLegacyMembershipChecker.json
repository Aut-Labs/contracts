{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daoAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "isMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610218806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806339ac7a0814610030575b600080fd5b61004361003e36600461018d565b610057565b604051901515815260200160405180910390f35b60006001600160a01b0383166100b45760405162461bcd60e51b815260206004820152601760248201527f41757449443a2064616f4164647265737320656d70747900000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166101005760405162461bcd60e51b815260206004820152601360248201527241757449443a206d656d62657220656d70747960681b60448201526064016100ab565b60405163288c314960e21b81526001600160a01b03838116600483015284169063a230c52490602401602060405180830381865afa158015610146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016a91906101c0565b9392505050565b80356001600160a01b038116811461018857600080fd5b919050565b600080604083850312156101a057600080fd5b6101a983610171565b91506101b760208401610171565b90509250929050565b6000602082840312156101d257600080fd5b8151801515811461016a57600080fdfea26469706673582212208d1e50c2f2203b895f7f9aca8a501c4d9c28682c6ec854fa88921243f99319d564736f6c63430008130033",
    "sourceMap": "244:643:57:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806339ac7a0814610030575b600080fd5b61004361003e36600461018d565b610057565b604051901515815260200160405180910390f35b60006001600160a01b0383166100b45760405162461bcd60e51b815260206004820152601760248201527f41757449443a2064616f4164647265737320656d70747900000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166101005760405162461bcd60e51b815260206004820152601360248201527241757449443a206d656d62657220656d70747960681b60448201526064016100ab565b60405163288c314960e21b81526001600160a01b03838116600483015284169063a230c52490602401602060405180830381865afa158015610146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016a91906101c0565b9392505050565b80356001600160a01b038116811461018857600080fd5b919050565b600080604083850312156101a057600080fd5b6101a983610171565b91506101b760208401610171565b90509250929050565b6000602082840312156101d257600080fd5b8151801515811461016a57600080fdfea26469706673582212208d1e50c2f2203b895f7f9aca8a501c4d9c28682c6ec854fa88921243f99319d564736f6c63430008130033",
    "sourceMap": "244:643:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:288;;;;;;:::i;:::-;;:::i;:::-;;;622:14:154;;615:22;597:41;;585:2;570:18;597:288:57;;;;;;;;681:4;-1:-1:-1;;;;;705:24:57;;697:60;;;;-1:-1:-1;;;697:60:57;;851:2:154;697:60:57;;;833:21:154;890:2;870:18;;;863:30;929:25;909:18;;;902:53;972:18;;697:60:57;;;;;;;;;-1:-1:-1;;;;;775:20:57;;767:52;;;;-1:-1:-1;;;767:52:57;;1203:2:154;767:52:57;;;1185:21:154;1242:2;1222:18;;;1215:30;-1:-1:-1;;;1261:18:154;;;1254:49;1320:18;;767:52:57;1001:343:154;767:52:57;837:41;;-1:-1:-1;;;837:41:57;;-1:-1:-1;;;;;1513:32:154;;;837:41:57;;;1495:51:154;837:33:57;;;;;1468:18:154;;837:41:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;830:48;597:288;-1:-1:-1;;;597:288:57:o;14:173:154:-;82:20;;-1:-1:-1;;;;;131:31:154;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;1557:277::-;1624:6;1677:2;1665:9;1656:7;1652:23;1648:32;1645:52;;;1693:1;1690;1683:12;1645:52;1725:9;1719:16;1778:5;1771:13;1764:21;1757:5;1754:32;1744:60;;1800:1;1797;1790:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isMember(address,address)": "39ac7a08"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isMember(address,address)\":{\"params\":{\"daoAddress\":\"the address of the SW Legacy Contract\",\"member\":\"the address of the member for which the check is made\"},\"returns\":{\"_0\":\"true if the user address is a member, false otherwise\"}}},\"title\":\"SWLegacyMembershipChecker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isMember(address,address)\":{\"notice\":\"Implements a check if an address is a member of a SW Legacy DAO\"}},\"notice\":\"Implementation of IMembershipChecker for SW Legacy DAO type\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/membershipCheckers/SWLegacyMembershipChecker.sol\":\"SWLegacyMembershipChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/daoStandards/ISWLegacyDAO.sol\":{\"keccak256\":\"0x42c0f76118049b4de6a126f06827b6f1b32a847e3e4a95a98d9a6ebbf5114edc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c43076d1725c08913d6f68dc212acc5c306d08db173014852b9aac6442fe00a\",\"dweb:/ipfs/QmWE87eXuhecBA9BUxjYYYca2PDdwgTLrEdrx2NrpsX9JU\"]},\"contracts/membershipCheckers/IMembershipChecker.sol\":{\"keccak256\":\"0x0db016237de654ad5c83738028d7a79515fb7afc629a3cfa068838a50efa6b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc2313c05722a2e5a671bbb0f8ff9e6b012a72912e80c289bdb43a193e9ca82\",\"dweb:/ipfs/QmaPeuBMoAyeyp4fNxZxo9JWLaWCb93s279PdqXfYRY5fa\"]},\"contracts/membershipCheckers/SWLegacyMembershipChecker.sol\":{\"keccak256\":\"0x668a258111669d946cabc7ea0a73cb8c4516c5edc40b3bd839a74bd8c4f2cbb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e9e759e878c4b6243d5413fe45e4c8829645b4f210adb2f9e4e9cff27186b98\",\"dweb:/ipfs/QmXuB4Fv1J1YWwBmzZZcHU8x5UAXLejbMkD3uC5UP37NVd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "daoAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isMember(address,address)": {
            "params": {
              "daoAddress": "the address of the SW Legacy Contract",
              "member": "the address of the member for which the check is made"
            },
            "returns": {
              "_0": "true if the user address is a member, false otherwise"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isMember(address,address)": {
            "notice": "Implements a check if an address is a member of a SW Legacy DAO"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/membershipCheckers/SWLegacyMembershipChecker.sol": "SWLegacyMembershipChecker"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/daoStandards/ISWLegacyDAO.sol": {
        "keccak256": "0x42c0f76118049b4de6a126f06827b6f1b32a847e3e4a95a98d9a6ebbf5114edc",
        "urls": [
          "bzz-raw://6c43076d1725c08913d6f68dc212acc5c306d08db173014852b9aac6442fe00a",
          "dweb:/ipfs/QmWE87eXuhecBA9BUxjYYYca2PDdwgTLrEdrx2NrpsX9JU"
        ],
        "license": "MIT"
      },
      "contracts/membershipCheckers/IMembershipChecker.sol": {
        "keccak256": "0x0db016237de654ad5c83738028d7a79515fb7afc629a3cfa068838a50efa6b13",
        "urls": [
          "bzz-raw://1fc2313c05722a2e5a671bbb0f8ff9e6b012a72912e80c289bdb43a193e9ca82",
          "dweb:/ipfs/QmaPeuBMoAyeyp4fNxZxo9JWLaWCb93s279PdqXfYRY5fa"
        ],
        "license": "MIT"
      },
      "contracts/membershipCheckers/SWLegacyMembershipChecker.sol": {
        "keccak256": "0x668a258111669d946cabc7ea0a73cb8c4516c5edc40b3bd839a74bd8c4f2cbb5",
        "urls": [
          "bzz-raw://7e9e759e878c4b6243d5413fe45e4c8829645b4f210adb2f9e4e9cff27186b98",
          "dweb:/ipfs/QmXuB4Fv1J1YWwBmzZZcHU8x5UAXLejbMkD3uC5UP37NVd"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/membershipCheckers/SWLegacyMembershipChecker.sol",
    "id": 5531,
    "exportedSymbols": {
      "IMembershipChecker": [
        5331
      ],
      "ISWLegacyDAO": [
        3066
      ],
      "SWLegacyMembershipChecker": [
        5530
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:857:57",
    "nodes": [
      {
        "id": 5485,
        "nodeType": "PragmaDirective",
        "src": "31:23:57",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 5486,
        "nodeType": "ImportDirective",
        "src": "56:34:57",
        "nodes": [],
        "absolutePath": "contracts/membershipCheckers/IMembershipChecker.sol",
        "file": "./IMembershipChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5531,
        "sourceUnit": 5332,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5487,
        "nodeType": "ImportDirective",
        "src": "91:42:57",
        "nodes": [],
        "absolutePath": "contracts/daoStandards/ISWLegacyDAO.sol",
        "file": "../daoStandards/ISWLegacyDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5531,
        "sourceUnit": 3067,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5530,
        "nodeType": "ContractDefinition",
        "src": "244:643:57",
        "nodes": [
          {
            "id": 5529,
            "nodeType": "FunctionDefinition",
            "src": "597:288:57",
            "nodes": [],
            "body": {
              "id": 5528,
              "nodeType": "Block",
              "src": "687:198:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5502,
                          "name": "daoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5493,
                          "src": "705:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "727:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "719:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5503,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "719:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "719:10:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "705:24:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41757449443a2064616f4164647265737320656d707479",
                        "id": 5508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "731:25:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd385653b549bc7ce64b8cf68c43a54f9cb574e43c20a10d5ff0339753167610",
                          "typeString": "literal_string \"AutID: daoAddress empty\""
                        },
                        "value": "AutID: daoAddress empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd385653b549bc7ce64b8cf68c43a54f9cb574e43c20a10d5ff0339753167610",
                          "typeString": "literal_string \"AutID: daoAddress empty\""
                        }
                      ],
                      "id": 5501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "697:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "697:60:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5510,
                  "nodeType": "ExpressionStatement",
                  "src": "697:60:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5512,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5495,
                          "src": "775:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "793:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "785:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5513,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "785:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "785:10:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "775:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41757449443a206d656d62657220656d707479",
                        "id": 5518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "797:21:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0486abb82898a15f38a582164c054f4ddd300aa8cb12586a6561cfaeb02ab108",
                          "typeString": "literal_string \"AutID: member empty\""
                        },
                        "value": "AutID: member empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0486abb82898a15f38a582164c054f4ddd300aa8cb12586a6561cfaeb02ab108",
                          "typeString": "literal_string \"AutID: member empty\""
                        }
                      ],
                      "id": 5511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "767:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:52:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5520,
                  "nodeType": "ExpressionStatement",
                  "src": "767:52:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5525,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5495,
                        "src": "871:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5522,
                            "name": "daoAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5493,
                            "src": "850:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5521,
                          "name": "ISWLegacyDAO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3066,
                          "src": "837:12:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISWLegacyDAO_$3066_$",
                            "typeString": "type(contract ISWLegacyDAO)"
                          }
                        },
                        "id": 5523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "837:24:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISWLegacyDAO_$3066",
                          "typeString": "contract ISWLegacyDAO"
                        }
                      },
                      "id": 5524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "862:8:57",
                      "memberName": "isMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "837:33:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 5526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:41:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5500,
                  "id": 5527,
                  "nodeType": "Return",
                  "src": "830:48:57"
                }
              ]
            },
            "baseFunctions": [
              5330
            ],
            "documentation": {
              "id": 5491,
              "nodeType": "StructuredDocumentation",
              "src": "307:285:57",
              "text": "@notice Implements a check if an address is a member of a SW Legacy DAO\n @param daoAddress the address of the SW Legacy Contract\n @param member the address of the member for which the check is made\n @return true if the user address is a member, false otherwise"
            },
            "functionSelector": "39ac7a08",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMember",
            "nameLocation": "606:8:57",
            "overrides": {
              "id": 5497,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "663:8:57"
            },
            "parameters": {
              "id": 5496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5493,
                  "mutability": "mutable",
                  "name": "daoAddress",
                  "nameLocation": "623:10:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 5529,
                  "src": "615:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5495,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "643:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 5529,
                  "src": "635:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "614:36:57"
            },
            "returnParameters": {
              "id": 5500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5529,
                  "src": "681:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5498,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "680:6:57"
            },
            "scope": 5530,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5489,
              "name": "IMembershipChecker",
              "nameLocations": [
                "282:18:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5331,
              "src": "282:18:57"
            },
            "id": 5490,
            "nodeType": "InheritanceSpecifier",
            "src": "282:18:57"
          }
        ],
        "canonicalName": "SWLegacyMembershipChecker",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5488,
          "nodeType": "StructuredDocumentation",
          "src": "135:109:57",
          "text": "@title SWLegacyMembershipChecker\n @notice Implementation of IMembershipChecker for SW Legacy DAO type"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5530,
          5331
        ],
        "name": "SWLegacyMembershipChecker",
        "nameLocation": "253:25:57",
        "scope": 5531,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 57
}