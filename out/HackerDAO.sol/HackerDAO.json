{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "Joined",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610125806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a230c524146037578063b688a36314606b575b600080fd5b6057604236600460c1565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b60716073565b005b3360008181526020818152604091829020805460ff1916600117905590519182527f7073afa60b48e833a1a66ebb442bc8e0d19e9f3cc05f34bdcd1da22c8d87f275910160405180910390a1565b60006020828403121560d257600080fd5b81356001600160a01b038116811460e857600080fd5b939250505056fea2646970667358221220959b3b98d58db0bc029e1a261f8546e61d2c5c2ff1085cc3b64d3729222c752c64736f6c63430008130033",
    "sourceMap": "169:287:82:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c8063a230c524146037578063b688a36314606b575b600080fd5b6057604236600460c1565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b60716073565b005b3360008181526020818152604091829020805460ff1916600117905590519182527f7073afa60b48e833a1a66ebb442bc8e0d19e9f3cc05f34bdcd1da22c8d87f275910160405180910390a1565b60006020828403121560d257600080fd5b81356001600160a01b038116811460e857600080fd5b939250505056fea2646970667358221220959b3b98d58db0bc029e1a261f8546e61d2c5c2ff1085cc3b64d3729222c752c64736f6c63430008130033",
    "sourceMap": "169:287:82:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;248:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;470:14:160;;463:22;445:41;;433:2;418:18;248:49:82;;;;;;;350:103;;;:::i;:::-;;;393:10;384:8;:20;;;;;;;;;;;;:27;;-1:-1:-1;;384:27:82;407:4;384:27;;;427:18;;643:51:160;;;427:18:82;;616::160;427::82;;;;;;;350:103::o;14:286:160:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:160;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:160:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isMember(address)": "a230c524",
    "join()": "b688a363"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"Joined\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"isMember\":{\"params\":{\"member\":\"the address for which is going to be checked whether is a member or not\"},\"return\":\"true if the address is a member, false otherwise\",\"returns\":{\"_0\":\"true if the address is a member, false otherwise\"}}},\"title\":\"HackerDAO\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isMember(address)\":{\"notice\":\"Function in the SkillWallet DAO contract for checking for membership\"},\"join()\":{\"notice\":\"Adds new member to the DAO\"}},\"notice\":\"A permissionless HackerDAO for integrating\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/standards/HackerDAO.sol\":\"HackerDAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/standards/HackerDAO.sol\":{\"keccak256\":\"0xa6637f201bedba2afc8fbd5cfaed2df6666e3e971bc5caea584998c06f523861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8052d155374269dccf68e54661cb0c8245099385ecb640510db722af516c7df\",\"dweb:/ipfs/QmTkKdKCsGscUmqQohpkdLVCbF3PpVPnVhG88j5aadoMM7\"]},\"contracts/standards/ISWLegacyDAO.sol\":{\"keccak256\":\"0xf10cc9eff6940fbcd80c6df478c2abef483a006e72409a7e21f3a7e46be0900c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23385d1703aa5768f0fde0ae1da2d2ca32b3b54d732eeb7c0853da5c031f0caa\",\"dweb:/ipfs/QmepAN6hMoDzKnczXGnxh4oh4W2RxDP91U2ygUbpeikezP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Joined",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "join"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isMember(address)": {
            "notice": "Function in the SkillWallet DAO contract for checking for membership"
          },
          "join()": {
            "notice": "Adds new member to the DAO"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/standards/HackerDAO.sol": "HackerDAO"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/standards/HackerDAO.sol": {
        "keccak256": "0xa6637f201bedba2afc8fbd5cfaed2df6666e3e971bc5caea584998c06f523861",
        "urls": [
          "bzz-raw://d8052d155374269dccf68e54661cb0c8245099385ecb640510db722af516c7df",
          "dweb:/ipfs/QmTkKdKCsGscUmqQohpkdLVCbF3PpVPnVhG88j5aadoMM7"
        ],
        "license": "MIT"
      },
      "contracts/standards/ISWLegacyDAO.sol": {
        "keccak256": "0xf10cc9eff6940fbcd80c6df478c2abef483a006e72409a7e21f3a7e46be0900c",
        "urls": [
          "bzz-raw://23385d1703aa5768f0fde0ae1da2d2ca32b3b54d732eeb7c0853da5c031f0caa",
          "dweb:/ipfs/QmepAN6hMoDzKnczXGnxh4oh4W2RxDP91U2ygUbpeikezP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/standards/HackerDAO.sol",
    "id": 12187,
    "exportedSymbols": {
      "HackerDAO": [
        12186
      ],
      "ISWLegacyDAO": [
        12276
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:426:82",
    "nodes": [
      {
        "id": 12155,
        "nodeType": "PragmaDirective",
        "src": "32:23:82",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 12156,
        "nodeType": "ImportDirective",
        "src": "59:28:82",
        "nodes": [],
        "absolutePath": "contracts/standards/ISWLegacyDAO.sol",
        "file": "./ISWLegacyDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12187,
        "sourceUnit": 12277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12186,
        "nodeType": "ContractDefinition",
        "src": "169:287:82",
        "nodes": [
          {
            "id": 12163,
            "nodeType": "EventDefinition",
            "src": "211:29:82",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7073afa60b48e833a1a66ebb442bc8e0d19e9f3cc05f34bdcd1da22c8d87f275",
            "name": "Joined",
            "nameLocation": "217:6:82",
            "parameters": {
              "id": 12162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "232:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 12163,
                  "src": "224:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "223:16:82"
            }
          },
          {
            "id": 12168,
            "nodeType": "VariableDeclaration",
            "src": "248:49:82",
            "nodes": [],
            "baseFunctions": [
              12275
            ],
            "constant": false,
            "functionSelector": "a230c524",
            "mutability": "mutable",
            "name": "isMember",
            "nameLocation": "289:8:82",
            "overrides": {
              "id": 12167,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "280:8:82"
            },
            "scope": 12186,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12166,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12164,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "256:7:82",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "248:24:82",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 12165,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "267:4:82",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 12185,
            "nodeType": "FunctionDefinition",
            "src": "350:103:82",
            "nodes": [],
            "body": {
              "id": 12184,
              "nodeType": "Block",
              "src": "373:80:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12172,
                        "name": "isMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12168,
                        "src": "384:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 12175,
                      "indexExpression": {
                        "expression": {
                          "id": 12173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "393:3:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "397:6:82",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "393:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "384:20:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 12176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "407:4:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "384:27:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12178,
                  "nodeType": "ExpressionStatement",
                  "src": "384:27:82"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "434:3:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "438:6:82",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "434:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12179,
                      "name": "Joined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12163,
                      "src": "427:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:18:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12183,
                  "nodeType": "EmitStatement",
                  "src": "422:23:82"
                }
              ]
            },
            "documentation": {
              "id": 12169,
              "nodeType": "StructuredDocumentation",
              "src": "306:38:82",
              "text": "@notice Adds new member to the DAO"
            },
            "functionSelector": "b688a363",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join",
            "nameLocation": "359:4:82",
            "parameters": {
              "id": 12170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:2:82"
            },
            "returnParameters": {
              "id": 12171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:0:82"
            },
            "scope": 12186,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12158,
              "name": "ISWLegacyDAO",
              "nameLocations": [
                "191:12:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12276,
              "src": "191:12:82"
            },
            "id": 12159,
            "nodeType": "InheritanceSpecifier",
            "src": "191:12:82"
          }
        ],
        "canonicalName": "HackerDAO",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12157,
          "nodeType": "StructuredDocumentation",
          "src": "91:78:82",
          "text": "@title HackerDAO\n @notice A permissionless HackerDAO for integrating"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12186,
          12276
        ],
        "name": "HackerDAO",
        "nameLocation": "178:9:82",
        "scope": 12187,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 82
}