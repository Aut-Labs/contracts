{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "Joined",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610125806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a230c524146037578063b688a36314606b575b600080fd5b6057604236600460c1565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b60716073565b005b3360008181526020818152604091829020805460ff1916600117905590519182527f7073afa60b48e833a1a66ebb442bc8e0d19e9f3cc05f34bdcd1da22c8d87f275910160405180910390a1565b60006020828403121560d257600080fd5b81356001600160a01b038116811460e857600080fd5b939250505056fea2646970667358221220389048654e93fc31102cc38f2487e06729f446943bfc6645da01d5ad4060bea464736f6c63430008130033",
    "sourceMap": "162:277:84:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c8063a230c524146037578063b688a36314606b575b600080fd5b6057604236600460c1565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b60716073565b005b3360008181526020818152604091829020805460ff1916600117905590519182527f7073afa60b48e833a1a66ebb442bc8e0d19e9f3cc05f34bdcd1da22c8d87f275910160405180910390a1565b60006020828403121560d257600080fd5b81356001600160a01b038116811460e857600080fd5b939250505056fea2646970667358221220389048654e93fc31102cc38f2487e06729f446943bfc6645da01d5ad4060bea464736f6c63430008130033",
    "sourceMap": "162:277:84:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;470:14:169;;463:22;445:41;;433:2;418:18;238:49:84;;;;;;;337:100;;;:::i;:::-;;;379:10;370:8;:20;;;;;;;;;;;;:27;;-1:-1:-1;;370:27:84;393:4;370:27;;;412:18;;643:51:169;;;412:18:84;;616::169;412::84;;;;;;;337:100::o;14:286:169:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:169;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:169:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isMember(address)": "a230c524",
    "join()": "b688a363"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"Joined\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"isMember\":{\"params\":{\"member\":\"the address for which is going to be checked whether is a member or not\"},\"return\":\"true if the address is a member, false otherwise\",\"returns\":{\"_0\":\"true if the address is a member, false otherwise\"}}},\"title\":\"HackerDAO\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isMember(address)\":{\"notice\":\"Function in the SkillWallet DAO contract for checking for membership\"},\"join()\":{\"notice\":\"Adds new member to the DAO\"}},\"notice\":\"A permissionless HackerDAO for integrating\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/standards/HackerDAO.sol\":\"HackerDAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/standards/HackerDAO.sol\":{\"keccak256\":\"0x7eaf4c2431d06f219ed2a1868156ad316f5b4881d19654a1e1967bbbe1edbc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0bcac9514b36847d3bd1297b9ffbf18ee8339ce05ea064e25177dcccfb43304\",\"dweb:/ipfs/QmdMv7pgpuAyjMewDW56JXKJtdxv1Xs3x5dqjTxMRWKbtT\"]},\"contracts/standards/ISWLegacyDAO.sol\":{\"keccak256\":\"0x42c0f76118049b4de6a126f06827b6f1b32a847e3e4a95a98d9a6ebbf5114edc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c43076d1725c08913d6f68dc212acc5c306d08db173014852b9aac6442fe00a\",\"dweb:/ipfs/QmWE87eXuhecBA9BUxjYYYca2PDdwgTLrEdrx2NrpsX9JU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Joined",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "join"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isMember(address)": {
            "notice": "Function in the SkillWallet DAO contract for checking for membership"
          },
          "join()": {
            "notice": "Adds new member to the DAO"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/standards/HackerDAO.sol": "HackerDAO"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/standards/HackerDAO.sol": {
        "keccak256": "0x7eaf4c2431d06f219ed2a1868156ad316f5b4881d19654a1e1967bbbe1edbc39",
        "urls": [
          "bzz-raw://c0bcac9514b36847d3bd1297b9ffbf18ee8339ce05ea064e25177dcccfb43304",
          "dweb:/ipfs/QmdMv7pgpuAyjMewDW56JXKJtdxv1Xs3x5dqjTxMRWKbtT"
        ],
        "license": "MIT"
      },
      "contracts/standards/ISWLegacyDAO.sol": {
        "keccak256": "0x42c0f76118049b4de6a126f06827b6f1b32a847e3e4a95a98d9a6ebbf5114edc",
        "urls": [
          "bzz-raw://6c43076d1725c08913d6f68dc212acc5c306d08db173014852b9aac6442fe00a",
          "dweb:/ipfs/QmWE87eXuhecBA9BUxjYYYca2PDdwgTLrEdrx2NrpsX9JU"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/standards/HackerDAO.sol",
    "id": 12554,
    "exportedSymbols": {
      "HackerDAO": [
        12553
      ],
      "ISWLegacyDAO": [
        12643
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:409:84",
    "nodes": [
      {
        "id": 12522,
        "nodeType": "PragmaDirective",
        "src": "31:23:84",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 12523,
        "nodeType": "ImportDirective",
        "src": "56:28:84",
        "nodes": [],
        "absolutePath": "contracts/standards/ISWLegacyDAO.sol",
        "file": "./ISWLegacyDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12554,
        "sourceUnit": 12644,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12553,
        "nodeType": "ContractDefinition",
        "src": "162:277:84",
        "nodes": [
          {
            "id": 12530,
            "nodeType": "EventDefinition",
            "src": "203:29:84",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "7073afa60b48e833a1a66ebb442bc8e0d19e9f3cc05f34bdcd1da22c8d87f275",
            "name": "Joined",
            "nameLocation": "209:6:84",
            "parameters": {
              "id": 12529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "224:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 12530,
                  "src": "216:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "215:16:84"
            }
          },
          {
            "id": 12535,
            "nodeType": "VariableDeclaration",
            "src": "238:49:84",
            "nodes": [],
            "baseFunctions": [
              12642
            ],
            "constant": false,
            "functionSelector": "a230c524",
            "mutability": "mutable",
            "name": "isMember",
            "nameLocation": "279:8:84",
            "overrides": {
              "id": 12534,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "270:8:84"
            },
            "scope": 12553,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12533,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12531,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "238:24:84",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 12532,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "257:4:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 12552,
            "nodeType": "FunctionDefinition",
            "src": "337:100:84",
            "nodes": [],
            "body": {
              "id": 12551,
              "nodeType": "Block",
              "src": "360:77:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12539,
                        "name": "isMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12535,
                        "src": "370:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 12542,
                      "indexExpression": {
                        "expression": {
                          "id": 12540,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "379:3:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "383:6:84",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "379:10:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "370:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 12543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "393:4:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "370:27:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12545,
                  "nodeType": "ExpressionStatement",
                  "src": "370:27:84"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12547,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "419:3:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "423:6:84",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "419:10:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12546,
                      "name": "Joined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12530,
                      "src": "412:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "412:18:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12550,
                  "nodeType": "EmitStatement",
                  "src": "407:23:84"
                }
              ]
            },
            "documentation": {
              "id": 12536,
              "nodeType": "StructuredDocumentation",
              "src": "294:38:84",
              "text": "@notice Adds new member to the DAO"
            },
            "functionSelector": "b688a363",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join",
            "nameLocation": "346:4:84",
            "parameters": {
              "id": 12537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "350:2:84"
            },
            "returnParameters": {
              "id": 12538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "360:0:84"
            },
            "scope": 12553,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12525,
              "name": "ISWLegacyDAO",
              "nameLocations": [
                "184:12:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12643,
              "src": "184:12:84"
            },
            "id": 12526,
            "nodeType": "InheritanceSpecifier",
            "src": "184:12:84"
          }
        ],
        "canonicalName": "HackerDAO",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12524,
          "nodeType": "StructuredDocumentation",
          "src": "86:76:84",
          "text": "@title HackerDAO\n @notice A permissionless HackerDAO for integrating"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12553,
          12643
        ],
        "name": "HackerDAO",
        "nameLocation": "171:9:84",
        "scope": 12554,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 84
}