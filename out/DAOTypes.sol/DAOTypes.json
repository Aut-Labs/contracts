{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "daoType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "membershipCheckerAddress",
          "type": "address"
        }
      ],
      "name": "DAOTypeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "membershipChecker",
          "type": "address"
        }
      ],
      "name": "addNewMembershipChecker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "daoType",
          "type": "uint256"
        }
      ],
      "name": "getMembershipCheckerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMembershipChecker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "typeToMembershipChecker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104de8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101315780638da5cb5b14610139578063979a607e1461014a578063f2fde38b1461017357600080fd5b80634e12c7ce1461008d5780634e862492146100a25780634edf6fe0146100da5780636251191f146100f0575b600080fd5b6100a061009b36600461045f565b610186565b005b6100c56100b036600461045f565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100e2610318565b6040519081526020016100d1565b6101196100fe36600461048f565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6100a0610328565b6000546001600160a01b0316610119565b61011961015836600461048f565b6000908152600260205260409020546001600160a01b031690565b6100a061018136600461045f565b61033c565b61018e6103b5565b6001600160a01b0381166102055760405162461bcd60e51b815260206004820152603360248201527f4d656d62657273686970436865636b657220636f6e74726163742061646472656044820152721cdcc81b5d5cdd081899481c1c9bdd9a591959606a1b60648201526084015b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff161561026e5760405162461bcd60e51b815260206004820152601f60248201527f4d656d62657273686970436865636b657220616c72656164792061646465640060448201526064016101fc565b61027c600180546001019055565b806002600061028a60015490565b81526020808201929092526040908101600090812080546001600160a01b0319166001600160a01b03958616179055928416835260039091529020805460ff19166001908117909155547fdccc0bef10080086bbc26f7f9f19b40614526b4af7554e79f4b67440f6393f1190604080519182526001600160a01b03841660208301520160405180910390a150565b600061032360015490565b905090565b6103306103b5565b61033a600061040f565b565b6103446103b5565b6001600160a01b0381166103a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101fc565b6103b28161040f565b50565b6000546001600160a01b0316331461033a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561047157600080fd5b81356001600160a01b038116811461048857600080fd5b9392505050565b6000602082840312156104a157600080fd5b503591905056fea2646970667358221220f11d48e241317f123511aee9d09d347ded54ec5120ebaf306d51e91d9190980564736f6c63430008130033",
    "sourceMap": "435:1529:41:-:0;;;;;;;;;;;;-1:-1:-1;936:32:125;719:10:142;936:18:125;:32::i;:::-;435:1529:41;;2433:187:125;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:125;;;-1:-1:-1;;;;;;2541:17:125;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;435:1529:41:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101315780638da5cb5b14610139578063979a607e1461014a578063f2fde38b1461017357600080fd5b80634e12c7ce1461008d5780634e862492146100a25780634edf6fe0146100da5780636251191f146100f0575b600080fd5b6100a061009b36600461045f565b610186565b005b6100c56100b036600461045f565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100e2610318565b6040519081526020016100d1565b6101196100fe36600461048f565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6100a0610328565b6000546001600160a01b0316610119565b61011961015836600461048f565b6000908152600260205260409020546001600160a01b031690565b6100a061018136600461045f565b61033c565b61018e6103b5565b6001600160a01b0381166102055760405162461bcd60e51b815260206004820152603360248201527f4d656d62657273686970436865636b657220636f6e74726163742061646472656044820152721cdcc81b5d5cdd081899481c1c9bdd9a591959606a1b60648201526084015b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff161561026e5760405162461bcd60e51b815260206004820152601f60248201527f4d656d62657273686970436865636b657220616c72656164792061646465640060448201526064016101fc565b61027c600180546001019055565b806002600061028a60015490565b81526020808201929092526040908101600090812080546001600160a01b0319166001600160a01b03958616179055928416835260039091529020805460ff19166001908117909155547fdccc0bef10080086bbc26f7f9f19b40614526b4af7554e79f4b67440f6393f1190604080519182526001600160a01b03841660208301520160405180910390a150565b600061032360015490565b905090565b6103306103b5565b61033a600061040f565b565b6103446103b5565b6001600160a01b0381166103a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101fc565b6103b28161040f565b50565b6000546001600160a01b0316331461033a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561047157600080fd5b81356001600160a01b038116811461048857600080fd5b9392505050565b6000602082840312156104a157600080fd5b503591905056fea2646970667358221220f11d48e241317f123511aee9d09d347ded54ec5120ebaf306d51e91d9190980564736f6c63430008130033",
    "sourceMap": "435:1529:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:516;;;;;;:::i;:::-;;:::i;:::-;;665:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;470:14:160;;463:22;445:41;;433:2;418:18;665:51:41;;;;;;;;1858:103;;;:::i;:::-;;;643:25:160;;;631:2;616:18;1858:103:41;497:177:160;600:58:41;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;600:58:41;;;;;;-1:-1:-1;;;;;1028:32:160;;;1010:51;;998:2;983:18;600:58:41;864:203:160;1831:101:125;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:125;1201:85;;962:151:41;;;;;;:::i;:::-;1046:7;1073:32;;;:23;:32;;;;;;-1:-1:-1;;;;;1073:32:41;;962:151;2081:198:125;;;;;;:::i;:::-;;:::i;1334:516:41:-;1094:13:125;:11;:13::i;:::-;-1:-1:-1;;;;;1439:31:41;::::1;1431:95;;;::::0;-1:-1:-1;;;1431:95:41;;1274:2:160;1431:95:41::1;::::0;::::1;1256:21:160::0;1313:2;1293:18;;;1286:30;1352:34;1332:18;;;1325:62;-1:-1:-1;;;1403:18:160;;;1396:49;1462:19;;1431:95:41::1;;;;;;;;;-1:-1:-1::0;;;;;1546:38:41;::::1;;::::0;;;:19:::1;:38;::::0;;;;;::::1;;1545:39;1537:83;;;::::0;-1:-1:-1;;;1537:83:41;;1694:2:160;1537:83:41::1;::::0;::::1;1676:21:160::0;1733:2;1713:18;;;1706:30;1772:33;1752:18;;;1745:61;1823:18;;1537:83:41::1;1492:355:160::0;1537:83:41::1;1631:18;:6;1032:19:143::0;;1050:1;1032:19;;;945:123;1631:18:41::1;1704:17;1660:23;:41;1684:16;:6;918:14:143::0;;827:112;1684:16:41::1;1660:41:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;1660:41:41;;;:61;;-1:-1:-1;;;;;;1660:61:41::1;-1:-1:-1::0;;;;;1660:61:41;;::::1;;::::0;;1732:38;;::::1;::::0;;:19:::1;:38:::0;;;;;:45;;-1:-1:-1;;1732:45:41::1;-1:-1:-1::0;1732:45:41;;::::1;::::0;;;918:14:143;1793:49:41::1;::::0;::::1;::::0;;2026:25:160;;;-1:-1:-1;;;;;2087:32:160;;2082:2;2067:18;;2060:60;1999:18;1793:49:41::1;;;;;;;1334:516:::0;:::o;1858:103::-;1910:7;1937:16;:6;918:14:143;;827:112;1937:16:41;1930:23;;1858:103;:::o;1831:101:125:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:125;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:125;;2333:2:160;2161:73:125::1;::::0;::::1;2315:21:160::0;2372:2;2352:18;;;2345:30;2411:34;2391:18;;;2384:62;-1:-1:-1;;;2462:18:160;;;2455:36;2508:19;;2161:73:125::1;2131:402:160::0;2161:73:125::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:125;719:10:142;1422:23:125;1414:68;;;;-1:-1:-1;;;1414:68:125;;2740:2:160;1414:68:125;;;2722:21:160;;;2759:18;;;2752:30;2818:34;2798:18;;;2791:62;2870:18;;1414:68:125;2538:356:160;2433:187:125;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:125;;;-1:-1:-1;;;;;;2541:17:125;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:286:160:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:160;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:160:o;679:180::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:160;;679:180;-1:-1:-1;679:180:160:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addNewMembershipChecker(address)": "4e12c7ce",
    "getMembershipCheckerAddress(uint256)": "979a607e",
    "isMembershipChecker(address)": "4e862492",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "typeToMembershipChecker(uint256)": "6251191f",
    "typesCount()": "4edf6fe0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"daoType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"membershipCheckerAddress\",\"type\":\"address\"}],\"name\":\"DAOTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"membershipChecker\",\"type\":\"address\"}],\"name\":\"addNewMembershipChecker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"daoType\",\"type\":\"uint256\"}],\"name\":\"getMembershipCheckerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMembershipChecker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"typeToMembershipChecker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract is Ownable to ensure that only the AutID team can add new types.\",\"kind\":\"dev\",\"methods\":{\"addNewMembershipChecker(address)\":{\"details\":\"Can be called only by the AutID contracts deployer\",\"params\":{\"membershipChecker\":\"the new contract address that is supported now\"}},\"getMembershipCheckerAddress(uint256)\":{\"params\":{\"daoType\":\"the type of the Membership Checker DAO\"},\"returns\":{\"_0\":\"the address of the contract that implements IMembershipChecker\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"DAOTypes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addNewMembershipChecker(address)\":{\"notice\":\"Adds a new type and contract address in the types\"},\"getMembershipCheckerAddress(uint256)\":{\"notice\":\"Returns the address of the MembershipChecker implementation for a given type\"}},\"notice\":\"DAOTypes has a mapping between type and MembershipChecker deployed for all DAO standards that are supported by AutID\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/membershipCheckers/DAOTypes.sol\":\"DAOTypes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/membershipCheckers/DAOTypes.sol\":{\"keccak256\":\"0xc0fdab5347211fb4dd85bf225a4bd3e15ab9a21451261994e2950065aac93a24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f27b50d0542fc446805256d27c5d983e0f6bf163b29a25a1648228282fe8836f\",\"dweb:/ipfs/QmbWjEu6yzntJGGf9pGd2SjF79MKkMWyqHvgviBspZVboF\"]},\"contracts/membershipCheckers/IDAOTypes.sol\":{\"keccak256\":\"0xbe7ce71c395a76ee1483d83ccc26cf0c38b9ec4105b6ee7519d1d12ba253ccec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://835730378029297b31990ae0c224787a1cb3898463d01d82b7a4bb8ded6c70e6\",\"dweb:/ipfs/QmQ1Sc1YPRpXQo5ZXwxSnDqe6BVx63A5WfwU7m6MazzYNb\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "daoType",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "membershipCheckerAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DAOTypeAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "membershipChecker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNewMembershipChecker"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "daoType",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipCheckerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMembershipChecker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "typeToMembershipChecker",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "typesCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addNewMembershipChecker(address)": {
            "details": "Can be called only by the AutID contracts deployer",
            "params": {
              "membershipChecker": "the new contract address that is supported now"
            }
          },
          "getMembershipCheckerAddress(uint256)": {
            "params": {
              "daoType": "the type of the Membership Checker DAO"
            },
            "returns": {
              "_0": "the address of the contract that implements IMembershipChecker"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addNewMembershipChecker(address)": {
            "notice": "Adds a new type and contract address in the types"
          },
          "getMembershipCheckerAddress(uint256)": {
            "notice": "Returns the address of the MembershipChecker implementation for a given type"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/membershipCheckers/DAOTypes.sol": "DAOTypes"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/membershipCheckers/DAOTypes.sol": {
        "keccak256": "0xc0fdab5347211fb4dd85bf225a4bd3e15ab9a21451261994e2950065aac93a24",
        "urls": [
          "bzz-raw://f27b50d0542fc446805256d27c5d983e0f6bf163b29a25a1648228282fe8836f",
          "dweb:/ipfs/QmbWjEu6yzntJGGf9pGd2SjF79MKkMWyqHvgviBspZVboF"
        ],
        "license": "MIT"
      },
      "contracts/membershipCheckers/IDAOTypes.sol": {
        "keccak256": "0xbe7ce71c395a76ee1483d83ccc26cf0c38b9ec4105b6ee7519d1d12ba253ccec",
        "urls": [
          "bzz-raw://835730378029297b31990ae0c224787a1cb3898463d01d82b7a4bb8ded6c70e6",
          "dweb:/ipfs/QmQ1Sc1YPRpXQo5ZXwxSnDqe6BVx63A5WfwU7m6MazzYNb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/membershipCheckers/DAOTypes.sol",
    "id": 5790,
    "exportedSymbols": {
      "Context": [
        61118
      ],
      "Counters": [
        61192
      ],
      "DAOTypes": [
        5789
      ],
      "IDAOTypes": [
        5818
      ],
      "Ownable": [
        58388
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1934:41",
    "nodes": [
      {
        "id": 5684,
        "nodeType": "PragmaDirective",
        "src": "32:23:41",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 5685,
        "nodeType": "ImportDirective",
        "src": "59:52:41",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5790,
        "sourceUnit": 61193,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5686,
        "nodeType": "ImportDirective",
        "src": "113:52:41",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5790,
        "sourceUnit": 58389,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5687,
        "nodeType": "ImportDirective",
        "src": "167:25:41",
        "nodes": [],
        "absolutePath": "contracts/membershipCheckers/IDAOTypes.sol",
        "file": "./IDAOTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5790,
        "sourceUnit": 5819,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5789,
        "nodeType": "ContractDefinition",
        "src": "435:1529:41",
        "nodes": [
          {
            "id": 5696,
            "nodeType": "UsingForDirective",
            "src": "482:36:41",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5693,
              "name": "Counters",
              "nameLocations": [
                "488:8:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61192,
              "src": "488:8:41"
            },
            "typeName": {
              "id": 5695,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5694,
                "name": "Counters.Counter",
                "nameLocations": [
                  "501:8:41",
                  "510:7:41"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 61124,
                "src": "501:16:41"
              },
              "referencedDeclaration": 61124,
              "src": "501:16:41",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$61124_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 5700,
            "nodeType": "VariableDeclaration",
            "src": "543:31:41",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5697,
              "nodeType": "StructuredDocumentation",
              "src": "524:13:41",
              "text": "@notice"
            },
            "mutability": "mutable",
            "name": "_types",
            "nameLocation": "568:6:41",
            "scope": 5789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$61124_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 5699,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5698,
                "name": "Counters.Counter",
                "nameLocations": [
                  "543:8:41",
                  "552:7:41"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 61124,
                "src": "543:16:41"
              },
              "referencedDeclaration": 61124,
              "src": "543:16:41",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$61124_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5705,
            "nodeType": "VariableDeclaration",
            "src": "600:58:41",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5701,
              "nodeType": "StructuredDocumentation",
              "src": "583:11:41",
              "text": "@notice"
            },
            "functionSelector": "6251191f",
            "mutability": "mutable",
            "name": "typeToMembershipChecker",
            "nameLocation": "635:23:41",
            "scope": 5789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 5704,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 5702,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "608:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "600:27:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 5703,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "619:7:41",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 5709,
            "nodeType": "VariableDeclaration",
            "src": "665:51:41",
            "nodes": [],
            "constant": false,
            "functionSelector": "4e862492",
            "mutability": "mutable",
            "name": "isMembershipChecker",
            "nameLocation": "697:19:41",
            "scope": 5789,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5708,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 5706,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "673:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "665:24:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 5707,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "684:4:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 5723,
            "nodeType": "FunctionDefinition",
            "src": "962:151:41",
            "nodes": [],
            "body": {
              "id": 5722,
              "nodeType": "Block",
              "src": "1055:58:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5718,
                      "name": "typeToMembershipChecker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5705,
                      "src": "1073:23:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 5720,
                    "indexExpression": {
                      "id": 5719,
                      "name": "daoType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5712,
                      "src": "1097:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1073:32:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5717,
                  "id": 5721,
                  "nodeType": "Return",
                  "src": "1066:39:41"
                }
              ]
            },
            "baseFunctions": [
              5806
            ],
            "documentation": {
              "id": 5710,
              "nodeType": "StructuredDocumentation",
              "src": "725:231:41",
              "text": "@notice Returns the address of the MembershipChecker implementation for a given type\n @param daoType the type of the Membership Checker DAO\n @return the address of the contract that implements IMembershipChecker"
            },
            "functionSelector": "979a607e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipCheckerAddress",
            "nameLocation": "971:27:41",
            "overrides": {
              "id": 5714,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1028:8:41"
            },
            "parameters": {
              "id": 5713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5712,
                  "mutability": "mutable",
                  "name": "daoType",
                  "nameLocation": "1007:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5723,
                  "src": "999:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:17:41"
            },
            "returnParameters": {
              "id": 5717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5723,
                  "src": "1046:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:9:41"
            },
            "scope": 5789,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5777,
            "nodeType": "FunctionDefinition",
            "src": "1334:516:41",
            "nodes": [],
            "body": {
              "id": 5776,
              "nodeType": "Block",
              "src": "1420:430:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5733,
                          "name": "membershipChecker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5726,
                          "src": "1439:17:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1468:1:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1460:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5734,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1460:7:41",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1460:10:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1439:31:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656d62657273686970436865636b657220636f6e74726163742061646472657373206d7573742062652070726f7669646564",
                        "id": 5739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1472:53:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7264290a7c4fa0a1ca6e43003ffe50c5c763ade72643abb36e374ec660bcfae",
                          "typeString": "literal_string \"MembershipChecker contract address must be provided\""
                        },
                        "value": "MembershipChecker contract address must be provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7264290a7c4fa0a1ca6e43003ffe50c5c763ade72643abb36e374ec660bcfae",
                          "typeString": "literal_string \"MembershipChecker contract address must be provided\""
                        }
                      ],
                      "id": 5732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1431:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:95:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5741,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:95:41"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1545:39:41",
                        "subExpression": {
                          "baseExpression": {
                            "id": 5743,
                            "name": "isMembershipChecker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5709,
                            "src": "1546:19:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 5745,
                          "indexExpression": {
                            "id": 5744,
                            "name": "membershipChecker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5726,
                            "src": "1566:17:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1546:38:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656d62657273686970436865636b657220616c7265616479206164646564",
                        "id": 5747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1586:33:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a557ea821f3d332f24a662d0cbae476960a7ed826d142ba276de813dbe0eee22",
                          "typeString": "literal_string \"MembershipChecker already added\""
                        },
                        "value": "MembershipChecker already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a557ea821f3d332f24a662d0cbae476960a7ed826d142ba276de813dbe0eee22",
                          "typeString": "literal_string \"MembershipChecker already added\""
                        }
                      ],
                      "id": 5742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1537:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1537:83:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5749,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:83:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5750,
                        "name": "_types",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5700,
                        "src": "1631:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$61124_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 5752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1638:9:41",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61150,
                      "src": "1631:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$61124_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$61124_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 5753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1631:18:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5754,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:18:41"
                },
                {
                  "expression": {
                    "id": 5761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5755,
                        "name": "typeToMembershipChecker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5705,
                        "src": "1660:23:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5759,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 5756,
                            "name": "_types",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5700,
                            "src": "1684:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$61124_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 5757,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1691:7:41",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61136,
                          "src": "1684:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$61124_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$61124_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 5758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1684:16:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1660:41:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5760,
                      "name": "membershipChecker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5726,
                      "src": "1704:17:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1660:61:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5762,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:61:41"
                },
                {
                  "expression": {
                    "id": 5767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5763,
                        "name": "isMembershipChecker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5709,
                        "src": "1732:19:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5765,
                      "indexExpression": {
                        "id": 5764,
                        "name": "membershipChecker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5726,
                        "src": "1752:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1732:38:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 5766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1773:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1732:45:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5768,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:45:41"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 5770,
                            "name": "_types",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5700,
                            "src": "1806:6:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$61124_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 5771,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1813:7:41",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61136,
                          "src": "1806:14:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$61124_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$61124_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 5772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1806:16:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5773,
                        "name": "membershipChecker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5726,
                        "src": "1824:17:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5769,
                      "name": "DAOTypeAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5798,
                      "src": "1793:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:49:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5775,
                  "nodeType": "EmitStatement",
                  "src": "1788:54:41"
                }
              ]
            },
            "baseFunctions": [
              5812
            ],
            "documentation": {
              "id": 5724,
              "nodeType": "StructuredDocumentation",
              "src": "1121:207:41",
              "text": "@notice Adds a new type and contract address in the types\n @dev Can be called only by the AutID contracts deployer\n @param membershipChecker the new contract address that is supported now"
            },
            "functionSelector": "4e12c7ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5730,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5729,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1410:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58307,
                  "src": "1410:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "1410:9:41"
              }
            ],
            "name": "addNewMembershipChecker",
            "nameLocation": "1343:23:41",
            "overrides": {
              "id": 5728,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1401:8:41"
            },
            "parameters": {
              "id": 5727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5726,
                  "mutability": "mutable",
                  "name": "membershipChecker",
                  "nameLocation": "1375:17:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 5777,
                  "src": "1367:25:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1367:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1366:27:41"
            },
            "returnParameters": {
              "id": 5731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:41"
            },
            "scope": 5789,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5788,
            "nodeType": "FunctionDefinition",
            "src": "1858:103:41",
            "nodes": [],
            "body": {
              "id": 5787,
              "nodeType": "Block",
              "src": "1919:42:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5783,
                        "name": "_types",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5700,
                        "src": "1937:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$61124_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 5784,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1944:7:41",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61136,
                      "src": "1937:14:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$61124_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$61124_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 5785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:16:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5782,
                  "id": 5786,
                  "nodeType": "Return",
                  "src": "1930:23:41"
                }
              ]
            },
            "baseFunctions": [
              5817
            ],
            "functionSelector": "4edf6fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "typesCount",
            "nameLocation": "1867:10:41",
            "overrides": {
              "id": 5779,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1892:8:41"
            },
            "parameters": {
              "id": 5778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:2:41"
            },
            "returnParameters": {
              "id": 5782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "1910:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1909:9:41"
            },
            "scope": 5789,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5689,
              "name": "Ownable",
              "nameLocations": [
                "456:7:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58388,
              "src": "456:7:41"
            },
            "id": 5690,
            "nodeType": "InheritanceSpecifier",
            "src": "456:7:41"
          },
          {
            "baseName": {
              "id": 5691,
              "name": "IDAOTypes",
              "nameLocations": [
                "465:9:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5818,
              "src": "465:9:41"
            },
            "id": 5692,
            "nodeType": "InheritanceSpecifier",
            "src": "465:9:41"
          }
        ],
        "canonicalName": "DAOTypes",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5688,
          "nodeType": "StructuredDocumentation",
          "src": "194:239:41",
          "text": "@title DAOTypes\n @notice DAOTypes has a mapping between type and MembershipChecker deployed for all DAO standards that are supported by AutID\n @dev The contract is Ownable to ensure that only the AutID team can add new types."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5789,
          5818,
          58388,
          61118
        ],
        "name": "DAOTypes",
        "nameLocation": "444:8:41",
        "scope": 5790,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 41
}