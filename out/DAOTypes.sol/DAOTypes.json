{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "daoType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "membershipCheckerAddress",
          "type": "address"
        }
      ],
      "name": "DAOTypeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "membershipChecker",
          "type": "address"
        }
      ],
      "name": "addNewMembershipChecker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "daoType",
          "type": "uint256"
        }
      ],
      "name": "getMembershipCheckerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isMembershipChecker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "typeToMembershipChecker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104de8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101315780638da5cb5b14610139578063979a607e1461014a578063f2fde38b1461017357600080fd5b80634e12c7ce1461008d5780634e862492146100a25780634edf6fe0146100da5780636251191f146100f0575b600080fd5b6100a061009b36600461045f565b610186565b005b6100c56100b036600461045f565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100e2610318565b6040519081526020016100d1565b6101196100fe36600461048f565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6100a0610328565b6000546001600160a01b0316610119565b61011961015836600461048f565b6000908152600260205260409020546001600160a01b031690565b6100a061018136600461045f565b61033c565b61018e6103b5565b6001600160a01b0381166102055760405162461bcd60e51b815260206004820152603360248201527f4d656d62657273686970436865636b657220636f6e74726163742061646472656044820152721cdcc81b5d5cdd081899481c1c9bdd9a591959606a1b60648201526084015b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff161561026e5760405162461bcd60e51b815260206004820152601f60248201527f4d656d62657273686970436865636b657220616c72656164792061646465640060448201526064016101fc565b61027c600180546001019055565b806002600061028a60015490565b81526020808201929092526040908101600090812080546001600160a01b0319166001600160a01b03958616179055928416835260039091529020805460ff19166001908117909155547fdccc0bef10080086bbc26f7f9f19b40614526b4af7554e79f4b67440f6393f1190604080519182526001600160a01b03841660208301520160405180910390a150565b600061032360015490565b905090565b6103306103b5565b61033a600061040f565b565b6103446103b5565b6001600160a01b0381166103a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101fc565b6103b28161040f565b50565b6000546001600160a01b0316331461033a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561047157600080fd5b81356001600160a01b038116811461048857600080fd5b9392505050565b6000602082840312156104a157600080fd5b503591905056fea2646970667358221220576788553ff319825f1cfd8791ffebc1bb728d4d41154ce80e7125976a25e9c364736f6c63430008130033",
    "sourceMap": "425:1497:48:-:0;;;;;;;;;;;;-1:-1:-1;936:32:124;719:10:135;936:18:124;:32::i;:::-;425:1497:48;;2433:187:124;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:124;;;-1:-1:-1;;;;;;2541:17:124;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;425:1497:48:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101315780638da5cb5b14610139578063979a607e1461014a578063f2fde38b1461017357600080fd5b80634e12c7ce1461008d5780634e862492146100a25780634edf6fe0146100da5780636251191f146100f0575b600080fd5b6100a061009b36600461045f565b610186565b005b6100c56100b036600461045f565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100e2610318565b6040519081526020016100d1565b6101196100fe36600461048f565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6100a0610328565b6000546001600160a01b0316610119565b61011961015836600461048f565b6000908152600260205260409020546001600160a01b031690565b6100a061018136600461045f565b61033c565b61018e6103b5565b6001600160a01b0381166102055760405162461bcd60e51b815260206004820152603360248201527f4d656d62657273686970436865636b657220636f6e74726163742061646472656044820152721cdcc81b5d5cdd081899481c1c9bdd9a591959606a1b60648201526084015b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff161561026e5760405162461bcd60e51b815260206004820152601f60248201527f4d656d62657273686970436865636b657220616c72656164792061646465640060448201526064016101fc565b61027c600180546001019055565b806002600061028a60015490565b81526020808201929092526040908101600090812080546001600160a01b0319166001600160a01b03958616179055928416835260039091529020805460ff19166001908117909155547fdccc0bef10080086bbc26f7f9f19b40614526b4af7554e79f4b67440f6393f1190604080519182526001600160a01b03841660208301520160405180910390a150565b600061032360015490565b905090565b6103306103b5565b61033a600061040f565b565b6103446103b5565b6001600160a01b0381166103a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101fc565b6103b28161040f565b50565b6000546001600160a01b0316331461033a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561047157600080fd5b81356001600160a01b038116811461048857600080fd5b9392505050565b6000602082840312156104a157600080fd5b503591905056fea2646970667358221220576788553ff319825f1cfd8791ffebc1bb728d4d41154ce80e7125976a25e9c364736f6c63430008130033",
    "sourceMap": "425:1497:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:509;;;;;;:::i;:::-;;:::i;:::-;;647:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;470:14:151;;463:22;445:41;;433:2;418:18;647:51:48;;;;;;;;1819:101;;;:::i;:::-;;;643:25:151;;;631:2;616:18;1819:101:48;497:177:151;583:58:48;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;583:58:48;;;;;;-1:-1:-1;;;;;1028:32:151;;;1010:51;;998:2;983:18;583:58:48;864:203:151;1831:101:124;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:124;1201:85;;939:149:48;;;;;;:::i;:::-;1023:7;1049:32;;;:23;:32;;;;;;-1:-1:-1;;;;;1049:32:48;;939:149;2081:198:124;;;;;;:::i;:::-;;:::i;1304:509:48:-;1094:13:124;:11;:13::i;:::-;-1:-1:-1;;;;;1408:31:48;::::1;1400:95;;;::::0;-1:-1:-1;;;1400:95:48;;1274:2:151;1400:95:48::1;::::0;::::1;1256:21:151::0;1313:2;1293:18;;;1286:30;1352:34;1332:18;;;1325:62;-1:-1:-1;;;1403:18:151;;;1396:49;1462:19;;1400:95:48::1;;;;;;;;;-1:-1:-1::0;;;;;1514:38:48;::::1;;::::0;;;:19:::1;:38;::::0;;;;;::::1;;1513:39;1505:83;;;::::0;-1:-1:-1;;;1505:83:48;;1694:2:151;1505:83:48::1;::::0;::::1;1676:21:151::0;1733:2;1713:18;;;1706:30;1772:33;1752:18;;;1745:61;1823:18;;1505:83:48::1;1492:355:151::0;1505:83:48::1;1598:18;:6;1032:19:136::0;;1050:1;1032:19;;;945:123;1598:18:48::1;1670:17;1626:23;:41;1650:16;:6;918:14:136::0;;827:112;1650:16:48::1;1626:41:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;1626:41:48;;;:61;;-1:-1:-1;;;;;;1626:61:48::1;-1:-1:-1::0;;;;;1626:61:48;;::::1;;::::0;;1697:38;;::::1;::::0;;:19:::1;:38:::0;;;;;:45;;-1:-1:-1;;1697:45:48::1;-1:-1:-1::0;1697:45:48;;::::1;::::0;;;918:14:136;1757:49:48::1;::::0;::::1;::::0;;2026:25:151;;;-1:-1:-1;;;;;2087:32:151;;2082:2;2067:18;;2060:60;1999:18;1757:49:48::1;;;;;;;1304:509:::0;:::o;1819:101::-;1871:7;1897:16;:6;918:14:136;;827:112;1897:16:48;1890:23;;1819:101;:::o;1831::124:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:124;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:124;;2333:2:151;2161:73:124::1;::::0;::::1;2315:21:151::0;2372:2;2352:18;;;2345:30;2411:34;2391:18;;;2384:62;-1:-1:-1;;;2462:18:151;;;2455:36;2508:19;;2161:73:124::1;2131:402:151::0;2161:73:124::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:124;719:10:135;1422:23:124;1414:68;;;;-1:-1:-1;;;1414:68:124;;2740:2:151;1414:68:124;;;2722:21:151;;;2759:18;;;2752:30;2818:34;2798:18;;;2791:62;2870:18;;1414:68:124;2538:356:151;2433:187:124;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:124;;;-1:-1:-1;;;;;;2541:17:124;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:286:151:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:151;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:151:o;679:180::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:151;;679:180;-1:-1:-1;679:180:151:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addNewMembershipChecker(address)": "4e12c7ce",
    "getMembershipCheckerAddress(uint256)": "979a607e",
    "isMembershipChecker(address)": "4e862492",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "typeToMembershipChecker(uint256)": "6251191f",
    "typesCount()": "4edf6fe0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"daoType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"membershipCheckerAddress\",\"type\":\"address\"}],\"name\":\"DAOTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"membershipChecker\",\"type\":\"address\"}],\"name\":\"addNewMembershipChecker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"daoType\",\"type\":\"uint256\"}],\"name\":\"getMembershipCheckerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMembershipChecker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"typeToMembershipChecker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract is Ownable to ensure that only the AutID team can add new types.\",\"kind\":\"dev\",\"methods\":{\"addNewMembershipChecker(address)\":{\"details\":\"Can be called only by the AutID contracts deployer\",\"params\":{\"membershipChecker\":\"the new contract address that is supported now\"}},\"getMembershipCheckerAddress(uint256)\":{\"params\":{\"daoType\":\"the type of the Membership Checker DAO\"},\"returns\":{\"_0\":\"the address of the contract that implements IMembershipChecker\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"DAOTypes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addNewMembershipChecker(address)\":{\"notice\":\"Adds a new type and contract address in the types\"},\"getMembershipCheckerAddress(uint256)\":{\"notice\":\"Returns the address of the MembershipChecker implementation for a given type\"}},\"notice\":\"DAOTypes has a mapping between type and MembershipChecker deployed for all DAO standards that are supported by AutID\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/membershipCheckers/DAOTypes.sol\":\"DAOTypes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/membershipCheckers/DAOTypes.sol\":{\"keccak256\":\"0xcdfaa33e2abee1da8e7ca1973e05dc912c389050edd7b20c5db33bea2a4d0f43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cd4ca89c56ab2a1f1ff582e801eef6b531680c990605f094f8d3e0e55ab81ca\",\"dweb:/ipfs/QmWEYQdhdn8bj2VudCRH4hXcVBP6CgZHbCBpF46YBkDxcd\"]},\"contracts/membershipCheckers/IDAOTypes.sol\":{\"keccak256\":\"0xd550d1486bcdbac8a88ff829752740d2dfb2fb54d1c5d661c83037970513821e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3a07d459235b85171f066e25bbac7c0aadcc8bd2874f613d9ea5a473557c39\",\"dweb:/ipfs/QmYGaYyHMfnSHfsNR1TuuD1MN53rMXrNAwBx6XZY4EFqFC\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "daoType",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "membershipCheckerAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DAOTypeAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "membershipChecker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNewMembershipChecker"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "daoType",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipCheckerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMembershipChecker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "typeToMembershipChecker",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "typesCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addNewMembershipChecker(address)": {
            "details": "Can be called only by the AutID contracts deployer",
            "params": {
              "membershipChecker": "the new contract address that is supported now"
            }
          },
          "getMembershipCheckerAddress(uint256)": {
            "params": {
              "daoType": "the type of the Membership Checker DAO"
            },
            "returns": {
              "_0": "the address of the contract that implements IMembershipChecker"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addNewMembershipChecker(address)": {
            "notice": "Adds a new type and contract address in the types"
          },
          "getMembershipCheckerAddress(uint256)": {
            "notice": "Returns the address of the MembershipChecker implementation for a given type"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/membershipCheckers/DAOTypes.sol": "DAOTypes"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/membershipCheckers/DAOTypes.sol": {
        "keccak256": "0xcdfaa33e2abee1da8e7ca1973e05dc912c389050edd7b20c5db33bea2a4d0f43",
        "urls": [
          "bzz-raw://1cd4ca89c56ab2a1f1ff582e801eef6b531680c990605f094f8d3e0e55ab81ca",
          "dweb:/ipfs/QmWEYQdhdn8bj2VudCRH4hXcVBP6CgZHbCBpF46YBkDxcd"
        ],
        "license": "MIT"
      },
      "contracts/membershipCheckers/IDAOTypes.sol": {
        "keccak256": "0xd550d1486bcdbac8a88ff829752740d2dfb2fb54d1c5d661c83037970513821e",
        "urls": [
          "bzz-raw://1d3a07d459235b85171f066e25bbac7c0aadcc8bd2874f613d9ea5a473557c39",
          "dweb:/ipfs/QmYGaYyHMfnSHfsNR1TuuD1MN53rMXrNAwBx6XZY4EFqFC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/membershipCheckers/DAOTypes.sol",
    "id": 5285,
    "exportedSymbols": {
      "Context": [
        59417
      ],
      "Counters": [
        59491
      ],
      "DAOTypes": [
        5284
      ],
      "IDAOTypes": [
        5313
      ],
      "Ownable": [
        57218
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:1892:48",
    "nodes": [
      {
        "id": 5179,
        "nodeType": "PragmaDirective",
        "src": "31:23:48",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 5180,
        "nodeType": "ImportDirective",
        "src": "56:52:48",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5285,
        "sourceUnit": 59492,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5181,
        "nodeType": "ImportDirective",
        "src": "109:52:48",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5285,
        "sourceUnit": 57219,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5182,
        "nodeType": "ImportDirective",
        "src": "162:25:48",
        "nodes": [],
        "absolutePath": "contracts/membershipCheckers/IDAOTypes.sol",
        "file": "./IDAOTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5285,
        "sourceUnit": 5314,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5284,
        "nodeType": "ContractDefinition",
        "src": "425:1497:48",
        "nodes": [
          {
            "id": 5191,
            "nodeType": "UsingForDirective",
            "src": "471:36:48",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5188,
              "name": "Counters",
              "nameLocations": [
                "477:8:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59491,
              "src": "477:8:48"
            },
            "typeName": {
              "id": 5190,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5189,
                "name": "Counters.Counter",
                "nameLocations": [
                  "490:8:48",
                  "499:7:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59423,
                "src": "490:16:48"
              },
              "referencedDeclaration": 59423,
              "src": "490:16:48",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$59423_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 5195,
            "nodeType": "VariableDeclaration",
            "src": "529:31:48",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5192,
              "nodeType": "StructuredDocumentation",
              "src": "512:12:48",
              "text": "@notice"
            },
            "mutability": "mutable",
            "name": "_types",
            "nameLocation": "554:6:48",
            "scope": 5284,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$59423_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 5194,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5193,
                "name": "Counters.Counter",
                "nameLocations": [
                  "529:8:48",
                  "538:7:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 59423,
                "src": "529:16:48"
              },
              "referencedDeclaration": 59423,
              "src": "529:16:48",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$59423_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 5200,
            "nodeType": "VariableDeclaration",
            "src": "583:58:48",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5196,
              "nodeType": "StructuredDocumentation",
              "src": "567:11:48",
              "text": "@notice"
            },
            "functionSelector": "6251191f",
            "mutability": "mutable",
            "name": "typeToMembershipChecker",
            "nameLocation": "618:23:48",
            "scope": 5284,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 5199,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 5197,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "591:7:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "583:27:48",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 5198,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "602:7:48",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 5204,
            "nodeType": "VariableDeclaration",
            "src": "647:51:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "4e862492",
            "mutability": "mutable",
            "name": "isMembershipChecker",
            "nameLocation": "679:19:48",
            "scope": 5284,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5203,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 5201,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "655:7:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "647:24:48",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 5202,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "666:4:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 5218,
            "nodeType": "FunctionDefinition",
            "src": "939:149:48",
            "nodes": [],
            "body": {
              "id": 5217,
              "nodeType": "Block",
              "src": "1032:56:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5213,
                      "name": "typeToMembershipChecker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5200,
                      "src": "1049:23:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 5215,
                    "indexExpression": {
                      "id": 5214,
                      "name": "daoType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5207,
                      "src": "1073:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1049:32:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5212,
                  "id": 5216,
                  "nodeType": "Return",
                  "src": "1042:39:48"
                }
              ]
            },
            "baseFunctions": [
              5301
            ],
            "documentation": {
              "id": 5205,
              "nodeType": "StructuredDocumentation",
              "src": "705:229:48",
              "text": "@notice Returns the address of the MembershipChecker implementation for a given type\n @param daoType the type of the Membership Checker DAO\n @return the address of the contract that implements IMembershipChecker"
            },
            "functionSelector": "979a607e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipCheckerAddress",
            "nameLocation": "948:27:48",
            "overrides": {
              "id": 5209,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1005:8:48"
            },
            "parameters": {
              "id": 5208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5207,
                  "mutability": "mutable",
                  "name": "daoType",
                  "nameLocation": "984:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 5218,
                  "src": "976:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "975:17:48"
            },
            "returnParameters": {
              "id": 5212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5218,
                  "src": "1023:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:9:48"
            },
            "scope": 5284,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5272,
            "nodeType": "FunctionDefinition",
            "src": "1304:509:48",
            "nodes": [],
            "body": {
              "id": 5271,
              "nodeType": "Block",
              "src": "1390:423:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5228,
                          "name": "membershipChecker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5221,
                          "src": "1408:17:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1437:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1429:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5229,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1429:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1429:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1408:31:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656d62657273686970436865636b657220636f6e74726163742061646472657373206d7573742062652070726f7669646564",
                        "id": 5234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1441:53:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7264290a7c4fa0a1ca6e43003ffe50c5c763ade72643abb36e374ec660bcfae",
                          "typeString": "literal_string \"MembershipChecker contract address must be provided\""
                        },
                        "value": "MembershipChecker contract address must be provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7264290a7c4fa0a1ca6e43003ffe50c5c763ade72643abb36e374ec660bcfae",
                          "typeString": "literal_string \"MembershipChecker contract address must be provided\""
                        }
                      ],
                      "id": 5227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1400:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:95:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5236,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:95:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1513:39:48",
                        "subExpression": {
                          "baseExpression": {
                            "id": 5238,
                            "name": "isMembershipChecker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5204,
                            "src": "1514:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 5240,
                          "indexExpression": {
                            "id": 5239,
                            "name": "membershipChecker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5221,
                            "src": "1534:17:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1514:38:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656d62657273686970436865636b657220616c7265616479206164646564",
                        "id": 5242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1554:33:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a557ea821f3d332f24a662d0cbae476960a7ed826d142ba276de813dbe0eee22",
                          "typeString": "literal_string \"MembershipChecker already added\""
                        },
                        "value": "MembershipChecker already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a557ea821f3d332f24a662d0cbae476960a7ed826d142ba276de813dbe0eee22",
                          "typeString": "literal_string \"MembershipChecker already added\""
                        }
                      ],
                      "id": 5237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1505:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5244,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:83:48"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5245,
                        "name": "_types",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5195,
                        "src": "1598:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$59423_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 5247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1605:9:48",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59449,
                      "src": "1598:16:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$59423_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$59423_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 5248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1598:18:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5249,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:18:48"
                },
                {
                  "expression": {
                    "id": 5256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5250,
                        "name": "typeToMembershipChecker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5200,
                        "src": "1626:23:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5254,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 5251,
                            "name": "_types",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5195,
                            "src": "1650:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$59423_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 5252,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1657:7:48",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59435,
                          "src": "1650:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$59423_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$59423_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 5253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1650:16:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1626:41:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5255,
                      "name": "membershipChecker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5221,
                      "src": "1670:17:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1626:61:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5257,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:61:48"
                },
                {
                  "expression": {
                    "id": 5262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5258,
                        "name": "isMembershipChecker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5204,
                        "src": "1697:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5260,
                      "indexExpression": {
                        "id": 5259,
                        "name": "membershipChecker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5221,
                        "src": "1717:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1697:38:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 5261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1738:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1697:45:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5263,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:45:48"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 5265,
                            "name": "_types",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5195,
                            "src": "1770:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$59423_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 5266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1777:7:48",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59435,
                          "src": "1770:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$59423_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$59423_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 5267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1770:16:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5268,
                        "name": "membershipChecker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5221,
                        "src": "1788:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5264,
                      "name": "DAOTypeAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5293,
                      "src": "1757:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1757:49:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5270,
                  "nodeType": "EmitStatement",
                  "src": "1752:54:48"
                }
              ]
            },
            "baseFunctions": [
              5307
            ],
            "documentation": {
              "id": 5219,
              "nodeType": "StructuredDocumentation",
              "src": "1094:205:48",
              "text": "@notice Adds a new type and contract address in the types\n @dev Can be called only by the AutID contracts deployer\n @param membershipChecker the new contract address that is supported now"
            },
            "functionSelector": "4e12c7ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5224,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1380:9:48"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57137,
                  "src": "1380:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "1380:9:48"
              }
            ],
            "name": "addNewMembershipChecker",
            "nameLocation": "1313:23:48",
            "overrides": {
              "id": 5223,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1371:8:48"
            },
            "parameters": {
              "id": 5222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5221,
                  "mutability": "mutable",
                  "name": "membershipChecker",
                  "nameLocation": "1345:17:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 5272,
                  "src": "1337:25:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:27:48"
            },
            "returnParameters": {
              "id": 5226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:0:48"
            },
            "scope": 5284,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5283,
            "nodeType": "FunctionDefinition",
            "src": "1819:101:48",
            "nodes": [],
            "body": {
              "id": 5282,
              "nodeType": "Block",
              "src": "1880:40:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5278,
                        "name": "_types",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5195,
                        "src": "1897:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$59423_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 5279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1904:7:48",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59435,
                      "src": "1897:14:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$59423_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$59423_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 5280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:16:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5277,
                  "id": 5281,
                  "nodeType": "Return",
                  "src": "1890:23:48"
                }
              ]
            },
            "baseFunctions": [
              5312
            ],
            "functionSelector": "4edf6fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "typesCount",
            "nameLocation": "1828:10:48",
            "overrides": {
              "id": 5274,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1853:8:48"
            },
            "parameters": {
              "id": 5273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1838:2:48"
            },
            "returnParameters": {
              "id": 5277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5276,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5283,
                  "src": "1871:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1870:9:48"
            },
            "scope": 5284,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5184,
              "name": "Ownable",
              "nameLocations": [
                "446:7:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57218,
              "src": "446:7:48"
            },
            "id": 5185,
            "nodeType": "InheritanceSpecifier",
            "src": "446:7:48"
          },
          {
            "baseName": {
              "id": 5186,
              "name": "IDAOTypes",
              "nameLocations": [
                "455:9:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5313,
              "src": "455:9:48"
            },
            "id": 5187,
            "nodeType": "InheritanceSpecifier",
            "src": "455:9:48"
          }
        ],
        "canonicalName": "DAOTypes",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5183,
          "nodeType": "StructuredDocumentation",
          "src": "188:236:48",
          "text": "@title DAOTypes\n @notice DAOTypes has a mapping between type and MembershipChecker deployed for all DAO standards that are supported by AutID\n @dev The contract is Ownable to ensure that only the AutID team can add new types."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5284,
          5313,
          57218,
          59417
        ],
        "name": "DAOTypes",
        "nameLocation": "434:8:48",
        "scope": 5285,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 48
}