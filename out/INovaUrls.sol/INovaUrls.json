{
  "abi": [
    {
      "inputs": [],
      "name": "getURLs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        }
      ],
      "name": "isURLListed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getURLs()": "206110db",
    "isURLListed(string)": "68839d28"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getURLs\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"}],\"name\":\"isURLListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getURLs()\":{\"details\":\"returns an array with all the listed urls\",\"returns\":{\"_0\":\"returns all the urls listed for the Nova\"}},\"isURLListed(string)\":{\"details\":\"a checker if a url has been listed for this Nova\",\"params\":{\"_url\":\"the url that will be listed\"},\"returns\":{\"_0\":\"true if listed, false otherwise\"}}},\"title\":\"INova\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getURLs()\":{\"notice\":\"The listed URLs are the only ones that can be used for the DAuth\"},\"isURLListed(string)\":{\"notice\":\"The listed URLs are the only ones that can be used for the DAuth\"}},\"notice\":\"The interface for the extension of each Nova that integrates AutID\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/components/interfaces/get/INovaUrls.sol\":\"INovaUrls\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/components/interfaces/get/INovaUrls.sol\":{\"keccak256\":\"0x1ecb035ba6a54a4cf9199e809839e14d2dc6c95ded4d4bd906fba02d1c995f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee735a8ff0db12984560acac3888766405ad4ba0b2c00a7f610431792bccef32\",\"dweb:/ipfs/QmexNSqP1GTc5EaULhX2vTZw1VoHchZC6Y8W6md3iph5mG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getURLs",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_url",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isURLListed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getURLs()": {
            "details": "returns an array with all the listed urls",
            "returns": {
              "_0": "returns all the urls listed for the Nova"
            }
          },
          "isURLListed(string)": {
            "details": "a checker if a url has been listed for this Nova",
            "params": {
              "_url": "the url that will be listed"
            },
            "returns": {
              "_0": "true if listed, false otherwise"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getURLs()": {
            "notice": "The listed URLs are the only ones that can be used for the DAuth"
          },
          "isURLListed(string)": {
            "notice": "The listed URLs are the only ones that can be used for the DAuth"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/components/interfaces/get/INovaUrls.sol": "INovaUrls"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/components/interfaces/get/INovaUrls.sol": {
        "keccak256": "0x1ecb035ba6a54a4cf9199e809839e14d2dc6c95ded4d4bd906fba02d1c995f49",
        "urls": [
          "bzz-raw://ee735a8ff0db12984560acac3888766405ad4ba0b2c00a7f610431792bccef32",
          "dweb:/ipfs/QmexNSqP1GTc5EaULhX2vTZw1VoHchZC6Y8W6md3iph5mG"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/components/interfaces/get/INovaUrls.sol",
    "id": 4604,
    "exportedSymbols": {
      "INovaUrls": [
        4603
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:733:22",
    "nodes": [
      {
        "id": 4586,
        "nodeType": "PragmaDirective",
        "src": "32:23:22",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 4603,
        "nodeType": "ContractDefinition",
        "src": "157:606:22",
        "nodes": [
          {
            "id": 4594,
            "nodeType": "FunctionDefinition",
            "src": "380:59:22",
            "nodes": [],
            "documentation": {
              "id": 4588,
              "nodeType": "StructuredDocumentation",
              "src": "184:190:22",
              "text": "@notice The listed URLs are the only ones that can be used for the DAuth\n @dev returns an array with all the listed urls\n @return returns all the urls listed for the Nova"
            },
            "functionSelector": "206110db",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getURLs",
            "nameLocation": "389:7:22",
            "parameters": {
              "id": 4589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:22"
            },
            "returnParameters": {
              "id": 4593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4594,
                  "src": "422:15:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4590,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "422:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 4591,
                    "nodeType": "ArrayTypeName",
                    "src": "422:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:17:22"
            },
            "scope": 4603,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4602,
            "nodeType": "FunctionDefinition",
            "src": "690:70:22",
            "nodes": [],
            "documentation": {
              "id": 4595,
              "nodeType": "StructuredDocumentation",
              "src": "447:237:22",
              "text": "@notice The listed URLs are the only ones that can be used for the DAuth\n @dev a checker if a url has been listed for this Nova\n @param _url the url that will be listed\n @return true if listed, false otherwise"
            },
            "functionSelector": "68839d28",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isURLListed",
            "nameLocation": "699:11:22",
            "parameters": {
              "id": 4598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4597,
                  "mutability": "mutable",
                  "name": "_url",
                  "nameLocation": "725:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4602,
                  "src": "711:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4596,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:20:22"
            },
            "returnParameters": {
              "id": 4601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4602,
                  "src": "754:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4599,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:6:22"
            },
            "scope": 4603,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "INovaUrls",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4587,
          "nodeType": "StructuredDocumentation",
          "src": "59:98:22",
          "text": "@title INova\n @notice The interface for the extension of each Nova that integrates AutID"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          4603
        ],
        "name": "INovaUrls",
        "nameLocation": "167:9:22",
        "scope": 4604,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 22
}