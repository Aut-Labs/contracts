{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isTrustedForwarder(address)": "572b6c05"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"title\":\"The ERC-2771 Recipient Base Abstract Class - Declarations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"notice\":\"A contract must implement this interface in order to support relayed transaction.It is recommended that your contract inherits from the ERC2771Recipient contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":\"IERC2771Recipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68680e24b98e554eb64e724a6ddab30827d5091ae36812e2a4e1b1914481ca4c\",\"dweb:/ipfs/QmR9TVoucNzaeiAgSu1miqoQ4SZAcMCB2yRd32YuEXVWLB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isTrustedForwarder(address)": {
            "params": {
              "forwarder": "The address of the Forwarder contract that is being used."
            },
            "returns": {
              "_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isTrustedForwarder(address)": {
            "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@opengsn/=node_modules/@opengsn/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol": "IERC2771Recipient"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol": {
        "keccak256": "0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170",
        "urls": [
          "bzz-raw://68680e24b98e554eb64e724a6ddab30827d5091ae36812e2a4e1b1914481ca4c",
          "dweb:/ipfs/QmR9TVoucNzaeiAgSu1miqoQ4SZAcMCB2yRd32YuEXVWLB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@opengsn/contracts/src/interfaces/IERC2771Recipient.sol",
    "id": 57341,
    "exportedSymbols": {
      "IERC2771Recipient": [
        57340
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1730:117",
    "nodes": [
      {
        "id": 57318,
        "nodeType": "PragmaDirective",
        "src": "32:24:117",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ]
      },
      {
        "id": 57340,
        "nodeType": "ContractDefinition",
        "src": "326:1435:117",
        "nodes": [
          {
            "id": 57327,
            "nodeType": "FunctionDefinition",
            "src": "716:81:117",
            "nodes": [],
            "documentation": {
              "id": 57320,
              "nodeType": "StructuredDocumentation",
              "src": "369:342:117",
              "text": " :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n @param forwarder The address of the Forwarder contract that is being used.\n @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
            },
            "functionSelector": "572b6c05",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTrustedForwarder",
            "nameLocation": "725:18:117",
            "parameters": {
              "id": 57323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57322,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nameLocation": "752:9:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 57327,
                  "src": "744:17:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:19:117"
            },
            "returnParameters": {
              "id": 57326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57327,
                  "src": "791:4:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57324,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:4:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:6:117"
            },
            "scope": 57340,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 57333,
            "nodeType": "FunctionDefinition",
            "src": "1146:62:117",
            "nodes": [],
            "documentation": {
              "id": 57328,
              "nodeType": "StructuredDocumentation",
              "src": "803:338:117",
              "text": " @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\n @return sender The real sender of this call.\n For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\n Otherwise simply returns `msg.sender`."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "1155:10:117",
            "parameters": {
              "id": 57329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:2:117"
            },
            "returnParameters": {
              "id": 57332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57331,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57333,
                  "src": "1199:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1198:9:117"
            },
            "scope": 57340,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 57339,
            "nodeType": "FunctionDefinition",
            "src": "1692:67:117",
            "nodes": [],
            "documentation": {
              "id": 57334,
              "nodeType": "StructuredDocumentation",
              "src": "1214:473:117",
              "text": " @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\n @return data The real `msg.data` of this call.\n For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\n of the `msg.data` - so this method will strip those 20 bytes off.\n Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "1701:8:117",
            "parameters": {
              "id": 57335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:2:117"
            },
            "returnParameters": {
              "id": 57338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57339,
                  "src": "1743:14:117",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57336,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:5:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:16:117"
            },
            "scope": 57340,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "IERC2771Recipient",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 57319,
          "nodeType": "StructuredDocumentation",
          "src": "58:267:117",
          "text": " @title The ERC-2771 Recipient Base Abstract Class - Declarations\n @notice A contract must implement this interface in order to support relayed transaction.\n @notice It is recommended that your contract inherits from the ERC2771Recipient contract."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          57340
        ],
        "name": "IERC2771Recipient",
        "nameLocation": "344:17:117",
        "scope": 57341,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 117
}