{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x66357C36E3CAeA945eeDca8C13deA343Efc301a2",
    "txHash": "0xf12c15aa74355692a8410d2fcad3e2171dab06cd161efe58c3565961beb8d563"
  },
  "proxies": [
    {
      "address": "0xA09f57d39bFD445D8884297b86d3190a22C4a80c",
      "txHash": "0x38f4700cb2002bbb976ee2f7dc1be62fafb723b634d3d0ed4e5fa993deaa2728",
      "kind": "transparent"
    },
    {
      "address": "0x8b8c7dB115c3CC0f80a8CE64b9d64d2AE728E7aD",
      "txHash": "0xc98847503762ba13ac17e67a188ad0429def33c460dc43d7caf9f578c4d406ab",
      "kind": "transparent"
    },
    {
      "address": "0x6B2E07F92ed50Cb20c6fAe1866161B89F5620911",
      "txHash": "0x1cb25deaee4c11023bce62889ab8e6dfe3cb1340c31a70332160675579711486",
      "kind": "transparent"
    },
    {
      "address": "0x5372433d39D469AfC48f338d4A51EE0D43BBfa3f",
      "txHash": "0x4d2cc145e64316852373a730ca607beadf992853f4f17c214957b45e413daa1e",
      "kind": "transparent"
    },
    {
      "address": "0xA224A7D8C3BC3B45a6c67fC5FA6A31f17c6E577C",
      "txHash": "0x68a75e37a25236bae9693e22364c050044f23178ad8b99ab44d9b82cc2f4fae2",
      "kind": "transparent"
    },
    {
      "address": "0xB0622b5A38a96f354934C308a28d9E1E69D6Bc21",
      "txHash": "0x0d7b8dc739e55635dfcdeb8d252a48597e1ebaee4470f5ad8a20ee3b3fb1a5b1",
      "kind": "transparent"
    },
    {
      "address": "0x7121f7a86D9908761db2A9512ea3ED22894a24Af",
      "txHash": "0x1b8365f434c410ecb1fff1f80bb93dd27f0f0155100c98fc0b1b8a108ca20add",
      "kind": "transparent"
    },
    {
      "address": "0x04CCAE199B72008CcD755560626Ba94d5d51DF41",
      "txHash": "0x95efe6883af4ebcd20e727838eb90db2c36e373f556bd6335e3015bc8f24f8c9",
      "kind": "transparent"
    },
    {
      "address": "0x711078cb69d20D42622296Df2673be1692654Fc7",
      "txHash": "0x12ef17fee56eafff0a8907884dbece39a1b506f6e2e5eb77e62684d70c4d7411",
      "kind": "transparent"
    },
    {
      "address": "0x994Ad921a5d23eA3dbCA7e850aBAAf4B52D65255",
      "txHash": "0xc497682aa54c51143119caf75a385635f0d3384188f1abfb7bd463a9a756002b",
      "kind": "transparent"
    },
    {
      "address": "0x4Ea22B2e73c2c65b8D378Dc312AEefCAADEe6b48",
      "txHash": "0x585dc2e9a09e1a5994236e6605cc2343dc2ba1dfc3eff0a88cc0bb2d1f8c934a",
      "kind": "transparent"
    },
    {
      "address": "0xC19365afC4936AEA5717ADcCa467C4994864Ca8d",
      "txHash": "0x025771b2f4fc06227f4769123880f1850acd9007e83df192fd4d70104a205f1d",
      "kind": "transparent"
    },
    {
      "address": "0x974256CA986C08D04753de210768f88e632EF119",
      "txHash": "0x550ebd17f82827f53dd6c91072e714f08b0fc47df563fe99fa1bc4ac2ddaf174",
      "kind": "transparent"
    },
    {
      "address": "0x81A6ccbFe0C29108EAA7bF7d176B7b60ec59ebA9",
      "txHash": "0xa8751bbe4d32bfe0ce3e5ff9e7d26ed269b559094a198a3710bcc9b4600efb2a",
      "kind": "transparent"
    },
    {
      "address": "0xa0322Fe45f3c65180bB57cb9d824aeAE8F517347",
      "txHash": "0xf04f3ec1979a900c6c1b61a9e798876f732add2c66ad809b71b812c5a4152063",
      "kind": "transparent"
    },
    {
      "address": "0x30196dC507F5bF975f13d735bc1790430141109C",
      "txHash": "0x5038315a8ba7539d46987a3cd80418372920f69c48dd5de9a0f209cc3d705241",
      "kind": "transparent"
    },
    {
      "address": "0x81dac60057246c44cd99Ec4f8dF058E2aBeF41A7",
      "txHash": "0x5dd851cbd9c48518c723d4318ff143514c81cb0ef69aeaf607b67a98c008cab8",
      "kind": "transparent"
    },
    {
      "address": "0x434c28bEB80B521d944D1556da014C23009ad918",
      "txHash": "0x6b18be3fedbab1f61435e2b828ac93e29ffef33d31b835f8fb04ce51e3335fc2",
      "kind": "transparent"
    },
    {
      "address": "0x420497a0eC0531097D39872b20Cb85DaD86985f1",
      "txHash": "0x70744b890d4d5e5ecbefc9b37e178fdc33508c672467799e784554b96d3b50a7",
      "kind": "transparent"
    },
    {
      "address": "0x9D3f0887eD910d88098fA9013D171dF0dC3488e5",
      "txHash": "0xc67b9f8db0b77e933445cb081e729ac7475ae58947a4f860ab9aab9ec274607d",
      "kind": "transparent"
    },
    {
      "address": "0x056012c993607b7f9f34115FccB03f77dd97B9ec",
      "txHash": "0xc26b0a5a1bd3a1612e3639acd9b343b928b7ebda609d2a80ca20781b75051558",
      "kind": "transparent"
    },
    {
      "address": "0xb2b31Ce0e3DfFb1f16cE6dc1df3956333E0712e9",
      "txHash": "0x6725a160e04b2877e162a8ba289303a0a9bf0ae618539dbc7635c4c09a32db25",
      "kind": "transparent"
    },
    {
      "address": "0x64928D4fFA5DA004B8E256D7fD84cFa6bB5b643E",
      "txHash": "0x88087fbbdabaf83e1fffd05b2a06d987076b578a5b4c430b17d4981c7c3ec361",
      "kind": "transparent"
    },
    {
      "address": "0xD61f8337F9412bF758f57df739Ce6103bBa1Bb4b",
      "txHash": "0x0881c8a9df29e93e9ddca035e7f8646ae793b781124c587f6945d68cdee1cad9",
      "kind": "transparent"
    },
    {
      "address": "0x90719155db9d507C835185b8590eC67E9EA1B484",
      "txHash": "0xf56fb4032c39db389f858c1989180e7d852ac52f21adda9e712445c53f31185a",
      "kind": "transparent"
    },
    {
      "address": "0x3af1E4796ff35b905ec66cD671906d798F518fA1",
      "txHash": "0xaaa7aad2b6da331a3134e6ec0390aa83c0e9e8fd28af8251bf5041d8ca206764",
      "kind": "transparent"
    },
    {
      "address": "0x7e0EaDcA3C0403C603C951C55aeb49Df8828EFC6",
      "txHash": "0x2fa95710e14adff737626e7fb50f8280aa55d56497ce372c32e53c6b781fa67d",
      "kind": "transparent"
    },
    {
      "address": "0x6F770D22Dd5E3A7628DE22E648C4E57c961E1Fe8",
      "txHash": "0x63dd46b8d4a5a3a6d762f588c18f71ff0052a17ba4cc1aa85d6b3b96e598f96e",
      "kind": "transparent"
    },
    {
      "address": "0xAFed02258e677Ba18672059Aca168cE5a957c1cE",
      "txHash": "0x685f109f457b857d5b4148f599e14ad8b1d357d033e17148040ff4d0848e2a23",
      "kind": "transparent"
    },
    {
      "address": "0x8CaaCe0209C90621A629e25894e312C641009771",
      "txHash": "0xd89c9512fc4fe2c89c5743d306524ac22890e684e7d94dcca57aff1775787d56",
      "kind": "transparent"
    },
    {
      "address": "0xf9CFe93305d4e4D634E726660B373920f2F9E17c",
      "txHash": "0xcc407a10933f9c9e037f52cac9c69d6016473fdb26284296c2b96f474ba7cd45",
      "kind": "transparent"
    },
    {
      "address": "0xD46d8044c86C1f6F337A16ce50E947Dab92f40c6",
      "txHash": "0xc6aa3b36d0c55540a9008e0ceac87ceecf74fa2d2e2341de3ab7d2d24e0dc452",
      "kind": "transparent"
    },
    {
      "address": "0xC6E9319A6Da833D16D8dD1f8E36E438245795B35",
      "txHash": "0x7f94cdca30be28b5a4624ebf6edf476f9041be37d07315784f3d58bc8b401ef1",
      "kind": "transparent"
    },
    {
      "address": "0xc42292541d3ED018328451661Ef48Cdb11299C41",
      "txHash": "0x6a185fb586dd96c0ed0443b8aa215557a472b3791612e355abb7f22455822baf",
      "kind": "transparent"
    },
    {
      "address": "0x38DdD5b107a4960F6d8326D7408dD0F7fEc3A0aD",
      "txHash": "0x3f1d85c6e9df74531536a1a3467b91f57f359a58781319f34bf6270cdb3b0e90",
      "kind": "transparent"
    },
    {
      "address": "0x60e6a3cB19F04b665d143eA58A8892d4E7A3dFD3",
      "txHash": "0x50c2b2e7a0ce1b10c46087429caab1bc1d73735e0f38e1f2ca7217f8d6680cc9",
      "kind": "transparent"
    },
    {
      "address": "0xF8e7bcBa0e94d7bf169faaD48bcFAaE1e67D3050",
      "txHash": "0xa8d7c21a258eb169fe34f1f491c650542313cf8a6e4a1db9388e26976cce96f1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "437f3cbcc83303bff9b63151d0d5642957f1a28efe07ff128bc1db33a2a7234d": {
      "address": "0x553158dD0fC4fFe01F417Ed1549A1384BC3e076a",
      "txHash": "0x52f9e5ce9b6b02c2cead58ccbfcce3d401a977591a19f792b6e1ce1664198060",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2872_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4019_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4019_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)4019_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2872_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)4019_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a0690b550e1edd24001238db3df9ed1caade4494fc35291115a4f7ff4eca1fd5": {
      "address": "0x3eE5538a46898E39a44476305136c3f926F76A73",
      "txHash": "0x2ef3ca60ababfb855223eef5e3c4f243c2a9740d7f6fb0885f27cb916b9a553f",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2048_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2991_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2991_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2991_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2048_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2991_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7a1cabe860f454420a87e8d25b296467124068e058fb646ee0b545b50805b033": {
      "address": "0xA4aAd8eC79687CFD330707097fB8c2DE563223E8",
      "txHash": "0x5c9fd783bf56695eb226c0892d2288996b8ab334aa0f48cadb08dfc8a48e8e79",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)4360_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)5569_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)5569_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)5569_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4360_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)5569_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "30d4de85d53118c5c32789042c443581c31db97ac6baea4b618f767e534851b3": {
      "address": "0x906a9504e9f88e8F3a966125CEF04e38d21C241B",
      "txHash": "0x7feb2a348aa481d4c4a7a2a86037137ab1e63598dc96fda6caa8132b57ef686e",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)4360_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)5569_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)5569_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)5569_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4360_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)5569_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
