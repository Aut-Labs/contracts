{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x79818807DcbF6747650A1CE23E9075FB6357500a",
    "txHash": "0x56c03828eb7d395dde8c7242f65faf4043f341a88836c8e7f0df1516ef2e669b"
  },
  "proxies": [
    {
      "address": "0xA09f57d39bFD445D8884297b86d3190a22C4a80c",
      "txHash": "0x38f4700cb2002bbb976ee2f7dc1be62fafb723b634d3d0ed4e5fa993deaa2728",
      "kind": "transparent"
    },
    {
      "address": "0x8b8c7dB115c3CC0f80a8CE64b9d64d2AE728E7aD",
      "txHash": "0xc98847503762ba13ac17e67a188ad0429def33c460dc43d7caf9f578c4d406ab",
      "kind": "transparent"
    },
    {
      "address": "0x6B2E07F92ed50Cb20c6fAe1866161B89F5620911",
      "txHash": "0x1cb25deaee4c11023bce62889ab8e6dfe3cb1340c31a70332160675579711486",
      "kind": "transparent"
    },
    {
      "address": "0x5372433d39D469AfC48f338d4A51EE0D43BBfa3f",
      "txHash": "0x4d2cc145e64316852373a730ca607beadf992853f4f17c214957b45e413daa1e",
      "kind": "transparent"
    },
    {
      "address": "0xA224A7D8C3BC3B45a6c67fC5FA6A31f17c6E577C",
      "txHash": "0x68a75e37a25236bae9693e22364c050044f23178ad8b99ab44d9b82cc2f4fae2",
      "kind": "transparent"
    },
    {
      "address": "0xB0622b5A38a96f354934C308a28d9E1E69D6Bc21",
      "txHash": "0x0d7b8dc739e55635dfcdeb8d252a48597e1ebaee4470f5ad8a20ee3b3fb1a5b1",
      "kind": "transparent"
    },
    {
      "address": "0x7121f7a86D9908761db2A9512ea3ED22894a24Af",
      "txHash": "0x1b8365f434c410ecb1fff1f80bb93dd27f0f0155100c98fc0b1b8a108ca20add",
      "kind": "transparent"
    },
    {
      "address": "0x04CCAE199B72008CcD755560626Ba94d5d51DF41",
      "txHash": "0x95efe6883af4ebcd20e727838eb90db2c36e373f556bd6335e3015bc8f24f8c9",
      "kind": "transparent"
    },
    {
      "address": "0x711078cb69d20D42622296Df2673be1692654Fc7",
      "txHash": "0x12ef17fee56eafff0a8907884dbece39a1b506f6e2e5eb77e62684d70c4d7411",
      "kind": "transparent"
    },
    {
      "address": "0x994Ad921a5d23eA3dbCA7e850aBAAf4B52D65255",
      "txHash": "0xc497682aa54c51143119caf75a385635f0d3384188f1abfb7bd463a9a756002b",
      "kind": "transparent"
    },
    {
      "address": "0x4Ea22B2e73c2c65b8D378Dc312AEefCAADEe6b48",
      "txHash": "0x585dc2e9a09e1a5994236e6605cc2343dc2ba1dfc3eff0a88cc0bb2d1f8c934a",
      "kind": "transparent"
    },
    {
      "address": "0xC19365afC4936AEA5717ADcCa467C4994864Ca8d",
      "txHash": "0x025771b2f4fc06227f4769123880f1850acd9007e83df192fd4d70104a205f1d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "437f3cbcc83303bff9b63151d0d5642957f1a28efe07ff128bc1db33a2a7234d": {
      "address": "0x553158dD0fC4fFe01F417Ed1549A1384BC3e076a",
      "txHash": "0x52f9e5ce9b6b02c2cead58ccbfcce3d401a977591a19f792b6e1ce1664198060",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2872_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4019_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4019_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)4019_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2872_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)4019_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a0690b550e1edd24001238db3df9ed1caade4494fc35291115a4f7ff4eca1fd5": {
      "address": "0x3eE5538a46898E39a44476305136c3f926F76A73",
      "txHash": "0x2ef3ca60ababfb855223eef5e3c4f243c2a9740d7f6fb0885f27cb916b9a553f",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2048_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2991_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2991_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2991_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2048_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2991_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7a1cabe860f454420a87e8d25b296467124068e058fb646ee0b545b50805b033": {
      "address": "0xA4aAd8eC79687CFD330707097fB8c2DE563223E8",
      "txHash": "0x5c9fd783bf56695eb226c0892d2288996b8ab334aa0f48cadb08dfc8a48e8e79",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)4360_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)5569_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)5569_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)5569_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4360_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)5569_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
