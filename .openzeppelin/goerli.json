{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xc6d5D4683F01f2F5709EF4f072e2DF559fF54D47",
    "txHash": "0x5cebdfa7932a938e1e889ab0da73ef89d45ba6a195a6b46963cd892d5ce7fb26"
  },
  "proxies": [
    {
      "address": "0x4957f46a74A1c6C9e761c46298A9975A3CD6b1B8",
      "txHash": "0x51c5784cf48c4ae8254579ecdca623de4e71ffe01fdf7975e2a05574f7c1adb4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cf445ed40891e3516c9b1bbf390f6bdea777144a0b0a3a38af7abccd48dd2d9f": {
      "address": "0x8B6fFB91B4F7c6Dad9d90a62e96Cb0C6e00Fed51",
      "txHash": "0xb123f8feb909a9199f2049f9db72e7fc13104d35e766d59f075903b1a75f563c",
      "layout": {
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2048_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:21"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2999_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:24"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:26"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:29"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:31"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:34"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2999_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2999_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2048_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2999_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
