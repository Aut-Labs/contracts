{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8aAC5570d54306Bb395bf2385ad327b7b706016b",
    "txHash": "0x78acbe7221c7b6e171b1dd3bf4eb76e6b334fe19ff083d0159a3d6f5be78b203"
  },
  "proxies": [
    {
      "address": "0x64f5219563e28EeBAAd91Ca8D31fa3b36621FD4f",
      "txHash": "0xf6f6f940f08f5c541a7acd345f2180eb8dfaed68e1059cd8556953d0256b4f37",
      "kind": "transparent"
    },
    {
      "address": "0x840748F7Fd3EA956E5f4c88001da5CC1ABCBc038",
      "txHash": "0xf96e72957fb55069c06e02dc813f3aca84e652c16cb790c7ded6b972ef0390ee",
      "kind": "transparent"
    },
    {
      "address": "0xc075BC0f734EFE6ceD866324fc2A9DBe1065CBB1",
      "txHash": "0xb3cff722273892a438fafe2fd323c1b5b6aaa39ded7e91f9b0b6c16d71222922",
      "kind": "transparent"
    },
    {
      "address": "0x6345e50859b0Ce82D8A495ba9894C6C81de385F3",
      "txHash": "0x7fec329cfbd9e02db0c3180cae119641cfaa1a8c024db3a054b29e2efcf4454d",
      "kind": "transparent"
    },
    {
      "address": "0x9CC8B5379C40E24F374cd55973c138fff83ed214",
      "txHash": "0x6b6749bb65a83fdd5f5cdec66e0b27cfd69f0e421819a549944b3dff2c483712",
      "kind": "transparent"
    },
    {
      "address": "0xDC57724Ea354ec925BaFfCA0cCf8A1248a8E5CF1",
      "txHash": "0x7d6d5ff5e121cb1f6a42a08839c2f60be09d8cecbae2aa34952d58f317cadc78",
      "kind": "transparent"
    },
    {
      "address": "0x9abb5861e3a1eDF19C51F8Ac74A81782e94F8FdC",
      "txHash": "0x571a4add6acc5b28090320c9bffa8fe1b802ecd03011191b7ee9f4b98a79c2b5",
      "kind": "transparent"
    },
    {
      "address": "0x8B342f4Ddcc71Af65e4D2dA9CD00cc0E945cFD12",
      "txHash": "0x96b796ba05081d20fc159ed9b340559900a984f45ed66f8f8652d1f4249199bd",
      "kind": "transparent"
    },
    {
      "address": "0x519b05b3655F4b89731B677d64CEcf761f4076f6",
      "txHash": "0x8c1cf541a9a5b499838dd22a03100f7cdd9a5d1b7171d2366d9705d880079236",
      "kind": "transparent"
    },
    {
      "address": "0x0D92d35D311E54aB8EEA0394d7E773Fc5144491a",
      "txHash": "0x6f43cadfe1e569400c940645c19577debb076c71590a840db408519ab7f6925f",
      "kind": "transparent"
    },
    {
      "address": "0x5f246ADDCF057E0f778CD422e20e413be70f9a0c",
      "txHash": "0xa222ae4fb3163811426f319a65dd2243cf6bf9bccb89d224afddc2d2dafcecac",
      "kind": "transparent"
    },
    {
      "address": "0xE401FBb0d6828e9f25481efDc9dd18Da9E500983",
      "txHash": "0xb4ff5d6f7a23a1470bfffacdf695ee303fc49af28554abc17a58ec2b3d9c968d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2b94224b780287fda826b85910109eb6c0bee743bc996a2b191c627ed88bec7c": {
      "address": "0xa31F4c0eF2935Af25370D9AE275169CCd9793DA3",
      "txHash": "0xcb4d4728918a7132d716cdb19b762da6639d6248dd4a3a8e8717e51a5f9fd135",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2745_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:18"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4657_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:21"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4657_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)4657_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2745_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)4657_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "794541010bfa7a58bb6ad5df3dd274c0eb10801e124f1911c18c549ca09a0149": {
      "address": "0xa85EffB2658CFd81e0B1AaD4f2364CdBCd89F3a1",
      "txHash": "0xfd05de6831a851481afa58f6d2cc4d4031c9dd1f8e3aba38a4cf51a551be9f70",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1921_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:18"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2656_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:21"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2656_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2656_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1921_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2656_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
