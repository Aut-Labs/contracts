{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
    "txHash": "0xbdc3ea72c49c8620737443c2ae2d50fb5ac4e693db95daf915a15965522af7a9"
  },
  "proxies": [
    {
      "address": "0x64f5219563e28EeBAAd91Ca8D31fa3b36621FD4f",
      "txHash": "0xf6f6f940f08f5c541a7acd345f2180eb8dfaed68e1059cd8556953d0256b4f37",
      "kind": "transparent"
    },
    {
      "address": "0x840748F7Fd3EA956E5f4c88001da5CC1ABCBc038",
      "txHash": "0xf96e72957fb55069c06e02dc813f3aca84e652c16cb790c7ded6b972ef0390ee",
      "kind": "transparent"
    },
    {
      "address": "0xc075BC0f734EFE6ceD866324fc2A9DBe1065CBB1",
      "txHash": "0xb3cff722273892a438fafe2fd323c1b5b6aaa39ded7e91f9b0b6c16d71222922",
      "kind": "transparent"
    },
    {
      "address": "0x6345e50859b0Ce82D8A495ba9894C6C81de385F3",
      "txHash": "0x7fec329cfbd9e02db0c3180cae119641cfaa1a8c024db3a054b29e2efcf4454d",
      "kind": "transparent"
    },
    {
      "address": "0x9CC8B5379C40E24F374cd55973c138fff83ed214",
      "txHash": "0x6b6749bb65a83fdd5f5cdec66e0b27cfd69f0e421819a549944b3dff2c483712",
      "kind": "transparent"
    },
    {
      "address": "0xDC57724Ea354ec925BaFfCA0cCf8A1248a8E5CF1",
      "txHash": "0x7d6d5ff5e121cb1f6a42a08839c2f60be09d8cecbae2aa34952d58f317cadc78",
      "kind": "transparent"
    },
    {
      "address": "0x9abb5861e3a1eDF19C51F8Ac74A81782e94F8FdC",
      "txHash": "0x571a4add6acc5b28090320c9bffa8fe1b802ecd03011191b7ee9f4b98a79c2b5",
      "kind": "transparent"
    },
    {
      "address": "0x8B342f4Ddcc71Af65e4D2dA9CD00cc0E945cFD12",
      "txHash": "0x96b796ba05081d20fc159ed9b340559900a984f45ed66f8f8652d1f4249199bd",
      "kind": "transparent"
    },
    {
      "address": "0x519b05b3655F4b89731B677d64CEcf761f4076f6",
      "txHash": "0x8c1cf541a9a5b499838dd22a03100f7cdd9a5d1b7171d2366d9705d880079236",
      "kind": "transparent"
    },
    {
      "address": "0x0D92d35D311E54aB8EEA0394d7E773Fc5144491a",
      "txHash": "0x6f43cadfe1e569400c940645c19577debb076c71590a840db408519ab7f6925f",
      "kind": "transparent"
    },
    {
      "address": "0x5f246ADDCF057E0f778CD422e20e413be70f9a0c",
      "txHash": "0xa222ae4fb3163811426f319a65dd2243cf6bf9bccb89d224afddc2d2dafcecac",
      "kind": "transparent"
    },
    {
      "address": "0xE401FBb0d6828e9f25481efDc9dd18Da9E500983",
      "txHash": "0xb4ff5d6f7a23a1470bfffacdf695ee303fc49af28554abc17a58ec2b3d9c968d",
      "kind": "transparent"
    },
    {
      "address": "0x799a5Fd57d09B617e554DaC16A7262EbE3EfF8c3",
      "txHash": "0x72ccc7b850972682b1df741dc41322038cd642b22df459cf4f3dce0ad68b58af",
      "kind": "transparent"
    },
    {
      "address": "0xd5660525C2378294bfe3b8197f714CcBFD6654bb",
      "txHash": "0xe2c675d005cea041e25f06d45e0e51f01a92d7d53fb3f9031e6f662a104bc1b6",
      "kind": "transparent"
    },
    {
      "address": "0xbFd1bf336a68442dA3e05Ca4d8d9Afd0D53D25e2",
      "txHash": "0xbcc4f8070f7b1f419061851890b0783c14dd40a2b1621e2fbf14b7459934c7b6",
      "kind": "transparent"
    },
    {
      "address": "0x9a35F13Ed8DB3FbDBA56bF3202Eb3A7191C43385",
      "txHash": "0x976e1254f7b6dccb7d1a2071d1480063706cf275ef03f91968ae3fe0b22fa9f9",
      "kind": "transparent"
    },
    {
      "address": "0x0C4aC117D6F9EC21BaC9DFE88949c86303fF3Adf",
      "txHash": "0x93bcf87b36bfa2036dce7b8b1d4f6367a7d19fae40de293c6d5f649a7b6de9c3",
      "kind": "transparent"
    },
    {
      "address": "0x23b9efEC6328249538614171626feAf27031791b",
      "txHash": "0x61d69229a02f4efd02d4f1f9bdadbfdbfc71b083ef10545dd599054496ffc48b",
      "kind": "transparent"
    },
    {
      "address": "0x5b2Fa8B9595517672D8Ec04Ac178189D78Cf64A5",
      "txHash": "0x5c0add0e9b79c378df5293bad9f04cde80faca5e86b2b06a3465ccc74a4ec55a",
      "kind": "transparent"
    },
    {
      "address": "0xBb1b80a6b42c78402b4d6621d8f04cd3c646a0c9",
      "txHash": "0x8ebf82fb0fe9404df2e630416b04041eaa602d91844946de7870d1573547bd50",
      "kind": "transparent"
    },
    {
      "address": "0x3aB35Bd6Ff2Ab3adbb4BF1cd5D575c37BC89557A",
      "txHash": "0x0788ee0ae81dfe1af1321b162bc8b057b64452ff2f424dd736fd41ae27d1cc4b",
      "kind": "transparent"
    },
    {
      "address": "0x8ebc70287Fd928CFc3d4Dc172DC236b5E929bF6c",
      "txHash": "0x14dbb6a9518802504e08ad52d498af8b411e184e84ab242351f334cb16cd8c50",
      "kind": "transparent"
    },
    {
      "address": "0xb560D01a05e987B395Aa79f995cb71D4D43ba075",
      "txHash": "0x8d317f59852f6e7fee7f2d2c3fd62229692617bdf163156d1cd7f4d771c2e226",
      "kind": "transparent"
    },
    {
      "address": "0xB35fD70209F57eC6B099f4C16234F568BC6cAeF7",
      "txHash": "0x542f9d72d8e632ff197cfbc1d651588f5af143fa5c17efc59559ceaf14b9e0dd",
      "kind": "transparent"
    },
    {
      "address": "0x4d4e00Ec0f2f8045c144eD04Ee9259FB5c00BF5d",
      "txHash": "0x3181cbc0d728d65aebca69b9e7637e3da46a522aca0f6da79a20bc43da84e191",
      "kind": "transparent"
    },
    {
      "address": "0x406Fa25273ecee6AcCAD75420147A97BcF35f592",
      "txHash": "0xef42e298b7e5a1388e237d8d31a1a4d8bdfdabd57e392c94e7d26ca66bef93ae",
      "kind": "transparent"
    },
    {
      "address": "0xBc3Bf6C2c8f783Cd6A992941477c0aE89111cf2c",
      "txHash": "0xcfcc3011970ffd224962aa6b98899fac35d30decb3bd010b8109444e9967cfec",
      "kind": "transparent"
    },
    {
      "address": "0x9ca0A1C3a988E9C33899b0ec30738203E3f871ff",
      "txHash": "0xfa79af4bc2f296c3744e9d72a6b5b22f2b84c036209ac5782a110524c74cdb29",
      "kind": "transparent"
    },
    {
      "address": "0x2E38eA494b45BEEDe25A69BE8566F023bD2611CF",
      "txHash": "0x7572a7f3139ddfac3e7aadc67b8a1df9041459626b097f5099274d25e2df1751",
      "kind": "transparent"
    },
    {
      "address": "0xe70fc4dbE4b655DD80FE6C02e0E9C5d3215420Ef",
      "txHash": "0x49b3c4d32e685504ecab709bbaf9c309fee7c40c9d51e83237e52a605ed7ccd7",
      "kind": "transparent"
    },
    {
      "address": "0x9E054241049DFb717bB48e9A827BE1aD7E7c3765",
      "txHash": "0xf8a2866aa64eb4b3b7341e4913cd760ed4d26b4641da7c56d2aca8ee63763d92",
      "kind": "transparent"
    },
    {
      "address": "0x0d1517a685494A45cE8Af3dCDFBe0afEd06C049e",
      "txHash": "0x433495d2901bc69050658dccd7537e5a492102e8f511594c32ef7d5c0750c687",
      "kind": "transparent"
    },
    {
      "address": "0xBFf03dF70F0da9A31B775cba6A338B9BC6d7991b",
      "txHash": "0x254e14363830d9c46525f2f12b1dcd1dd1ae4fdf430c5331dcf7559650eb17cb",
      "kind": "transparent"
    },
    {
      "address": "0x939dE020A9242b6f632BB6A47F9CE8Db897F8C38",
      "txHash": "0x64c7c85179549b7dd292895a60f4a4e79b45d598fe4e4c1fcedc988146c63246",
      "kind": "transparent"
    },
    {
      "address": "0xD04459e53eBdFbEaFf665F5cA5C6Ba1C2Fb3ADd7",
      "txHash": "0x4bf02ed84b742002c1459b747300f393555b5ceba080b785a8794c6003e8aa6f",
      "kind": "transparent"
    },
    {
      "address": "0x0aC11d4499D931dEb80D607D0Dbe08aEe660c963",
      "txHash": "0x6df67ea77cb7dbfa5769f4f42c0c018f0dddde8967364cf1ae39710dbcd537b5",
      "kind": "transparent"
    },
    {
      "address": "0x81a52516768C42C1555ed8B5F4BC457F03AEB4e6",
      "txHash": "0x33d0ab4210edbe5b6d600ad3d4b34f51e4fac1cfcb3ab17d48398e50f52fdf19",
      "kind": "transparent"
    },
    {
      "address": "0x6AA07Bb485297f35f55233b62078119f04aF9871",
      "txHash": "0x01873d49a8783a4e15f8e07a89f4c3d06f23ac6e6dfc36933552f93dd24dd377",
      "kind": "transparent"
    },
    {
      "address": "0x01A42864FdF109E7816706E205c0620d92C18278",
      "txHash": "0xcec5612d7d532e66d8c375a68aed74afb87efe849e1a570f2df5bcc940932691",
      "kind": "transparent"
    },
    {
      "address": "0x4e7B447cF5DA9521e9a2222Fb77BAdcb299708E4",
      "txHash": "0x6fc537291ad348560f65f716bc946a58b3c84fadcee05bb92af83e48981a456c",
      "kind": "transparent"
    },
    {
      "address": "0x5E9a2fDDF58500ca5304D1D2F05E439cB1472e15",
      "txHash": "0xc8e373a6e3dda2c999815c900ca9725e57f611b96b35621b24891cf20d817fac",
      "kind": "transparent"
    },
    {
      "address": "0x3380B63bac55501492Aff80f2d7eF5c171909AE1",
      "txHash": "0x5d288b7531e63988c7dc1578a506ae9c72cc806b81df10c5e7164114728b2ff1",
      "kind": "transparent"
    },
    {
      "address": "0x8558Ee673843840C625F6219b408B1b3537C9044",
      "txHash": "0x4304c5249dd526776b79f633dd834d784310af3c8eca6a713b02ce89b90abae4",
      "kind": "transparent"
    },
    {
      "address": "0xDAD5a164A3049A443eD1530B70390Ed7663AaD1f",
      "txHash": "0xf7639c17f1dad6297a41a5dbe8b898cc0a48cbbb0d7ac220de2ee3f9bbadac76",
      "kind": "transparent"
    },
    {
      "address": "0x1774432a1cA1a187511A0546268052884033531f",
      "txHash": "0xa947bfd11a16073552b380647512aa8859117815c4f7f52be052d7aee28d853a",
      "kind": "transparent"
    },
    {
      "address": "0x740418969eC7B1e89Ca05Cebc72b4C4391920f4a",
      "txHash": "0x4dbbb3c87229e3cf90e5c69e972802897179b86554b9f53db783d4f6cffda350",
      "kind": "transparent"
    },
    {
      "address": "0x57eECddbB316E97FD019fd7DAB1053B2CdDcd555",
      "txHash": "0xf1a66b4998f4997b15b2d06860b329542d3abfca931908e6484110803d5e01cc",
      "kind": "transparent"
    },
    {
      "address": "0xB5a59366FA918C970BCC8af9870Df02Df90BE2B3",
      "txHash": "0x460721d3b997fdd3cdff648b578be7684acf30b66065514fd831994a4d2778e7",
      "kind": "transparent"
    },
    {
      "address": "0x2e80EB94C6F37d9fC4c9BB98D301990debcA56dd",
      "txHash": "0x8d3c9e4d94b5a25d5a6907b77a8cdfc9d71a45ac51ac79a8dfb88f1bc39519a4",
      "kind": "transparent"
    },
    {
      "address": "0x3aD763c36AfA76bedBf52796D2C9Ce0C2454cf5A",
      "txHash": "0x6a9766544bb20ce3aa9de630b31d6684d37f32c859f63989a837384f0eacec0a",
      "kind": "transparent"
    },
    {
      "address": "0xa5543465883092C825D12698473838B50d84639f",
      "txHash": "0x654c1b08585d9e832f74d3a0e2ebc1808820ff99c630d15dbe9982d1e5569ffd",
      "kind": "transparent"
    },
    {
      "address": "0xf24078B040406e5FC3DC3E21f0CdF475e5A42c49",
      "txHash": "0x357b65c290bde8235194dcf77d119eceb37ecf8d8daac3563b4fac4a814f7c71",
      "kind": "transparent"
    },
    {
      "address": "0x629E7e7a0cacA1555cAb9B48A3B3F3dbe9052356",
      "txHash": "0x6ace7a9da1b051cce9df8b3e7bc1422e9bb144dab5d934fdd034d96f60c6dc3a",
      "kind": "transparent"
    },
    {
      "address": "0xE85dEFbb63905657Ebb426f02aaCDa05707b5bA0",
      "txHash": "0xec2e57a2f0746b63e2190131ee10d7e2e95d97ece4c9ef69f015adb49d1f81ea",
      "kind": "transparent"
    },
    {
      "address": "0xD3eCE3409B27Aa484c303a41ec4ba83C4973335A",
      "txHash": "0xbd47e8c66e97a1be1ab5fd73539d8343551f2d08c21627da7246daec856838b0",
      "kind": "transparent"
    },
    {
      "address": "0xb68a202cE0FB25ea7648eA29Ff632fCd66c2262f",
      "txHash": "0x8c67aaeba0ebfc73c19248b0acba86ac1b00db4647dc7154e783e41f6d25c6a3",
      "kind": "transparent"
    },
    {
      "address": "0x11d51B9bec07CdCB55E845E14BB9784C11D8A6AC",
      "txHash": "0x90727d8e9b9badd2cc25389f3b7bc5021f4451e73f8588165cf5ae7670069d09",
      "kind": "transparent"
    },
    {
      "address": "0x18c26Ab7E1C8DB60a58d61226958DEF1Ca0F48c4",
      "txHash": "0x56caa4e550dc7ddb49815b81ce719932ecec55ceff4a0b1b49dc58f0d6399202",
      "kind": "transparent"
    },
    {
      "address": "0x933aC73D543c6421C6574056a39e65218F1389f5",
      "txHash": "0x0557bf093f37e0b022475768221489ca01b6e1d90e2b5070a29ece6efc5e2073",
      "kind": "transparent"
    },
    {
      "address": "0xaDDf52f84af87D7D0E518EF26690b1A33d38569f",
      "txHash": "0xd0444159dfb13174d62de02d9ce810ab69cbc8409910fb4129c08b84fbc88488",
      "kind": "transparent"
    },
    {
      "address": "0xFb15A1E58a4054e653Ae6130ba6b61Ff60cf6ffD",
      "txHash": "0xcaf0c9db219915b1f27d66bc9162c6f1016b43aa6bd1103baca7a75da8639a25",
      "kind": "transparent"
    },
    {
      "address": "0x5924e46833e0a0A37Cb49FdE3426658Cf0BFF519",
      "txHash": "0xa478b16d9f0949ef8577b80155f4cf4db8ab858811e5c2f15d6df422dd833ec8",
      "kind": "transparent"
    },
    {
      "address": "0x3468305be54832f3Be060FDc502106D83A1b7516",
      "txHash": "0x0521ccaf40725b9a472aac1fc26c5c3dd017ce3db0e733643646f3e87f4ba501",
      "kind": "transparent"
    },
    {
      "address": "0x332447f0038DB1BFE29d32Fbe5Bf30D3b0B08665",
      "txHash": "0x1cd0b0d08498b7a80ba5e037d7821bc6f6ef68e6267aaade03eadedc921051b8",
      "kind": "transparent"
    },
    {
      "address": "0x7Ef698c826bD2f2Dc478c0f13Cc1A4d6Bfd7e833",
      "txHash": "0x27aadf3f7ff2f47da7a3763bfb27370c0a67b4634ea947e6fd1c4123b452a5a7",
      "kind": "transparent"
    },
    {
      "address": "0x4aD04F9dBe9F99B995ce148D827A856b9aa9b4C4",
      "txHash": "0xa6cae82fe4a76a51a22adb3aeb0472d16d49a46f5db29e120f5b395c71a4edf5",
      "kind": "transparent"
    },
    {
      "address": "0x517D019A5FF550AEd40beEa2d99Ec7AAf28cAea0",
      "txHash": "0x53309b9430470ad16eb678d2476cdfdaa3e128c77a52f32232c2a21cf0bd40d5",
      "kind": "transparent"
    },
    {
      "address": "0x4593ed9CbE6003e687e5e77368534bb04b162503",
      "txHash": "0xca1bec6f58a75842572fb49923635b7a60deeeed505cd8b25577fcdd794344bf",
      "kind": "transparent"
    },
    {
      "address": "0xdF46e54aAadC1d55198A4a8b4674D7a4c927097A",
      "txHash": "0x9a1df2d75090a1ac08f73cd11ae214626b3b6ec4871e9ac8365c0de0c537faeb",
      "kind": "transparent"
    },
    {
      "address": "0x742489F22807ebB4C36ca6cD95c3e1C044B7B6c8",
      "txHash": "0x22f87c72570bcf3341ca6a447561880301d8ab91ba0e4f237ef91d97da95203f",
      "kind": "transparent"
    },
    {
      "address": "0x286B8DecD5ED79c962b2d8F4346CD97FF0E2C352",
      "txHash": "0x3abd087619790769e6d288caaa033d5122e185bdf6e434d72967c6877cb2e748",
      "kind": "transparent"
    },
    {
      "address": "0x9c65f85425c619A6cB6D29fF8d57ef696323d188",
      "txHash": "0x83be4fabfd59ebdbe9cca758c627423042805a9f05b340c0936eeb90473d555e",
      "kind": "transparent"
    },
    {
      "address": "0x3dCe73fF914a4F844159A4B2dD9170d9499a783e",
      "txHash": "0x6209e0a9a03cde4745524f674b1d3b67a5c797f6fac5c15b0c55933fcee38e77",
      "kind": "transparent"
    },
    {
      "address": "0x3887f0555399FfB97EC62B7f8F99290d5007e769",
      "txHash": "0x7defd2842f267111951ff4b510355f4ed2567cbc60c8e2951a495cdafee37049",
      "kind": "transparent"
    },
    {
      "address": "0x37767d8102966577A4f5c7930e0657C592E5061b",
      "txHash": "0x163bb12ee75d64aa1a3b64e36298cfa4487bb38531be34fcc6616e379caa098e",
      "kind": "transparent"
    },
    {
      "address": "0x66dc1b08F8e19F81430b034218fce3dD7CF7F8E1",
      "txHash": "0x41d3382219e94dcf11629a81563e21435a28f865cf2813761d7acc06c1d9dd9b",
      "kind": "transparent"
    },
    {
      "address": "0x83943e85c4e4e80a712fCA4FFE8E56D37Bb207c4",
      "txHash": "0x44469644f2e41d9f87dcd7594a374486d8759d9d59e9396060e072782ffc47f8",
      "kind": "transparent"
    },
    {
      "address": "0xf98Dff28d2A4B3B676204d0B4163CA6fb59F53Dd",
      "txHash": "0xd751c2354764e190ed10a0b6c3e0bdbc8b61db7988ca6622c814f28f05d9658b",
      "kind": "transparent"
    },
    {
      "address": "0xAaC7D4A36DAb95955ef3c641c23F1fA46416CF71",
      "txHash": "0xa8f248baeee2f28684b7ce153868e3e666e0b933e42781990896586faebc4b2c",
      "kind": "transparent"
    },
    {
      "address": "0x2fe19128A8257182fdD77f90eA96D27cA342897A",
      "txHash": "0xdabdec955a1d4dac1588adb792db19db4b4f6a8b58da86d27058816ea5258166",
      "kind": "transparent"
    },
    {
      "address": "0xe3EF345391654121f385679613Cea79A692C2Dd8",
      "txHash": "0x28db9eb5441ea5f068d58f3cac64ce8c0530226c172171899385765c19c2443f",
      "kind": "transparent"
    },
    {
      "address": "0xeF66010868Ff77119171628B7eFa0F6179779375",
      "txHash": "0xc8a2e61de7a9b3dcbf46b4bd8d5081c1ceb2c500b481d5ac7793a57e671bb9dd",
      "kind": "transparent"
    },
    {
      "address": "0xACB5b53F9F193b99bcd8EF8544ddF4c398DE24a3",
      "txHash": "0x4f07eb1b8022dcb16d1bdf424f3cb31aea4a67e6c947c6b5bd2836794d2a5b72",
      "kind": "transparent"
    },
    {
      "address": "0x1E3b98102e19D3a164d239BdD190913C2F02E756",
      "txHash": "0x1829970265aedb00a48f7693fdb125c0ebc51f7c367f1ab9f11aa69f7b015ec4",
      "kind": "transparent"
    },
    {
      "address": "0x70E5370b8981Abc6e14C91F4AcE823954EFC8eA3",
      "txHash": "0x6f471a366f68ecb6f49aded9595f122258b258f974eeed3e1d4e3a9f8486d283",
      "kind": "transparent"
    },
    {
      "address": "0x7Cf4be31f546c04787886358b9486ca3d62B9acf",
      "txHash": "0x2083d4191ac0dc8f8f54043ab426bf143afa166edfe9a99418623a5d6e6ff470",
      "kind": "transparent"
    },
    {
      "address": "0x2A590C461Db46bca129E8dBe5C3998A8fF402e76",
      "txHash": "0xe4265e7427f5bf33c27869bec29d7ab007ab4665c534564e1df16e605e520cec",
      "kind": "transparent"
    },
    {
      "address": "0x9849832a1d8274aaeDb1112ad9686413461e7101",
      "txHash": "0x4d067af779f2a4512cfd7d402bdd0b5954a7ae4ede9c50ed8016a014f421e6b3",
      "kind": "transparent"
    },
    {
      "address": "0xed12bE400A07910E4d4E743E4ceE26ab1FC9a961",
      "txHash": "0x28a9cde49a9be70664bd09b932bed58c4adfec84fab5b7b2536b54a429066741",
      "kind": "transparent"
    },
    {
      "address": "0x43b9Ef43D415e84aD9964567002d648b11747A8f",
      "txHash": "0x227589af8158e45b187f81179161e156b156976b9ad5fd011663ae0b317c2c22",
      "kind": "transparent"
    },
    {
      "address": "0x55027d3dBBcEA0327eF73eFd74ba0Af42A13A966",
      "txHash": "0x48d5b054bb9a50383070c5005d411eedc6276225837f218c3a2948a4fc53130b",
      "kind": "transparent"
    },
    {
      "address": "0x1Dbbf529D78d6507B0dd71F6c02f41138d828990",
      "txHash": "0x6213e1ec4e8961d708374f578e54d5427b44a7c05834ecb5bb0a8fce5c203340",
      "kind": "transparent"
    },
    {
      "address": "0x3AeEBbEe7CE00B11cB202d6D0F38D696A3f4Ff8e",
      "txHash": "0xb9e00fa606a5a5d73e873f03fd55a1ea19ea4c8eb35a11db4b0f15d1d5334d4f",
      "kind": "transparent"
    },
    {
      "address": "0x01D4648B896F53183d652C02619c226727477C82",
      "txHash": "0xd1b3f4e3b05233cee845fe70514362d8521edfd2c0634c5209eb37fab3ed53dc",
      "kind": "transparent"
    },
    {
      "address": "0x88B9Ad010A699Cc0c8C5C5EA8bAF90A0C375df1a",
      "txHash": "0xec3b47aa03a436c0a138397edc7782d55a3b853fd7463907318459925d40b6aa",
      "kind": "transparent"
    },
    {
      "address": "0x594f79e85F6f041eb56cF6822FF4125ee316409E",
      "txHash": "0x493104609435324dc6f38be5ffe5cb3a4228c7cec684a661a26dbf266b79ba9b",
      "kind": "transparent"
    },
    {
      "address": "0xb9b0c96e4E7181926D2A7ed331C9C346dfa59b4D",
      "txHash": "0x2f93d5d5773b1fc00901bba8ebd0365e2fc2a300d407cc7a92da44ed351d9e50",
      "kind": "transparent"
    },
    {
      "address": "0x6D39d71fF4ab56a4873febd34e1a3BDefc01b41e",
      "txHash": "0x4bbaeb58e7889dcb39961f77effd588325f2014498d7dbb14dc3b91dfaacc11e",
      "kind": "transparent"
    },
    {
      "address": "0xEb2cF97CB2616f4c4a5C66ce4406B34955e57397",
      "txHash": "0x0e1c03e771936fbec5c9c0f5b95f691afd05e52179b16584a65c7227a75fcad9",
      "kind": "transparent"
    },
    {
      "address": "0xD0798f8308EFE28516C36D5d0dC31f68fD8D0d05",
      "txHash": "0x21a6871f5ce04915609d7982bc0d8e0940356b73966f408e89e330c99c6901ed",
      "kind": "transparent"
    },
    {
      "address": "0x0f9Ad2d34a3C2943375185437EF53B2BbdA76cbb",
      "txHash": "0xfe9c054bebc61211be1155e680754e640e37e2971d7ee05c56c80e8424af3cc1",
      "kind": "transparent"
    },
    {
      "address": "0xe3963EF7CC3044B64842d0AAe7F2Bf1543D341Ec",
      "txHash": "0xc6a34fe8ae1e6dc04ae0c81e810421800ea5ff46506e9873391c4cdc5880c36d",
      "kind": "transparent"
    },
    {
      "address": "0x235E4A333CdD327D68De53d8457C4032EeEBCBF6",
      "txHash": "0x507f590576f67390369b2a6640ecf9a54c872d42496717e9e2bbef75dbb46fbd",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xe6b35bbb6c9fde84815166d0e37e8b2c2e51736dbea3ef7daefb7a84d7eb2da8",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xbceb04017e2e930c0b40db60e4a06f4e4275b0c1f98a94acf3ad1d7f74cdeb92",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x2107f50c8052b3444aab0121776677cd02e07965ec1547903a45b548e8cd6296",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xd2879a15708e86293b3fef6034c4196a948d4b7e123ce1dcc37173409c37bcd5",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x34ae2ed3d04f18425e36368e3cc70dfb80d422db6a1cb3d92a04fae91e1c5ca3",
      "kind": "transparent"
    },
    {
      "address": "0x7C8BaafA542c57fF9B2B90612bf8aB9E86e22C09",
      "txHash": "0x6908d164e527587bedf30851fab64f0fd4763eb273062be7465b5afeb5886907",
      "kind": "transparent"
    },
    {
      "address": "0x0Dd99d9f56A14E9D53b2DdC62D9f0bAbe806647A",
      "txHash": "0x59c4ee554c1da046fa7ed77b9d8307a30b3e9bceea832fdf988c40edde2ea2b2",
      "kind": "transparent"
    },
    {
      "address": "0xd3FFD73C53F139cEBB80b6A524bE280955b3f4db",
      "txHash": "0xb3e8fec0d7dbaee169462dddb1277f0ec85fe8619fe797e4f720ba0b048ef498",
      "kind": "transparent"
    },
    {
      "address": "0x987e855776C03A4682639eEb14e65b3089EE6310",
      "txHash": "0x8c51ace3568c5f5366c17b9aa9b54c77727640311d0bae18b664c63ed6babecc",
      "kind": "transparent"
    },
    {
      "address": "0x2c8ED11fd7A058096F2e5828799c68BE88744E2F",
      "txHash": "0xf0f829f8afdf635d7ad6acb71418e8311c1d02979d91c49a953ce64ca65599e8",
      "kind": "transparent"
    },
    {
      "address": "0x38F6F2caE52217101D7CA2a5eC040014b4164E6C",
      "txHash": "0x35be0e172a0cf0286c871f79f46573c91f00be7365e55924d745bcb38de7669d",
      "kind": "transparent"
    },
    {
      "address": "0xd9abC93F81394Bd161a1b24B03518e0a570bDEAd",
      "txHash": "0xf35a182ef8baf8ea5ebb9aace22a02734411d9f07df230ca8befd156443a60aa",
      "kind": "transparent"
    },
    {
      "address": "0x88D1aF96098a928eE278f162c1a84f339652f95b",
      "txHash": "0x6ed377a716628e1f8ea708fb663c77157599abd8c59490b1c708208047f7dbd1",
      "kind": "transparent"
    },
    {
      "address": "0x96E303b6D807c0824E83f954784e2d6f3614f167",
      "txHash": "0x112f742380abcb718011466d159d25eee05efe1e942a6287021d6425a4f7a2ae",
      "kind": "transparent"
    },
    {
      "address": "0x930b218f3e63eE452c13561057a8d5E61367d5b7",
      "txHash": "0xfea4a96905cf22f6c768983fa2bbd525f071f49b8e380586d0526bc34d687025",
      "kind": "transparent"
    },
    {
      "address": "0xA901DA770A472Caf6E6698261BB02ea58C5d3235",
      "txHash": "0xfe0c2b3ac56cfc18ecddca5f0c4357c6375dcbb23d2920efa341b7b946c66827",
      "kind": "transparent"
    },
    {
      "address": "0x63ecE4C05B8fB272D16844E96702Ea2f26370982",
      "txHash": "0x133ae1920f8367fdeaa95eea6ec1110c6dfe2511e655977932531e985a1fe12c",
      "kind": "transparent"
    },
    {
      "address": "0x645B0f55268eF561176f3247D06d0b7742f79819",
      "txHash": "0x12fcd00acbe281a0d35058cecc4895af9ad236255ae0a019b725101138572f73",
      "kind": "transparent"
    },
    {
      "address": "0x6B763F54D260aFF608CbbAeD8721c96992eC24Db",
      "txHash": "0xe6c3f2e7b90d20c84fde5d4e48f2e78e8545a2c46092976b3a55a8939cab371a",
      "kind": "transparent"
    },
    {
      "address": "0x093D305366218D6d09bA10448922F10814b031dd",
      "txHash": "0x8109954bb34fc8a6450e8637c476240a1787d5d1b210c6850029cb48e7792679",
      "kind": "transparent"
    },
    {
      "address": "0x42E5a852Aa5cd4284227796Bc5d2461189A65b8a",
      "txHash": "0xdcf17780d4f575441c7122218872d7754bd37ec4837abf5334334124bb39d852",
      "kind": "transparent"
    },
    {
      "address": "0x874B971cBE686566FCc9437A12E5418301Cd60AA",
      "txHash": "0x2f7f6ff18489eef02c77e1ac1a2e32c2cda11c73fb58eb1b0d8267ca22e37020",
      "kind": "transparent"
    },
    {
      "address": "0xbDF04aB3C4283B1531B8Cf812Ef21D4FEd9BE445",
      "txHash": "0x59eb4e429b62d57bac05a4b200c170971f72d089da086331eb2200e96ce58d88",
      "kind": "transparent"
    },
    {
      "address": "0x0B7108B29ad73097cF7E549D542915348d885e5f",
      "txHash": "0x0533c2b24635514c721de688b86d98331a469a58ddfb3416e89b0bb682196946",
      "kind": "transparent"
    },
    {
      "address": "0x7E6C94173C264aaE66Bf36ce047b0Aef585C2181",
      "txHash": "0xfd9755b7efb47e04763030594f25314252cd298087057d4f2ea66d7c28b4c7a2",
      "kind": "transparent"
    },
    {
      "address": "0x42d3570A90b9439F94eE552B46b93854a747b64F",
      "txHash": "0xcd03570070667d62f6099cfa6ff8497bfd41a7c9a47742381842eb4e3b4d7d91",
      "kind": "transparent"
    },
    {
      "address": "0x76F1a8278Fb5714e2771feE4F038cdBd42C330e6",
      "txHash": "0xf0bac6ef7ee3bad8738567829036d926ed1689da552c9f9d24dc572052b8d90d",
      "kind": "transparent"
    },
    {
      "address": "0xCf8355dF541e43bBB8E2a4c442942Eecd0aA1810",
      "txHash": "0x8c5516e69e4d8d65f56e8e85cacdb90ad617b3d8f95ad5690f546a3f1dbcb6ee",
      "kind": "transparent"
    },
    {
      "address": "0xF24BA5049F16d4897ff15661a9669d15CF5A98Aa",
      "txHash": "0x55cf5347fdc6271cd20e93ab358ff0a2c1f44f887c4f1704783c8be2d0d2103c",
      "kind": "transparent"
    },
    {
      "address": "0xa4b6Fa80b31d641bB3f48C234d6B809801AddA78",
      "txHash": "0x419f29522029502b7d3f6912b803922d00d0e7f32f9c4cc5f905c9bb6aa2a74b",
      "kind": "transparent"
    },
    {
      "address": "0x413b5B07557A0e80bfDe84b1D9283cC163a3F3E9",
      "txHash": "0x0439e1c94478b8401891005d20cf1e628fe9e03b737a4c5d4e7b17702dfdbacf",
      "kind": "transparent"
    },
    {
      "address": "0xe844dF90c946CecD08076D129E14a3bc04C9f5d5",
      "txHash": "0xc3170bea655e2a9de173297365cacec44dd88cf63a9948ff366cbfc8cd7a6142",
      "kind": "transparent"
    },
    {
      "address": "0x0d92C6d62552D732b3B9dbd7fe6E98e5A71c9D67",
      "txHash": "0xbf52c09ce425f356ac7799f60095bd1ffdcad2986f20cd74dbde15289532a25c",
      "kind": "transparent"
    },
    {
      "address": "0xb9A62F59F8c1359E24830e4FD209954E21B7DF37",
      "txHash": "0x4d4e3e0dcfed771715270daa56f8f4a4b45ae3e4f7c05cdcdba78c546b61f705",
      "kind": "transparent"
    },
    {
      "address": "0x72b46c86aA67f2aBa435414f410bb48300C064Bf",
      "txHash": "0xad88778d7f9695080aa009c59cc0bfdc571b6f5e2b491974f509b3e25c88d44f",
      "kind": "transparent"
    },
    {
      "address": "0x7b1E1C3dBCDCD0F0c01FCcbbA56Ad1745A30B2Ee",
      "txHash": "0x0547b1e1c2c9359b6b4b2dd94a0e76eb54525ae45b534612753b8e695dc2acf8",
      "kind": "transparent"
    },
    {
      "address": "0x1e493b995b2b9Afed46e60bd163d12F23CF628ba",
      "txHash": "0x98c3e709bbd1bc871188ec0b22a13d727f59d71f88dc75a44b23ddec0defe568",
      "kind": "transparent"
    },
    {
      "address": "0xdf207Ba73Ccd4B517bd126728296298Fef3099AF",
      "txHash": "0xd952a1916d08c1f02d18d50b9c558b34285ed5cda533a5be01dc4b2a83dde1ae",
      "kind": "transparent"
    },
    {
      "address": "0x37c6D38D67a15C07Ff636CFBCE99987fF9f1F24a",
      "txHash": "0x30c5ff2b1c792da8aadf1ec7a2750f7167661c2af455ddf10a9e1adab804fda8",
      "kind": "transparent"
    },
    {
      "address": "0xa4aE41b9bB88Eb03048EA3bb71AB32A62ebC7188",
      "txHash": "0xf16bf7285de597b6732d61ba59291a2d45ba1944463f91adc7edc340aca5f03b",
      "kind": "transparent"
    },
    {
      "address": "0x9c15162c1f7f01C64c0e068f2E48D39Cd7b18f86",
      "txHash": "0x8a1a2369c01967d142893523175523e4ff8e804701c71de4331d36513807f199",
      "kind": "transparent"
    },
    {
      "address": "0x2De939A6cC6F53E47f62453029EB62C7e7BE3C8c",
      "txHash": "0x32a4bf34e6fbb3fca616ccbad7291aebf03d4cdba58e1984fd5c74ac852527fb",
      "kind": "transparent"
    },
    {
      "address": "0xcebe3F283f05A5815C4Af0EEC721692F86e21fD8",
      "txHash": "0xf3213a7ebbaa01e748072adf1b283612c4324627be92725c731b436fec2eb1f3",
      "kind": "transparent"
    },
    {
      "address": "0x953166191665Cd5a8C1F6C8bD6b09a0a87907B58",
      "txHash": "0x52710e4543ccf82bca4154493d11fd4a7f32c0408086011357b99e9d299215a2",
      "kind": "transparent"
    },
    {
      "address": "0x800C2d0D1A61aAf76B017C9d7b091204f27211D2",
      "txHash": "0x096c671075e6f4a34f8b1eeb9f61d6eac08ee7d16f44fc83242a07a0dc7081ae",
      "kind": "transparent"
    },
    {
      "address": "0x3C04eFaED53ab8b35eD8D58F075cdCb0D22603Db",
      "txHash": "0x42f952ae0c6fbac5a96a39f54d187d2be94472513d576bf69efc6cd1c262c1e6",
      "kind": "transparent"
    },
    {
      "address": "0xb7568B0281C1D35A04aF796844C5Dcfff8E53aCf",
      "txHash": "0x156bc2687c91760b687e1e4c712b3d01b3fcb78cdf446c1420589f217c8d914f",
      "kind": "transparent"
    },
    {
      "address": "0xa9FCD9102fbe420a40B380a891f94a3Fc1D4Fb2c",
      "txHash": "0xa67ab3976836fa30ce28daf5802262c9a38f88343daba873340664c9dbf8d8ea",
      "kind": "transparent"
    },
    {
      "address": "0xb47CCB3A4Ec7879E1394f980e8A4dd2f6CC4f037",
      "txHash": "0xbaee8c7d0872c586acdac4c6e511be65b864d30f3020b02098a767c3ac2d0d5d",
      "kind": "transparent"
    },
    {
      "address": "0x950C753C0EdbDE44a74d3793db738a318e9c8ce8",
      "txHash": "0x8e4aa40b00a371a658be6670e8cca619b6025c3779a1cc54d676188f10acbfd4",
      "kind": "transparent"
    },
    {
      "address": "0x3a22fb9886227E95411403EFeD19fdB7e41c06Ee",
      "txHash": "0xdb4369aac95c0f55d155cdd632a77d32d75ac79956c34e1fccc25e64b769f479",
      "kind": "transparent"
    },
    {
      "address": "0x1867d16692cFEA9A01EEA2CD41937D03861f55d9",
      "txHash": "0xbf119fa4c22b8d09ea6c21c2b3624d37db929fea8534ea697add9e246c586421",
      "kind": "transparent"
    },
    {
      "address": "0xcF8f8313C587c6Ec6E49Be286942D451D4E0908A",
      "txHash": "0x8393e8d2ca00b74ae74649d937a2e1e6652845d94f42b6d3a00c9a0d415a5938",
      "kind": "transparent"
    },
    {
      "address": "0x251dda90Cb94f5F9F29c9cb59FA6A0CF07049632",
      "txHash": "0x86e3321bad5dade9ca43c01709360c266bf9d830bccf4c316c2cc54945609ed4",
      "kind": "transparent"
    },
    {
      "address": "0x82E8F00D62fA200af7CFcc8f072aE0525e1A43fB",
      "txHash": "0xa2a199defe3ca8beb31ebd6b046ee4362857fb21675732f46ba2c2b1e09f5f11",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2b94224b780287fda826b85910109eb6c0bee743bc996a2b191c627ed88bec7c": {
      "address": "0xa31F4c0eF2935Af25370D9AE275169CCd9793DA3",
      "txHash": "0xcb4d4728918a7132d716cdb19b762da6639d6248dd4a3a8e8717e51a5f9fd135",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2745_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:18"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4657_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:21"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4657_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)4657_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2745_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)4657_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "794541010bfa7a58bb6ad5df3dd274c0eb10801e124f1911c18c549ca09a0149": {
      "address": "0xa85EffB2658CFd81e0B1AaD4f2364CdBCd89F3a1",
      "txHash": "0xfd05de6831a851481afa58f6d2cc4d4031c9dd1f8e3aba38a4cf51a551be9f70",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1921_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:18"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2656_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:21"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2656_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2656_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1921_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2656_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5fb559b88162208144a7b8322913675dc62f0d765026efe897f21f56b341991a": {
      "address": "0xB7757653FDe43C6c337743647a31bf14Bab7cF83",
      "txHash": "0xb811a645cd4a879a5b949f301d46702f1cf1df91b7a496f0c236d3f5d13c8506",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2745_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:19"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4636_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:24"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:29"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)4636_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)4636_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2745_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)4636_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5e5e6d79fdc49611301d43ab2770b41f49cc748252c12ba4b808a9abc1a329e8": {
      "address": "0x00a66377e109B1348Ac65B31d8729a55EfEa75f4",
      "txHash": "0x190e62824d6b55ba9d44256c5ad6bb8850a5e3c052866eeb605c420e63234cd6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1921_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:19"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2760_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:24"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:29"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2760_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2760_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1921_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2760_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "58ca52095bf7e0403d5a700f1cd9dd683cb5f9e91b91cc3840a4c86a7168ae1a": {
      "address": "0x1c9788c5BB16EC5E449878fAe761206dfc3A6fEC",
      "txHash": "0xf6f9aecdbb2b5cb3682d9fe069766e7d7d04a1f6671bba7816142b1604079782",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1921_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:19"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2768_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:24"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:29"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2768_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2768_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1921_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2768_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c105eec44071589096b07b67c88dc3119d11ba0ad26ce024eb85b045f5491240": {
      "address": "0xEFf1A12D33aA1F8A9e389237d378e10d524F2f48",
      "txHash": "0xc6810e8a9963ae1cb67be769020c9f56f262850406898cc3b00be1e3187fa0a0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1921_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:19"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2835_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:24"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:29"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2835_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2835_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1921_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2835_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "20616822a55535d47258c7f1d13a2745e91823b04105cb8152448f1844241e51": {
      "address": "0xec17Cd12020c5e38641ce34d01FcD194091D16B1",
      "txHash": "0x8f9f5feb12a2ec1b804b70b0578d3f006a13e5ae0566940933b17ef7e021bdeb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1921_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:19"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2836_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:24"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:29"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2836_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2836_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1921_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2836_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5ea4bee35c1d589ec1474aa76e2ca57ddec445aa0d253a72dcbdf5612b035acf": {
      "address": "0x572316aC11CB4bc5daf6BDae68f43EA3CCE3aE0e",
      "txHash": "0xc005f32c48d16e5e3b14596a2de59f4e11b867c243064529f00254861faf5499",
      "layout": {
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2048_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:20"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2992_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:23"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:28"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:33"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2992_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2992_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2048_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2992_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "795e189558d5adaf6a2998484280dc548f2461e4c43d7bfe6fb913cf38ab0290": {
      "address": "0x8731d45ff9684d380302573cCFafd994Dfa7f7d3",
      "txHash": "0x8dfb9c7b0e26a1f32c8d711e18382d4078e682cb9506010a041b4f515a689654",
      "layout": {
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2048_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:20"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2998_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:23"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:28"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:33"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)2998_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)2998_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2048_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)2998_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1d3b288f3103532462a43e9c3a1ddf64ea6af0b58d63ce4f63060ff857b57a45": {
      "address": "0xA9e6Bfa2BF53dE88FEb19761D9b2eE2e821bF1Bf",
      "txHash": "0xf579a83f4db9c29f8e8478b2944317a62fa90e8a437c47fbcbad9b008d62c114",
      "layout": {
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2048_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:21"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)3074_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:24"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:26"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:29"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:31"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:34"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)3074_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)3074_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2048_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)3074_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ea6ad802304ec7ad5b34ae4278866a9a69e6edb6ba865edc70782b44ce81ff55": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x28ab750d08a062cab9bfed2f4423f54ffbe3d0b8e173d064f1687564c5d43e6e",
      "layout": {
        "storage": [
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ERC2771Recipient",
            "src": "@opengsn/contracts/src/ERC2771Recipient.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)2183_storage",
            "contract": "AutID",
            "src": "contracts/AutID.sol:22"
          },
          {
            "label": "holderToDAOMembershipData",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)3134_storage))",
            "contract": "AutID",
            "src": "contracts/AutID.sol:25"
          },
          {
            "label": "holderToDAOs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:27"
          },
          {
            "label": "_autIDByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:30"
          },
          {
            "label": "autIDUsername",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:32"
          },
          {
            "label": "autIDToDiscordID",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:35"
          },
          {
            "label": "discordIDToAddress",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "contract": "AutID",
            "src": "contracts/AutID.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(DAOMember)3134_storage))": {
            "label": "mapping(address => mapping(address => struct IAutID.DAOMember))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DAOMember)3134_storage)": {
            "label": "mapping(address => struct IAutID.DAOMember)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2183_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOMember)3134_storage": {
            "label": "struct IAutID.DAOMember",
            "members": [
              {
                "label": "daoExpanderAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "role",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
