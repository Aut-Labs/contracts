/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface IDAOAdminSetInterface extends utils.Interface {
  functions: {
    "addAdmin(address)": FunctionFragment;
    "addAdmins(address[])": FunctionFragment;
    "removeAdmin(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "addAdmin" | "addAdmins" | "removeAdmin"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "addAdmin", values: [string]): string;
  encodeFunctionData(functionFragment: "addAdmins", values: [string[]]): string;
  encodeFunctionData(functionFragment: "removeAdmin", values: [string]): string;

  decodeFunctionResult(functionFragment: "addAdmin", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "addAdmins", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeAdmin",
    data: BytesLike
  ): Result;

  events: {
    "AdminMemberAdded(address)": EventFragment;
    "AdminMemberRemoved(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AdminMemberAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AdminMemberRemoved"): EventFragment;
}

export interface AdminMemberAddedEventObject {
  member: string;
}
export type AdminMemberAddedEvent = TypedEvent<
  [string],
  AdminMemberAddedEventObject
>;

export type AdminMemberAddedEventFilter =
  TypedEventFilter<AdminMemberAddedEvent>;

export interface AdminMemberRemovedEventObject {
  member: string;
}
export type AdminMemberRemovedEvent = TypedEvent<
  [string],
  AdminMemberRemovedEventObject
>;

export type AdminMemberRemovedEventFilter =
  TypedEventFilter<AdminMemberRemovedEvent>;

export interface IDAOAdminSet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IDAOAdminSetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addAdmin(
      member: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    addAdmins(
      adminAddr: string[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    removeAdmin(
      member: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  addAdmin(
    member: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  addAdmins(
    adminAddr: string[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  removeAdmin(
    member: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    addAdmin(member: string, overrides?: CallOverrides): Promise<void>;

    addAdmins(
      adminAddr: string[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    removeAdmin(member: string, overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    "AdminMemberAdded(address)"(member?: null): AdminMemberAddedEventFilter;
    AdminMemberAdded(member?: null): AdminMemberAddedEventFilter;

    "AdminMemberRemoved(address)"(member?: null): AdminMemberRemovedEventFilter;
    AdminMemberRemoved(member?: null): AdminMemberRemovedEventFilter;
  };

  estimateGas: {
    addAdmin(
      member: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    addAdmins(
      adminAddr: string[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    removeAdmin(
      member: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addAdmin(
      member: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    addAdmins(
      adminAddr: string[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    removeAdmin(
      member: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
