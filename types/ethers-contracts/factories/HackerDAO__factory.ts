/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HackerDAO, HackerDAOInterface } from "../HackerDAO";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "Joined",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610125806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a230c524146037578063b688a36314606b575b600080fd5b6057604236600460c1565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b60716073565b005b3360008181526020818152604091829020805460ff1916600117905590519182527f7073afa60b48e833a1a66ebb442bc8e0d19e9f3cc05f34bdcd1da22c8d87f275910160405180910390a1565b60006020828403121560d257600080fd5b81356001600160a01b038116811460e857600080fd5b939250505056fea26469706673582212203808e3a93d05309703b809de98a49790c1d6e89d56d2cd7f679b87ddd73ca3d464736f6c63430008130033";

type HackerDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HackerDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HackerDAO__factory extends ContractFactory {
  constructor(...args: HackerDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<HackerDAO> {
    return super.deploy(overrides || {}) as Promise<HackerDAO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HackerDAO {
    return super.attach(address) as HackerDAO;
  }
  override connect(signer: Signer): HackerDAO__factory {
    return super.connect(signer) as HackerDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HackerDAOInterface {
    return new utils.Interface(_abi) as HackerDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HackerDAO {
    return new Contract(address, _abi, signerOrProvider) as HackerDAO;
  }
}
