/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Tribute, TributeInterface } from "../Tribute";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "newMember",
        type: "address",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
        ],
        internalType: "struct ITribute.Member",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610124806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806308ae4b0c146037578063ca6d56dc146088575b600080fd5b6075604236600460c0565b60408051602080820183526000918290526001600160a01b03939093168152808352819020815192830190915254815290565b6040519051815260200160405180910390f35b60be609336600460c0565b6040805160208082018352600582526001600160a01b03909316600090815292839052912090519055565b005b60006020828403121560d157600080fd5b81356001600160a01b038116811460e757600080fd5b939250505056fea26469706673582212201b12530df9f1ca1025924eb3cb6b2c6a94894c808124298bd09745384d4d8b7564736f6c63430008130033";

type TributeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TributeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tribute__factory extends ContractFactory {
  constructor(...args: TributeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Tribute> {
    return super.deploy(overrides || {}) as Promise<Tribute>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Tribute {
    return super.attach(address) as Tribute;
  }
  override connect(signer: Signer): Tribute__factory {
    return super.connect(signer) as Tribute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TributeInterface {
    return new utils.Interface(_abi) as TributeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tribute {
    return new Contract(address, _abi, signerOrProvider) as Tribute;
  }
}
