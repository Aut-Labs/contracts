/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Allowlist, AllowlistInterface } from "../Allowlist";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyDepolyedANova",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyPlusOne",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Unallowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "AddedToAllowList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "RemovedFromAllowList",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addrsToAdd_",
        type: "address[]",
      },
    ],
    name: "addBatchToAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addrToAdd_",
        type: "address",
      },
    ],
    name: "addToAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
    ],
    name: "isAllowedOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addrs_",
        type: "address[]",
      },
    ],
    name: "removeBatchFromAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addrToAdd_",
        type: "address",
      },
    ],
    name: "removeFromAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000908152602081905260409020805460ff19166001179055610a908061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063846be7ed1161005b578063846be7ed146100ff578063974b152114610112578063babcc5391461013e578063f8e86ece1461016a57600080fd5b80632f54bf6e1461008d578063519cecce146100c45780635da93d7e146100d95780637065cb48146100ec575b600080fd5b6100b061009b366004610923565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b6100d76100d236600461095b565b61017d565b005b6100d76100e7366004610923565b6103bf565b6100d76100fa366004610923565b6104b4565b6100d761010d36600461095b565b61057a565b6100b0610120366004610923565b6001600160a01b031660009081526020819052604090205460ff1690565b6100b061014c366004610923565b6001600160a01b031660009081526001602052604090205460ff1690565b6100d7610178366004610923565b6107b1565b3360009081526001602052604090205460ff1680156101ae57506000356001600160e01b031916637c74376760e11b145b156102ba57336000908152600260205260409020546001600160a01b0316156101ea5760405163b1e153ab60e01b815260040160405180910390fd5b60005b81518110156102b657600180600084848151811061020d5761020d610a20565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508060010190507fa29fd8e8b328183429f81e3acc10dc14196777efa4ccd23165f71d4dd027ac1b82828151811061028557610285610a20565b60200260200101516040516102a991906001600160a01b0391909116815260200190565b60405180910390a16101ed565b5050565b3360009081526020819052604090205460ff166102f35760405163b54ecb9b60e01b81526004016102ea90610a36565b60405180910390fd5b60005b81518110156102b657600180600084848151811061031657610316610a20565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508060010190507fa29fd8e8b328183429f81e3acc10dc14196777efa4ccd23165f71d4dd027ac1b82828151811061038e5761038e610a20565b60200260200101516040516103b291906001600160a01b0391909116815260200190565b60405180910390a16102f6565b3360009081526001602052604090205460ff1680156103f057506000356001600160e01b031916637c74376760e11b145b1561048457336000908152600260205260409020546001600160a01b03161561042c5760405163b1e153ab60e01b815260040160405180910390fd5b6001600160a01b038116600081815260016020908152604091829020805460ff1916905590519182527f29beb8aae77ba82cbb9d5a13ac9153539286534ddea0dc0a0aa61c484585a61491015b60405180910390a150565b3360009081526020819052604090205460ff1661042c5760405163b54ecb9b60e01b81526004016102ea90610a36565b3360009081526001602052604090205460ff1680156104e557506000356001600160e01b031916637c74376760e11b145b1561054a57336000908152600260205260409020546001600160a01b0316156105215760405163b1e153ab60e01b815260040160405180910390fd5b6001600160a01b03166000908152602081905260409020805460ff81161560ff19909116179055565b3360009081526020819052604090205460ff166105215760405163b54ecb9b60e01b81526004016102ea90610a36565b3360009081526001602052604090205460ff1680156105ab57506000356001600160e01b031916637c74376760e11b145b156106b457336000908152600260205260409020546001600160a01b0316156105e75760405163b1e153ab60e01b815260040160405180910390fd5b60005b81518110156102b65760006001600084848151811061060b5761060b610a20565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508060010190507f29beb8aae77ba82cbb9d5a13ac9153539286534ddea0dc0a0aa61c484585a61482828151811061068357610683610a20565b60200260200101516040516106a791906001600160a01b0391909116815260200190565b60405180910390a16105ea565b3360009081526020819052604090205460ff166106e45760405163b54ecb9b60e01b81526004016102ea90610a36565b60005b81518110156102b65760006001600084848151811061070857610708610a20565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508060010190507f29beb8aae77ba82cbb9d5a13ac9153539286534ddea0dc0a0aa61c484585a61482828151811061078057610780610a20565b60200260200101516040516107a491906001600160a01b0391909116815260200190565b60405180910390a16106e7565b3360009081526001602052604090205460ff1680156107e257506000356001600160e01b031916637c74376760e11b145b156108d757336000908152600260205260409020546001600160a01b03161561081e5760405163b1e153ab60e01b815260040160405180910390fd5b6001600160a01b0381166000908152600160208181526040808420805460ff191690931790925533835282905290205460ff1661087e5733600090815260026020526040902080546001600160a01b0319166001600160a01b0383161790555b6001600160a01b03811660008181526002602090815260409182902080546001600160a01b0319163317905590519182527fa29fd8e8b328183429f81e3acc10dc14196777efa4ccd23165f71d4dd027ac1b9101610479565b3360009081526020819052604090205460ff1661081e5760405163b54ecb9b60e01b81526004016102ea90610a36565b80356001600160a01b038116811461091e57600080fd5b919050565b60006020828403121561093557600080fd5b61093e82610907565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561096e57600080fd5b823567ffffffffffffffff8082111561098657600080fd5b818501915085601f83011261099a57600080fd5b8135818111156109ac576109ac610945565b8060051b604051601f19603f830116810181811085821117156109d1576109d1610945565b6040529182528482019250838101850191888311156109ef57600080fd5b938501935b82851015610a1457610a0585610907565b845293850193928501926109f4565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6020808252600a908201526927b7363c9027bbb732b960b11b60408201526060019056fea264697066735822122036648192b552cf84ea10cdfbec89d69394a4d1998a556f49b3862d48ced96cf264736f6c63430008130033";

type AllowlistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllowlistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Allowlist__factory extends ContractFactory {
  constructor(...args: AllowlistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Allowlist> {
    return super.deploy(overrides || {}) as Promise<Allowlist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Allowlist {
    return super.attach(address) as Allowlist;
  }
  override connect(signer: Signer): Allowlist__factory {
    return super.connect(signer) as Allowlist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowlistInterface {
    return new utils.Interface(_abi) as AllowlistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Allowlist {
    return new Contract(address, _abi, signerOrProvider) as Allowlist;
  }
}
