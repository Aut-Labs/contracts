/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDAOExpanderFactory,
  IDAOExpanderFactoryInterface,
} from "../IDAOExpanderFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "address",
        name: "autIDAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "daoTypesAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "daoType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "daoAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "market",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pluginRegistry",
        type: "address",
      },
    ],
    name: "deployDAOExpander",
    outputs: [
      {
        internalType: "address",
        name: "_daoExpanderAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDAOExpanderFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IDAOExpanderFactoryInterface {
    return new utils.Interface(_abi) as IDAOExpanderFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDAOExpanderFactory {
    return new Contract(address, _abi, signerOrProvider) as IDAOExpanderFactory;
  }
}
