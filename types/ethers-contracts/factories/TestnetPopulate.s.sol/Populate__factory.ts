/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Populate,
  PopulateInterface,
} from "../../TestnetPopulate.s.sol/Populate";

const _abi = [
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040819052600b805462ff00ff191662010001179055601480547364385e93dd9e55e7b6b4e83f900c142f1b237ce76001600160a01b031990911617905563f877cb1960e01b90526020608452600660a4526550564b5f413160d01b60c452737109709ecfa91a80626ff3989d68f67f5b1dd12d63ffa186498163f877cb1960e4600060405180830381865afa158015620000a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000ca919081019062000459565b604051602001620000dc919062000511565b604051602081830303815290604052620000f6906200052f565b60405160e083901b6001600160e01b03191681526004810191909152602401602060405180830381865afa15801562000133573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000159919062000557565b601580546001600160a01b0319166001600160a01b039290921691909117905560405163f877cb1960e01b8152602060048201526006602482015265282b25afa09960d11b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990829063f877cb1990606401600060405180830381865afa158015620001e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000212919081019062000459565b60405160200162000224919062000511565b6040516020818303038152906040526200023e906200052f565b60405160e083901b6001600160e01b03191681526004810191909152602401602060405180830381865afa1580156200027b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a1919062000557565b601680546001600160a01b0319166001600160a01b039290921691909117905560405163f877cb1960e01b815260206004820152600660248201526550564b5f413360d01b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990829063f877cb1990606401600060405180830381865afa15801562000330573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200035a919081019062000459565b6040516020016200036c919062000511565b60405160208183030381529060405262000386906200052f565b60405160e083901b6001600160e01b03191681526004810191909152602401602060405180830381865afa158015620003c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003e9919062000557565b601780546001600160a01b0319166001600160a01b03929092169190911790553480156200041657600080fd5b5062000589565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200045057818101518382015260200162000436565b50506000910152565b6000602082840312156200046c57600080fd5b81516001600160401b03808211156200048457600080fd5b818401915084601f8301126200049957600080fd5b815181811115620004ae57620004ae6200041d565b604051601f8201601f19908116603f01168101908382118183101715620004d957620004d96200041d565b81604052828152876020848701011115620004f357600080fd5b6200050683602083016020880162000433565b979650505050505050565b600082516200052581846020870162000433565b9190910192915050565b8051602080830151919081101562000551576000198160200360031b1b821691505b50919050565b6000602082840312156200056a57600080fd5b81516001600160a01b03811681146200058257600080fd5b9392505050565b610ca380620005996000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630a9254e414610046578063c040622614610050578063f8ccbf4714610058575b600080fd5b61004e61007f565b005b61004e610319565b600b5461006b9062010000900460ff1681565b604051901515815260200160405180910390f35b46601881905562013881036100b557601980546001600160a01b0319167369015912aa33720b842dcd6ac059ed623f28d9f71790555b6018546005036100e657601980546001600160a01b03191673e041608922d06a4f26c0d4c27d8bcd01daf1f7921790555b6019546001600160a01b03166101395760405162461bcd60e51b8152602060048201526013602482015272155b9cdd5c1c1bdc9d19590815195cdd1b995d606a1b60448201526064015b60405180910390fd5b6101446018546108ea565b600e80546001600160a01b0319166001600160a01b039290921691909117905560185461017090610970565b600b60036101000a8154816001600160a01b0302191690836001600160a01b031602179055506101a16018546109b8565b600c80546001600160a01b0319166001600160a01b03929092169190911790556018546101cd90610a00565b600d80546001600160a01b0319166001600160a01b03929092169190911790556018546101f990610a48565b600f80546001600160a01b0319166001600160a01b03928316179055600b54601554600e54600d54604051632d2a9e7760e21b815292851660048085019190915291851660248401526000604484015260c06064840152602860c48401527f74686973206973207768657265206d6574616461746120697320737570706f7360e484015267656420746f20626560c01b6101048401526084830191909152831660a482015263010000009091049091169063b4aa79dc90610124016020604051808303816000875af11580156102d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f79190610b40565b601380546001600160a01b0319166001600160a01b0392909216919091179055565b60408051600380825260808201909252600091602082016060803683370190505060405163c1978d1f60e01b8152602060048201526002602482015261413160f01b6044820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c1978d1f90606401602060405180830381865afa15801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c39190610b70565b816000815181106103d6576103d6610b89565b602090810291909101015260405163c1978d1f60e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c1978d1f9061042d90600401602080825260029082015261209960f11b604082015260600190565b602060405180830381865afa15801561044a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046e9190610b70565b8160018151811061048157610481610b89565b602090810291909101015260405163c1978d1f60e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c1978d1f906104d890600401602080825260029082015261413360f01b604082015260600190565b602060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610b70565b8160028151811061052c5761052c610b89565b602002602001018181525050600080600b60039054906101000a90046001600160a01b03166001600160a01b031663b4aa79dc600080516020610c4e83398151915260001c6001600160a01b031663ffa186498660008151811061059257610592610b89565b60200260200101516040518263ffffffff1660e01b81526004016105b891815260200190565b602060405180830381865afa1580156105d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f99190610b40565b600e54600d5460405160e085901b6001600160e01b03191681526001600160a01b03938416600482015291831660248301526000604483015260c06064830152601960c48301527f746869732069732061206d6574616461746120737472696e670000000000000060e4830152600960848301529190911660a4820152610104016020604051808303816000875af1158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd9190610b40565b90505b82518210156108e5576106ea6040518060600160405280602b8152602001610c23602b9139610a90565b6107aa60405180604001604052806006815260200165037afb7901d160d51b815250600080516020610c4e83398151915260001c6001600160a01b031663ffa1864986868151811061073e5761073e610b89565b60200260200101516040518263ffffffff1660e01b815260040161076491815260200190565b602060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a59190610b40565b610ad6565b6107cb6040518060600160405280602b8152602001610c23602b9139610a90565b600080516020610c4e83398151915260001c6001600160a01b031663ce817d478484815181106107fd576107fd610b89565b60200260200101516040518263ffffffff1660e01b815260040161082391815260200190565b600060405180830381600087803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b505050506108766040518060600160405280602b8152602001610c23602b9139610a90565b600080516020610c4e83398151915260001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108c257600080fd5b505af11580156108d6573d6000803e3d6000fd5b505050508160010191506106c0565b505050565b60008160010361090f5750731111111111111111111111111111111111111111919050565b816002036109325750732222222222222222222222222222222222222222919050565b60405162461bcd60e51b8152602060048201526013602482015272155b9cdd5c1c1bdc9d19590818da185a5b9251606a1b6044820152606401610130565b6000816001036109955750733333333333333333333333333333333333333333919050565b816002036109325750734444444444444444444444444444444444444444919050565b6000816001036109dd5750735555555555555555555555555555555555555555919050565b816002036109325750736666666666666666666666666666666666666666919050565b600081600103610a255750737777777777777777777777777777777777777777919050565b816002036109325750738888888888888888888888888888888888888888919050565b600081600103610a6d5750739999999999999999999999999999999999999999919050565b81600203610932575073aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa919050565b610ad381604051602401610aa49190610be5565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610b1f565b50565b610b1b8282604051602401610aec929190610bf8565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610b1f565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208284031215610b5257600080fd5b81516001600160a01b0381168114610b6957600080fd5b9392505050565b600060208284031215610b8257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b81811015610bc557602081850181015186830182015201610ba9565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610b696020830184610b9f565b604081526000610c0b6040830185610b9f565b905060018060a01b0383166020830152939250505056fe23232323232323232323232323232323232323232323232323232323232323232323232323232323232323885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220181df6fe779fa4b16d67b1427b62f5edb49006c5ea2c79526602a5eda2995e1164736f6c63430008130033";

type PopulateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PopulateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Populate__factory extends ContractFactory {
  constructor(...args: PopulateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Populate> {
    return super.deploy(overrides || {}) as Promise<Populate>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Populate {
    return super.attach(address) as Populate;
  }
  override connect(signer: Signer): Populate__factory {
    return super.connect(signer) as Populate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PopulateInterface {
    return new utils.Interface(_abi) as PopulateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Populate {
    return new Contract(address, _abi, signerOrProvider) as Populate;
  }
}
