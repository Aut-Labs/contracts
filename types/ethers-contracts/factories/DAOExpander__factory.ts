/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAOExpander, DAOExpanderInterface } from "../DAOExpander";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_autAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daoTypes",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_daoType",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_daoAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_market",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadata",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_commitment",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_pluginRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "AdminMemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "AdminMemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CommitmentSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DiscordServerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MarketSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MetadataUriUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "moduleId",
        type: "uint256",
      },
    ],
    name: "ModuleActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "UrlAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "UrlRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "moduleId",
        type: "uint256",
      },
    ],
    name: "activateModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "adminAddr",
        type: "address[]",
      },
    ],
    name: "addAdmins",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "addURL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "role",
        type: "uint256",
      },
    ],
    name: "canJoin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmins",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAutIDAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDAOData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "contractType",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "daoAddress",
            type: "address",
          },
        ],
        internalType: "struct IDAOExpanderData.DAOExpanssionData",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURLs",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "isMemberOfOriginalDAO",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "moduleId",
        type: "uint256",
      },
    ],
    name: "isModuleActivated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "isURLListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMember",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "role",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "memberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataUrl",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "removeURL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "setCommitment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "setMetadataUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "onboardingPlugin",
        type: "address",
      },
    ],
    name: "setOnboardingStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027d1380380620027d1833981016040819052620000349162000606565b6001600160a01b038516620000905760405162461bcd60e51b815260206004820152601360248201527f4d697373696e672044414f20416464726573730000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038716620000e85760405162461bcd60e51b815260206004820152601960248201527f4d697373696e672044414f205479706573206164647265737300000000000000604482015260640162000087565b604051634bcd303f60e11b8152600481018790526000906001600160a01b0389169063979a607e90602401602060405180830381865afa15801562000131573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015791906200075a565b6001600160a01b031603620001af5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206d656d626572736869702074797065000000000000000000604482015260640162000087565b604051634bcd303f60e11b8152600481018790526001600160a01b0388169063979a607e90602401602060405180830381865afa158015620001f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021b91906200075a565b6040516307358f4160e31b81526001600160a01b0387811660048301528b8116602483015291909116906339ac7a0890604401602060405180830381865afa1580156200026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029291906200077f565b620002e05760405162461bcd60e51b815260206004820181905260248201527f41757449443a204e6f742061206d656d626572206f6620746869732044414f21604482015260640162000087565b6040805180820182528781526001600160a01b038781166020928301819052600c8a9055600d80546001600160a01b031990811690921790558c821660008181526004909452938320805460ff191660019081179091556003805491820181559093527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90920180548316909317909255600e80549091169189169190911790556200038c84620003d7565b600080546001600160a01b0319166001600160a01b038a16179055620003b28262000458565b620003bd83620004dd565b620003c88162000559565b505050505050505050620008fe565b600081118015620003e85750600481105b620004275760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081b585c9ad95d60921b604482015260640162000087565b60098190556040517f4086cd87c923de65497ff5918262360a3284451fdc7ee5597eaa90abaf2345f490600090a150565b600081118015620004695750600b81105b620004ac5760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a590818dbdb5b5a5d1b595b9d60721b604482015260640162000087565b60088190556040517f6e94e6036cb0a3a2ee59e8687248332f61e0e9c059b4946908091e2ff873649f90600090a150565b60008151116200051e5760405162461bcd60e51b815260206004820152600b60248201526a1a5b9d985b1a59081d5c9b60aa1b604482015260640162000087565b60076200052c828262000832565b506040517fd7a0756058a289c0ef8ae9d83008cd5710c64575760271d6f2af16f7b4af140190600090a150565b6001600160a01b038116620005b15760405162461bcd60e51b815260206004820152601660248201527f696e76616c696420706c7567696e526567697374727900000000000000000000604482015260640162000087565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b0381168114620005eb57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060006101208a8c0312156200062657600080fd5b620006318a620005d3565b98506200064160208b01620005d3565b97506200065160408b01620005d3565b965060608a015195506200066860808b01620005d3565b60a08b015160c08c015191965094506001600160401b03808211156200068d57600080fd5b818c0191508c601f830112620006a257600080fd5b815181811115620006b757620006b7620005f0565b604051601f8201601f19908116603f01168101908382118183101715620006e257620006e2620005f0565b816040528281528f6020848701011115620006fc57600080fd5b600093505b828410156200072457602084860101516020858301015260208401935062000701565b600060208483010152809750505050505060e08a015191506200074b6101008b01620005d3565b90509295985092959850929598565b6000602082840312156200076d57600080fd5b6200077882620005d3565b9392505050565b6000602082840312156200079257600080fd5b815180151581146200077857600080fd5b600181811c90821680620007b857607f821691505b602082108103620007d957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200082d57600081815260208120601f850160051c81016020861015620008085750805b601f850160051c820191505b81811015620008295782815560010162000814565b5050505b505050565b81516001600160401b038111156200084e576200084e620005f0565b62000866816200085f8454620007a3565b84620007df565b602080601f8311600181146200089e5760008415620008855750858301515b600019600386901b1c1916600185901b17855562000829565b600085815260208120601f198616915b82811015620008cf57888601518255948401946001909101908401620008ae565b5085821015620008ee5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ec3806200090e6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806369130c8d116100f95780639c54df6411610097578063be9cd05211610071578063be9cd052146103c1578063cd29c71a146103d4578063d103449c146103e9578063db83814e146103fc57600080fd5b80639c54df6414610378578063a230c5241461038b578063b5a8a3a1146103ae57600080fd5b806380f55605116100d357806380f5560514610338578063810e8c041461034157806388098e3a146103545780638e99076a1461036557600080fd5b806369130c8d1461030a578063704802751461031d5780637c0f6b351461033057600080fd5b806324d7806c116101665780633b4da69f116101405780633b4da69f146102be57806341dcea91146102d15780635daf08ca146102e457806368839d28146102f757600080fd5b806324d7806c1461027e5780632a79c611146102a157806331ae450b146102a957600080fd5b806311aee380116101a257806311aee3801461021957806314bfd6d01461022b5780631785f53c14610256578063206110db1461026957600080fd5b806303ffe330146101c957806310972e90146101f15780631130630c14610204575b600080fd5b6101dc6101d7366004611805565b610451565b60405190151581526020015b60405180910390f35b6101dc6101ff366004611831565b61065b565b6102176102123660046118e2565b6106b1565b005b6001545b6040519081526020016101e8565b61023e610239366004611831565b6106f5565b6040516001600160a01b0390911681526020016101e8565b610217610264366004611962565b61071f565b610271610841565b6040516101e891906119d6565b6101dc61028c366004611962565b60046020526000908152604090205460ff1681565b60085461021d565b6102b161091a565b6040516101e89190611a38565b6102176102cc366004611805565b61097c565b600a5461023e906001600160a01b031681565b61023e6102f2366004611831565b610a15565b6101dc6103053660046118e2565b610a25565b610217610318366004611831565b610aa4565b61021761032b366004611962565b610adc565b6102b1610bf8565b61021d60095481565b61021761034f3660046118e2565b610c58565b6000546001600160a01b031661023e565b6101dc610373366004611962565b610c90565b6102b1610386366004611a85565b610d77565b6101dc610399366004611962565b60026020526000908152604090205460ff1681565b6102176103bc366004611962565b610f74565b6102176103cf366004611831565b610fc5565b6103dc610ffd565b6040516101e89190611b37565b6102176103f73660046118e2565b61108b565b60408051808201825260008082526020918201528151808301909252600c548252600d546001600160a01b03169082015260408051825181526020928301516001600160a01b031692810192909252016101e8565b600f546000906001600160a01b03166105835761046d83610c90565b8061057c5750600f546001600160a01b0316158015906104ff5750600f60009054906101000a90046001600160a01b03166001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190611b4a565b801561057c5750600f54604051634f2b51c760e01b81526001600160a01b0385811660048301526024820185905290911690634f2b51c7906044015b602060405180830381865afa158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190611b4a565b9050610655565b600f546001600160a01b03161580159061060f5750600f60009054906101000a90046001600160a01b03166001600160a01b03166322f3e2d46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190611b4a565b1561061c57506000610655565b600f54604051634f2b51c760e01b81526001600160a01b0385811660048301526024820185905290911690634f2b51c79060440161053b565b92915050565b6000805b600b548110156106a85782600b828154811061067d5761067d611b6c565b9060005260206000200154036106965750600192915050565b806106a081611b98565b91505061065f565b50600092915050565b3360009081526004602052604090205460ff166106e95760405162461bcd60e51b81526004016106e090611bb1565b60405180910390fd5b6106f2816110c3565b50565b6003818154811061070557600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526004602052604090205460ff1661074e5760405162461bcd60e51b81526004016106e090611bb1565b60005b6003548110156107e857816001600160a01b03166003828154811061077857610778611b6c565b6000918252602090912001546001600160a01b0316036107d6576000600382815481106107a7576107a7611b6c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b806107e081611b98565b915050610751565b506001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527ffa8ae95b9a4f666c3b5f27d11b5c2b9fe1045279f674e7a78ca8b087cba3802591015b60405180910390a150565b60606005805480602002602001604051908101604052809291908181526020016000905b8282101561091157838290600052602060002001805461088490611bd8565b80601f01602080910402602001604051908101604052809291908181526020018280546108b090611bd8565b80156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b505050505081526020019060010190610865565b50505050905090565b6060600380548060200260200160405190810160405280929190818152602001828054801561097257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610954575b5050505050905090565b6000546001600160a01b031633146109c35760405162461bcd60e51b815260206004820152600a60248201526913db9b1e48105d5d125160b21b60448201526064016106e0565b6109cd8282610451565b610a075760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b60448201526064016106e0565b610a11828261113b565b5050565b6001818154811061070557600080fd5b6005546000908103610a3957506000919050565b81516020808401919091206000818152600690925260409091205415610a625750600192915050565b806005600081548110610a7757610a77611b6c565b90600052602060002001604051610a8e9190611c12565b6040518091039020036106a85750600192915050565b3360009081526004602052604090205460ff16610ad35760405162461bcd60e51b81526004016106e090611bb1565b6106f28161126d565b3360009081526004602052604090205460ff16610b0b5760405162461bcd60e51b81526004016106e090611bb1565b6001600160a01b03811660009081526002602052604090205460ff16610b625760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b2b6b132b960a11b60448201526064016106e0565b6001600160a01b0381166000818152600460209081526040808320805460ff191660019081179091556003805491820181559093527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90920180546001600160a01b0319168417905590519182527fa06b993f17e63959ef40ec8755fc98020c50e9d2794ce5fc0886a7792a9fbaec9101610836565b60606001805480602002602001604051908101604052809291908181526020018280548015610972576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610954575050505050905090565b3360009081526004602052604090205460ff16610c875760405162461bcd60e51b81526004016106e090611bb1565b6106f2816113fa565b600e54600c54604051634bcd303f60e11b815260048101919091526000916001600160a01b03169063979a607e90602401602060405180830381865afa158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d029190611c88565b600d546040516307358f4160e31b81526001600160a01b03918216600482015284821660248201529116906339ac7a0890604401602060405180830381865afa158015610d53573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106559190611b4a565b3360009081526004602052604090205460609060ff16610da95760405162461bcd60e51b81526004016106e090611bb1565b60005b8251811015610f6d5760026000848381518110610dcb57610dcb611b6c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610e1d57828181518110610e0857610e08611b6c565b60006020918202929092010152600101610dac565b60046000848381518110610e3357610e33611b6c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610f65576003838281518110610e7257610e72611b6c565b60209081029190910181015182546001808201855560009485529284200180546001600160a01b0319166001600160a01b0390921691909117905584519091600491869085908110610ec657610ec6611b6c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa06b993f17e63959ef40ec8755fc98020c50e9d2794ce5fc0886a7792a9fbaec838281518110610f3857610f38611b6c565b6020026020010151604051610f5c91906001600160a01b0391909116815260200190565b60405180910390a15b600101610dac565b5090919050565b3360009081526004602052604090205460ff16610fa35760405162461bcd60e51b81526004016106e090611bb1565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526004602052604090205460ff16610ff45760405162461bcd60e51b81526004016106e090611bb1565b6106f2816115fa565b6007805461100a90611bd8565b80601f016020809104026020016040519081016040528092919081815260200182805461103690611bd8565b80156110835780601f1061105857610100808354040283529160200191611083565b820191906000526020600020905b81548152906001019060200180831161106657829003601f168201915b505050505081565b3360009081526004602052604090205460ff166110ba5760405162461bcd60e51b81526004016106e090611bb1565b6106f28161167c565b60008151116111025760405162461bcd60e51b815260206004820152600b60248201526a1a5b9d985b1a59081d5c9b60aa1b60448201526064016106e0565b600761110e8282611cf4565b506040517fd7a0756058a289c0ef8ae9d83008cd5710c64575760271d6f2af16f7b4af140190600090a150565b6000546001600160a01b031633146111825760405162461bcd60e51b815260206004820152600a60248201526913db9b1e48105d5d125160b21b60448201526064016106e0565b6001600160a01b03821660009081526002602052604090205460ff16156111de5760405162461bcd60e51b815260206004820152601060248201526f20b63932b0b23c90309036b2b6b132b960811b60448201526064016106e0565b6001600160a01b038216600081815260026020526040808220805460ff19166001908117909155805480820182559083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191690931790925590517f94d9b0a056867efca93631b338c7fde3befc3f54db36b90b8456b069385c30be9190a15050565b600a5460408051631055995d60e31b815290516000926001600160a01b0316916382accae89160048083019260209291908290030181865afa1580156112b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112db9190611c88565b6040516339076b2160e11b8152600481018490529091506000906001600160a01b0383169063720ed64290602401600060405180830381865afa158015611326573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261134e9190810190611db4565b51511161138e5760405162461bcd60e51b815260206004820152600e60248201526d696e76616c6964206d6f64756c6560901b60448201526064016106e0565b600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9018290556040518281527fc1866ccaad33ac161f17d9db7a528f0c819a376e1cad17ba2d5c9b49a7eba2cd9060200160405180910390a15050565b61140381610a25565b6114425760405162461bcd60e51b815260206004820152601060248201526f1d5c9b08191bd95cdb9d08195e1a5cdd60821b60448201526064016106e0565b80516020808301919091206000818152600690925260409091205460055461146c90600190611e64565b811461157d57600580546000919061148690600190611e64565b8154811061149657611496611b6c565b9060005260206000200180546114ab90611bd8565b80601f01602080910402602001604051908101604052809291908181526020018280546114d790611bd8565b80156115245780601f106114f957610100808354040283529160200191611524565b820191906000526020600020905b81548152906001019060200180831161150757829003601f168201915b50505050509050600081805190602001209050826006600083815260200190815260200160002081905550816005848154811061156357611563611b6c565b9060005260206000200190816115799190611cf4565b5050505b600580548061158e5761158e611e77565b6001900381819060005260206000200160006115aa91906117a2565b905560008281526006602052604080822091909155517f906b87aebf1e5cc40a1cebd6811c88addf04309f8c8ce71c7d6449d343e4ad09906115ed908590611b37565b60405180910390a1505050565b60008111801561160a5750600b81105b61164b5760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a590818dbdb5b5a5d1b595b9d60721b60448201526064016106e0565b60088190556040517f6e94e6036cb0a3a2ee59e8687248332f61e0e9c059b4946908091e2ff873649f90600090a150565b80516020820120600554600090156116e4576000828152600660205260409020541515806116db57508160056000815481106116ba576116ba611b6c565b906000526020600020016040516116d19190611c12565b6040518091039020145b156116e4575060015b80156117275760405162461bcd60e51b815260206004820152601260248201527175726c20616c72656164792065786973747360701b60448201526064016106e0565b600580546000848152600660205260408120829055600182018355919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0016117728482611cf4565b507f21d5cca3f840791ade736f51501810c14b8b01791ac4357713ed763ccbbaf3a9836040516115ed9190611b37565b5080546117ae90611bd8565b6000825580601f106117be575050565b601f0160209004906000526020600020908101906106f291905b808211156117ec57600081556001016117d8565b5090565b6001600160a01b03811681146106f257600080fd5b6000806040838503121561181857600080fd5b8235611823816117f0565b946020939093013593505050565b60006020828403121561184357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156118835761188361184a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156118b2576118b261184a565b604052919050565b600067ffffffffffffffff8211156118d4576118d461184a565b50601f01601f191660200190565b6000602082840312156118f457600080fd5b813567ffffffffffffffff81111561190b57600080fd5b8201601f8101841361191c57600080fd5b803561192f61192a826118ba565b611889565b81815285602083850101111561194457600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020828403121561197457600080fd5b813561197f816117f0565b9392505050565b60005b838110156119a1578181015183820152602001611989565b50506000910152565b600081518084526119c2816020860160208601611986565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611a2b57603f19888603018452611a198583516119aa565b945092850192908501906001016119fd565b5092979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611a795783516001600160a01b031683529284019291840191600101611a54565b50909695505050505050565b60006020808385031215611a9857600080fd5b823567ffffffffffffffff80821115611ab057600080fd5b818501915085601f830112611ac457600080fd5b813581811115611ad657611ad661184a565b8060051b9150611ae7848301611889565b8181529183018401918481019088841115611b0157600080fd5b938501935b83851015611b2b5784359250611b1b836117f0565b8282529385019390850190611b06565b98975050505050505050565b60208152600061197f60208301846119aa565b600060208284031215611b5c57600080fd5b8151801515811461197f57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611baa57611baa611b82565b5060010190565b6020808252600d908201526c4e6f7420616e2061646d696e2160981b604082015260600190565b600181811c90821680611bec57607f821691505b602082108103611c0c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808354611c2081611bd8565b60018281168015611c385760018114611c4d57611c7c565b60ff1984168752821515830287019450611c7c565b8760005260208060002060005b85811015611c735781548a820152908401908201611c5a565b50505082870194505b50929695505050505050565b600060208284031215611c9a57600080fd5b815161197f816117f0565b601f821115611cef57600081815260208120601f850160051c81016020861015611ccc5750805b601f850160051c820191505b81811015611ceb57828155600101611cd8565b5050505b505050565b815167ffffffffffffffff811115611d0e57611d0e61184a565b611d2281611d1c8454611bd8565b84611ca5565b602080601f831160018114611d575760008415611d3f5750858301515b600019600386901b1c1916600185901b178555611ceb565b600085815260208120601f198616915b82811015611d8657888601518255948401946001909101908401611d67565b5085821015611da45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808385031215611dc757600080fd5b825167ffffffffffffffff80821115611ddf57600080fd5b9084019060408287031215611df357600080fd5b611dfb611860565b825182811115611e0a57600080fd5b83019150601f82018713611e1d57600080fd5b8151611e2b61192a826118ba565b8181528886838601011115611e3f57600080fd5b611e4e82878301888701611986565b8252509183015192820192909252949350505050565b8181038181111561065557610655611b82565b634e487b7160e01b600052603160045260246000fdfea26469706673582212204cb04707e006843513bbf76413fb54915f1a336981938c19c2c83be15203672e64736f6c63430008130033";

type DAOExpanderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOExpanderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOExpander__factory extends ContractFactory {
  constructor(...args: DAOExpanderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deployer: string,
    _autAddr: string,
    _daoTypes: string,
    _daoType: BigNumberish,
    _daoAddr: string,
    _market: BigNumberish,
    _metadata: string,
    _commitment: BigNumberish,
    _pluginRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<DAOExpander> {
    return super.deploy(
      _deployer,
      _autAddr,
      _daoTypes,
      _daoType,
      _daoAddr,
      _market,
      _metadata,
      _commitment,
      _pluginRegistry,
      overrides || {}
    ) as Promise<DAOExpander>;
  }
  override getDeployTransaction(
    _deployer: string,
    _autAddr: string,
    _daoTypes: string,
    _daoType: BigNumberish,
    _daoAddr: string,
    _market: BigNumberish,
    _metadata: string,
    _commitment: BigNumberish,
    _pluginRegistry: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _deployer,
      _autAddr,
      _daoTypes,
      _daoType,
      _daoAddr,
      _market,
      _metadata,
      _commitment,
      _pluginRegistry,
      overrides || {}
    );
  }
  override attach(address: string): DAOExpander {
    return super.attach(address) as DAOExpander;
  }
  override connect(signer: Signer): DAOExpander__factory {
    return super.connect(signer) as DAOExpander__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOExpanderInterface {
    return new utils.Interface(_abi) as DAOExpanderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOExpander {
    return new Contract(address, _abi, signerOrProvider) as DAOExpander;
  }
}
