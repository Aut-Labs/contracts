/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SWLegacyDAO,
  SWLegacyDAOInterface,
} from "../../SWLegacyCommunity.sol/SWLegacyDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610100806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a230c524146037578063ca6d56dc14606b575b600080fd5b60576042366004609c565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b609a6076366004609c565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b005b60006020828403121560ad57600080fd5b81356001600160a01b038116811460c357600080fd5b939250505056fea26469706673582212202e91ce6a7f0a0eb699b6ab58e1928dfac78b82ba702c2a4bfe178a6dccfbf6c864736f6c63430008130033";

type SWLegacyDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SWLegacyDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SWLegacyDAO__factory extends ContractFactory {
  constructor(...args: SWLegacyDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SWLegacyDAO> {
    return super.deploy(overrides || {}) as Promise<SWLegacyDAO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SWLegacyDAO {
    return super.attach(address) as SWLegacyDAO;
  }
  override connect(signer: Signer): SWLegacyDAO__factory {
    return super.connect(signer) as SWLegacyDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SWLegacyDAOInterface {
    return new utils.Interface(_abi) as SWLegacyDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SWLegacyDAO {
    return new Contract(address, _abi, signerOrProvider) as SWLegacyDAO;
  }
}
