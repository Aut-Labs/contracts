/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NovaRegistry, NovaRegistryInterface } from "../NovaRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
      {
        internalType: "address",
        name: "_autIDAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_novaFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pluginRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyDeployedANova",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDeployer",
    type: "error",
  },
  {
    inputs: [],
    name: "Unallowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nova",
        type: "address",
      },
    ],
    name: "NovaDeployed",
    type: "event",
  },
  {
    inputs: [],
    name: "autIDAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "market",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "deployNova",
    outputs: [
      {
        internalType: "address",
        name: "_nova",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "getNovaByDeployer",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNovas",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "novas",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "allowListAddress_",
        type: "address",
      },
    ],
    name: "setAllowListAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b6c380380610b6c83398101604081905261002f91610295565b6001600160a01b03831661008a5760405162461bcd60e51b815260206004820152601860248201527f41757449442041646472657373206e6f7420706173736564000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166100e05760405162461bcd60e51b815260206004820152601e60248201527f4e6f7661466163746f72792061646472657373206e6f742070617373656400006044820152606401610081565b6001600160a01b0381166101405760405162461bcd60e51b815260206004820152602160248201527f506c7567696e52656769737472792061646472657373206e6f742070617373656044820152601960fa1b6064820152608401610081565b600380546001600160a01b038581166001600160a01b03199283161790925560068054858416908316179055600080548216878416179055600480549284169282168317815560058054909216331790915560408051631055995d60e31b815290516382accae8928281019260209291908290030181865afa1580156101ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ee91906102e9565b6001600160a01b031663d36ac27c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561022b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024f91906102e9565b600780546001600160a01b0319166001600160a01b03929092169190911790555061030b92505050565b80516001600160a01b038116811461029057600080fd5b919050565b600080600080608085870312156102ab57600080fd5b6102b485610279565b93506102c260208601610279565b92506102d060408601610279565b91506102de60608601610279565b905092959194509250565b6000602082840312156102fb57600080fd5b61030482610279565b9392505050565b6108528061031a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063bcae17c211610066578063bcae17c214610128578063ce1b815f1461013b578063cf349d891461014c578063de90ccca1461015f578063e3d854a31461017257600080fd5b806328e631531461009857806333171b93146100b657806341dcea91146100cb578063572b6c05146100f6575b600080fd5b6100a0610185565b6040516100ad9190610656565b60405180910390f35b6100c96100c43660046106bb565b6101e7565b005b6004546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100ad565b6101186101043660046106bb565b6000546001600160a01b0391821691161490565b60405190151581526020016100ad565b6100de6101363660046106df565b610234565b6000546001600160a01b03166100de565b6100a061015a3660046106bb565b610582565b6003546100de906001600160a01b031681565b6100de610180366004610761565b6105f8565b606060028054806020026020016040519081016040528092919081815260200182805480156101dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101bf575b5050505050905090565b6005546001600160a01b031633146102125760405163618bbdd560e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600080851180156102455750600485105b6102875760405162461bcd60e51b815260206004820152600e60248201526d13585c9ad95d081a5b9d985b1a5960921b60448201526064015b60405180910390fd5b826102cb5760405162461bcd60e51b8152602060048201526014602482015273135a5cdcda5b99c813595d1859185d184815549360621b604482015260640161027e565b6000821180156102db5750600b82105b61031c5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590818dbdb5b5a5d1b595b9d60721b604482015260640161027e565b6007546001600160a01b031615610411576007546001600160a01b031663babcc539610346610622565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561038a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ae919061077a565b6103cb5760405163e087598d60e01b815260040160405180910390fd5b6000600160006103d9610622565b6001600160a01b031681526020810191909152604001600020541161041157604051631834f49160e21b815260040160405180910390fd5b6006546000906001600160a01b031663b4aa79dc61042d610622565b600354600480546040516001600160e01b031960e087901b16815261046a94936001600160a01b03908116938e938e938e938e939216910161079c565b6020604051808303816000875af1158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad91906107ff565b600280546001808201835560009283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b0319166001600160a01b038516179055919250610505610622565b6001600160a01b039081168252602080830193909352604091820160009081208054600181018255908252908490200180546001600160a01b031916918516918217905590519081527fafab1707766bafe96926219991cab2ba53caeb9318740895c42aff8b9e3ba22b910160405180910390a195945050505050565b6001600160a01b0381166000908152600160209081526040918290208054835181840281018401909452808452606093928301828280156105ec57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105ce575b50505050509050919050565b6002818154811061060857600080fd5b6000918252602090912001546001600160a01b0316905081565b60006014361080159061063f57506000546001600160a01b031633145b15610651575060131936013560601c90565b503390565b6020808252825182820181905260009190848201906040850190845b818110156106975783516001600160a01b031683529284019291840191600101610672565b50909695505050505050565b6001600160a01b03811681146106b857600080fd5b50565b6000602082840312156106cd57600080fd5b81356106d8816106a3565b9392505050565b600080600080606085870312156106f557600080fd5b84359350602085013567ffffffffffffffff8082111561071457600080fd5b818701915087601f83011261072857600080fd5b81358181111561073757600080fd5b88602082850101111561074957600080fd5b95986020929092019750949560400135945092505050565b60006020828403121561077357600080fd5b5035919050565b60006020828403121561078c57600080fd5b815180151581146106d857600080fd5b600060018060a01b03808a168352808916602084015287604084015260c060608401528560c0840152858760e0850137600060e0878501015260e0601f19601f880116840101915084608084015280841660a08401525098975050505050505050565b60006020828403121561081157600080fd5b81516106d8816106a356fea264697066735822122090be01098b5a8ff7d751fb220b693424454964c40530d56d7358859fea856e5064736f6c63430008130033";

type NovaRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NovaRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NovaRegistry__factory extends ContractFactory {
  constructor(...args: NovaRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    trustedForwarder: string,
    _autIDAddr: string,
    _novaFactory: string,
    _pluginRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<NovaRegistry> {
    return super.deploy(
      trustedForwarder,
      _autIDAddr,
      _novaFactory,
      _pluginRegistry,
      overrides || {}
    ) as Promise<NovaRegistry>;
  }
  override getDeployTransaction(
    trustedForwarder: string,
    _autIDAddr: string,
    _novaFactory: string,
    _pluginRegistry: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      trustedForwarder,
      _autIDAddr,
      _novaFactory,
      _pluginRegistry,
      overrides || {}
    );
  }
  override attach(address: string): NovaRegistry {
    return super.attach(address) as NovaRegistry;
  }
  override connect(signer: Signer): NovaRegistry__factory {
    return super.connect(signer) as NovaRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NovaRegistryInterface {
    return new utils.Interface(_abi) as NovaRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NovaRegistry {
    return new Contract(address, _abi, signerOrProvider) as NovaRegistry;
  }
}
