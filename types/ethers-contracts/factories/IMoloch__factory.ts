/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IMoloch, IMolochInterface } from "../IMoloch";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegateKey",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "shares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loot",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "highestIndexYesVote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jailed",
            type: "uint256",
          },
        ],
        internalType: "struct IMoloch.Member",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IMoloch__factory {
  static readonly abi = _abi;
  static createInterface(): IMolochInterface {
    return new utils.Interface(_abi) as IMolochInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMoloch {
    return new Contract(address, _abi, signerOrProvider) as IMoloch;
  }
}
