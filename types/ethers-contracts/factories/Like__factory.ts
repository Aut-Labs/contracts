/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Like, LikeInterface } from "../Like";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwared",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Liked",
    type: "event",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isLiked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "like",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161025a38038061025a83398101604081905261002f91610050565b600080546001600160a01b0319166001600160a01b03831617905550610080565b60006020828403121561006257600080fd5b81516001600160a01b038116811461007957600080fd5b9392505050565b6101cb8061008f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063572b6c0514610051578063a523b88a14610088578063ca3e936114610092578063ce1b815f146100b5575b600080fd5b61007361005f366004610165565b6000546001600160a01b0391821691161490565b60405190151581526020015b60405180910390f35b6100906100d0565b005b6100736100a0366004610165565b60016020526000908152604090205460ff1681565b6000546040516001600160a01b03909116815260200161007f565b60018060006100dd610131565b6001600160a01b03168152602081019190915260409081016000908120805460ff191693151593909317909255517f33d1a1e4dc2160670205149f5825226a4cbae055a8b179430bb955bc901f9fb09190a1565b60006014361080159061014e57506000546001600160a01b031633145b15610160575060131936013560601c90565b503390565b60006020828403121561017757600080fd5b81356001600160a01b038116811461018e57600080fd5b939250505056fea2646970667358221220d59effe9d6bf8bbd48f79559d32b9dcc9170f0985c03404778a4af303b2939c264736f6c63430008130033";

type LikeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LikeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Like__factory extends ContractFactory {
  constructor(...args: LikeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    trustedForwared: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Like> {
    return super.deploy(trustedForwared, overrides || {}) as Promise<Like>;
  }
  override getDeployTransaction(
    trustedForwared: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwared, overrides || {});
  }
  override attach(address: string): Like {
    return super.attach(address) as Like;
  }
  override connect(signer: Signer): Like__factory {
    return super.connect(signer) as Like__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LikeInterface {
    return new utils.Interface(_abi) as LikeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Like {
    return new Contract(address, _abi, signerOrProvider) as Like;
  }
}
