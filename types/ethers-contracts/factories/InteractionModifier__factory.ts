/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  InteractionModifier,
  InteractionModifierInterface,
} from "../InteractionModifier";

const _abi = [
  {
    inputs: [],
    name: "AuthorityExpected",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "repAlgo",
        type: "address",
      },
    ],
    name: "LocalRepALogChangedFor",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NewLocalRepAlgo_",
        type: "address",
      },
    ],
    name: "changeInUseLocalRep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentReputationAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastReputationAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class InteractionModifier__factory {
  static readonly abi = _abi;
  static createInterface(): InteractionModifierInterface {
    return new utils.Interface(_abi) as InteractionModifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InteractionModifier {
    return new Contract(address, _abi, signerOrProvider) as InteractionModifier;
  }
}
