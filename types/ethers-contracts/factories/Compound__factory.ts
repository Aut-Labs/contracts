/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Compound, CompoundInterface } from "../Compound";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "accountAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ca6d56dc1461003b578063dce1544914610083575b600080fd5b610081610049366004610114565b6001600160a01b03166000818152602081815260408220805460018101825590835291200180546001600160a01b0319169091179055565b005b610096610091366004610136565b6100b2565b6040516001600160a01b03909116815260200160405180910390f35b6001600160a01b03821660009081526020819052604081208054839081106100dc576100dc610160565b6000918252602090912001546001600160a01b03169392505050565b80356001600160a01b038116811461010f57600080fd5b919050565b60006020828403121561012657600080fd5b61012f826100f8565b9392505050565b6000806040838503121561014957600080fd5b610152836100f8565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b9d299e25e11ab154230583ec0eb5ae6f574c084ec0ea47612b5bb1edacf00c464736f6c63430008130033";

type CompoundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Compound__factory extends ContractFactory {
  constructor(...args: CompoundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Compound> {
    return super.deploy(overrides || {}) as Promise<Compound>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Compound {
    return super.attach(address) as Compound;
  }
  override connect(signer: Signer): Compound__factory {
    return super.connect(signer) as Compound__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundInterface {
    return new utils.Interface(_abi) as CompoundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Compound {
    return new Contract(address, _abi, signerOrProvider) as Compound;
  }
}
